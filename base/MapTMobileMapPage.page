<apex:page showHeader="false" sidebar="false" Controller="MapTMobileMapPageController" standardStyleSheets="false" id="page" docType="HTML-5.0" deferLastCommandUntilReady="false">
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <!-- include -->
  <apex:includeScript value="https://maps.googleapis.com/maps/api/js?key={!HTMLENCODE($Setup.mtApiKeySettings__c.mtGoogleApiKey__c)}&libraries=places,geometry&channel=GMPSB_locatorplus_v2_cABCDE&language=ja" />
  <apex:includeScript value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadJs/handlebars.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadJs/jquery.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadJs/markerclusterer.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadJs/moment.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadJs/jquery.datetimepicker.full.min.js')}" />
  <apex:includeScript value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadJs/jquery.multiselect.js')}" />
  <apex:stylesheet value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadCss/jquery.datetimepicker.css')}" />
  <apex:stylesheet value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadCss/bootstrap.min.css')}" />
  <apex:stylesheet value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadCss/lightpick.css')}" />
  <apex:stylesheet value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadCss/jquery.multiselect.css')}" />
  <apex:stylesheet value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadCss/fontsDroidSans.css')}" />
  <apex:stylesheet value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_loadCss/fontsRoboto.css')}" />
  <!-- Salesforceのjsライブラリをインクルードする -->
  <script src="../../soap/ajax/58.0/connection.js" type="text/javascript"></script>
  <script src="../../soap/ajax/58.0/apex.js" type="text/javascript"></script>
  <!-- component -->
  <c:MobileMapPage_DatePicker />
  <c:MobileMapPage />
  <c:MapTechFreezePage />
  <c:MapTechStyle />
  <!-- errorview -->
  <apex:outputPanel rendered="{!mtu == null}">
    <div>MapTechユーザライセンスが付与されていません</div>
  </apex:outputPanel>
  <!-- viewarea -->
  <apex:outputPanel rendered="{!mtu != null}">
    <div id="loaderWindow" class="loader" style="margin-top:200px;position: relative;z-index:10;" />
    <div id="loaderMsg" style="color:white;text-align:center;">読み込み中です。しばらくお待ちください。</div>
    <body>
      <apex:form id="form">
        <!-- hidden -->
        <apex:inputHidden value="{!gpsLocation}" id="gpsLocationSalesMenu" />
        <apex:inputHidden value="{!centerLocation}" id="centerLocation" />
        <apex:inputHidden value="{!nFarSearchTanto}" id="nFarSearchTanto" />
        <apex:inputHidden value="{!nFarSearchGroup}" id="nFarSearchGroup" />
        <apex:inputHidden value="{!nFarSearchArea}" id="nFarSearchArea" />
        <apex:inputHidden value="{!nFarSearchEnd}" id="nFarSearchEnd" />
        <apex:inputHidden value="{!scVisitStatus}" id="allSelectedValueForVisitStatus" />
        <apex:inputHidden value="{!todaySalesFlag}" id="todaySalesFlag" />
        <apex:inputHidden value="{!mySalesFlag}" id="mySalesFlag" />
        <apex:inputHidden value="{!areaFlag}" id="areaFlag" />
        <apex:inputHidden value="{!groupFlag}" id="groupFlag" />
        <apex:inputHidden value="{!noSalesFlag}" id="noSalesFlag" />
        <apex:inputHidden value="{!searchConditionFlag}" id="searchConditionFlag" />
        <apex:inputHidden value="{!actionId}" id="actionId" />
        <apex:inputHidden value="{!startDate}" id="startDate" />
        <apex:inputHidden value="{!endDate}" id="endDate" />
        <apex:inputHidden value="{!visitRecDetailRedirectFlag}" id="visitRecDetailRedirectFlag" />
        <apex:inputHidden value="{!executeSearchBtnFlag}" id="executeSearchBtnFlag" />
        <apex:inputHidden value="{!lastSelectTab}" id="lastSelectTab" />
        <div id="map-container" style="display:none;">
          <div id="locations-panel">
            <div id="locations-panel-list">
              <div class="section-name" id="location-results-section-name" style="display:none;">位置情報</div>
              <div class="results" style="display:none;">
                <ul id="location-results-list"></ul>
              </div>
            </div>
            <div id="locations-panel-details"></div>
          </div>
          <div id="mapMenu">
            <div style="height:25px;width:100%;background-color: #f5f5f5;border-bottom: 1px solid #dcdcdc;">
              <a id="hideLink" onclick="hideArea();" style="width:100%;height: 25px; display: inline;float:left;line-height:25px;">
                <span style="height:25px;line-height:25px;color:black;">▼</span>
                <span style="height:25px;line-height:25px;color:black;">メニュー</span>
                <span>　</span>
                <span style="height:25px;line-height:25px;color:black;font-size:90%;" id="viewCount" />
                <span>　</span>
                <span style="color:red;font-size:90%;height:25px;line-height:25px;">
                  <apex:outputText value="{!HTMLENCODE(errorText)}"/>
                </span>
                <span style="color:blue;font-size:90%;height:25px;line-height:25px;">
                  <apex:outputText value="{!HTMLENCODE(messageText)}"/>
                </span>
              </a>
              <a id="showLink" onclick="showArea();" style="width:100%;height: 25px; display: none;float:left;line-height:25px;">
                <span style="height:25px;line-height:25px;color:black;">▶</span>
                <span style="height:25px;line-height:25px;color:black;">メニュー</span>
                <span>　</span>
                <span style="height:25px;line-height:25px;color:black;font-size:90%;" id="viewCountHide" />
                <span>　</span>
                <span style="color:red;font-size:90%;height:25px;line-height:25px;">
                  <apex:outputText value="{!HTMLENCODE(errorText)}"/>
                </span>
                <span style="color:blue;font-size:90%;height:25px;line-height:25px;">
                  <apex:outputText value="{!HTMLENCODE(messageText)}"/>
                </span>
              </a>
            </div>
            <apex:outputPanel id="salesPanel">
              <div id="allSetDataArea" style="display: none; width: 100%;color:black;font-size:0.750em;overflow: hidden;background-color: white;border-bottom: 1px solid #dcdcdc;">
                <div style="width:30%;height:135px;float:left;padding-top:10px;line-height:25px;padding-left:1%;">
                  <apex:outputText rendered="{!todaySalesFlag}">
                    <p style="height:25px;">
                      <span style="font-weight:bold;">表示日付：</span><span>{!strSelectedDate}～{!strSelectedDateEnd}</span>
                    </p>
                  </apex:outputText>
                  <p style="height:25px;">
                    <span style="font-weight:bold;">交通手段：</span>
                    <span>{!mtu.mtTransportation__c}</span>
                  </p>
                  <p style="height:25px;">
                    <span style="color:red;">
                      <apex:outputText value="{!HTMLENCODE(errorText)}"/>
                    </span>
                    <span style="color:blue;">
                      <apex:outputText value="{!HTMLENCODE(messageText)}"/>
                    </span>
                  </p>
                  <div style="font-weight:bold;height:25px;">
                    <p style="width:100%;float:left;">
                      <apex:outputText rendered="{!OR(mtu.mtVisitStatus__c == '訪問中',mtu.mtVisitStatus__c == '移動中')}">
                        <apex:repeat value="{!routeViData}" var="vi" id="routeViData">
                          <div style="float:left;width:120px;">
                            <a class="mapTButton mapTButtonSize100 TopMenuLinkElement" onClick="tooltipDetailButtonClickRoute()" style="cursor:pointer;width:18%;"><span style="color:blue;">詳細を表示</span></a>
                          </div>
                        </apex:repeat>
                      </apex:outputText>
                      <div style="float:left;width:120px;">
                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" OnClick="showUserSettingWindow()" rerender="leadArea"><span>ユーザ設定</span></apex:commandLink>
                      </div>
                    </p>
                  </div>
                </div>
                <div style="width:25%;height:125px;float:left;padding-top:10px;line-height:25px;">
                  <p style="font-weight:bold;height:25px;">周辺情報を表示</p>
                  <div>
                    <apex:commandLink styleClass="mapTButton mapTButtonSize144 TopMenuLinkElement" action="{!getDestinationsList}" onClick="FreezeScreen('検索中...');"><span>現在地から検索</span></apex:commandLink>
                  </div>
                  <table width="150px;">
                    <tr>
                      <td style="width:40px;">担当：</td>
                      <td style="width:20px;"><input type="checkbox" id="nFarSearchTanto" onChange="document.getElementById('page:form:nFarSearchTanto').value = this.checked;" /></td>
                      <apex:outputText rendered="{!mts.mtAriaActivate__c}">
                        <td style="width:50px;">担当エリア：</td>
                        <td style="width:20px;"><input type="checkbox" id="nFarSearchArea" onChange="document.getElementById('page:form:nFarSearchArea').value = this.checked;" /></td>
                      </apex:outputText>
                    </tr>
                    <tr>
                      <td style="width:40px;">未割当：</td>
                      <td style="width:20px;"><input type="checkbox" id="nFarSearchEnd" onChange="document.getElementById('page:form:nFarSearchEnd').value = this.checked;" /></td>
                      <apex:outputText rendered="{!mts.mtGroupActivate__c}">
                        <td style="width:50px;">所属グループ：</td>
                        <td style="width:20px;"><input type="checkbox" id="nFarSearchGroup" onChange="document.getElementById('page:form:nFarSearchGroup').value = this.checked;" /></td>
                      </apex:outputText>
                    </tr>
                  </table>
                  <apex:variable var="rowIndex01" value="0" /> <span style="display:none;">
                  </span>
                </div>
                <div class="TopMenuLinkDiv">
                  <apex:commandLink styleClass="mapTButton mapTButtonSize144 TopMenuLinkElement" onClick="changeRootViewMode();" rendered="{!rootPanelViewFlag==false}" rerender="leadArea"><span>ルート表示</span></apex:commandLink>
                  <apex:commandLink styleClass="mapTButton mapTButtonSize144 TopMenuLinkElement" onClick="TodayVisitListButtonClick();" rendered="{!rootPanelViewFlag}" rerender="leadArea" style="color:blue;"><span>ルート詳細</span></apex:commandLink>
                  <apex:commandLink styleClass="mapTButton mapTButtonSize144 TopMenuLinkElement" action="{!turnToAddLeadModeTrue}" rendered="{!AddLeadModeFlag == 'false'}" onClick="FreezeScreen('変更中...');"><span>登録モード</span></apex:commandLink>
                  <apex:commandLink styleClass="mapTButtonBlue mapTButtonSize144 TopMenuLinkElement" action="{!turnToAddLeadModeFalse}" rendered="{!AddLeadModeFlag == 'true'}" onClick="FreezeScreen('変更中...');"><span>訪問モード</span></apex:commandLink>
                </div>
                <div class="TopMenuLinkDiv">
                  <a href="#" class="{!IF(todaySalesFlag == true,'mapTButtonBlue','mapTButton')} mapTButtonSize144 TopMenuLinkElement" onClick="showSelectedDateWindow();"><span>訪問表示</span></a>
                  <a href="#" class="mapTButton mapTButtonSize144 TopMenuLinkElement" onClick="CustomerListViewButtonClick();"><span>顧客一覧</span></a>
                  <div style="height:32px;">　</div>
                </div>
                <div class="TopMenuLinkDiv">
                  <a href="#" class="{!IF(searchConditionFlag == true,'mapTButtonBlue','mapTButton')} mapTButtonSize144 TopMenuLinkElement" onClick="SearchPanelViewButtonClick();"><span>検索表示</span></a>
                  <div style="height:32px;">　</div>
                </div>
              </div>
            </apex:outputPanel>
            <!-- allSetDataArea-->
            <div id="allSetDataAreaMobile" style="display: none; width: 100%;color:black;font-size:0.750em;background-color: white;height:150px;float: left;">
              <div class="tabs">
                <div class="tab-pane">
                  <input type="radio" name="tab" id="tab01" checked="checked" onClick="selectTab('tab01');"/>
                  <label class="tab-item" for="tab01">基本情報</label>
                  <div class="tab-content">
                    <apex:outputText rendered="{!todaySalesFlag}">
                      <p style="font-weight:bold;height:25px;">表示日付：{!strSelectedDate}～{!strSelectedDateEnd}</p>
                    </apex:outputText>
                    <p style="font-weight:bold;height:25px;">
                      <span style="font-weight:bold;">交通手段：</span>
                      <span>{!mtu.mtTransportation__c}</span>
                    </p>
                    <p style="font-weight:bold;height:25px;">
                      <span style="color:red;">
                        <apex:outputText value="{!HTMLENCODE(errorText)}"/>
                      </span>
                      <span style="color:blue;">
                        <apex:outputText value="{!HTMLENCODE(messageText)}"/>
                      </span>
                    </p>
                    <apex:outputText rendered="{!OR(mtu.mtVisitStatus__c == '訪問中',mtu.mtVisitStatus__c == '移動中')}">
                      <apex:repeat value="{!routeViData}" var="vi" id="routeViDataMobile">
                        <a class="mapTButton mapTButtonSizeMobile TopMenuLinkElementMobile" onClick="tooltipDetailButtonClickRoute()" style="cursor:pointer;width:33%;font-weight:700;"><span>詳細を表示</span></a>
                      </apex:repeat>
                    </apex:outputText>
                    <div style="font-weight:bold;height:25px;">
                      <p style="width:33%;float:left;">
                        <apex:commandLink styleClass="mapTButton mapTButtonSizeMobile TopMenuLinkElementMobile" OnClick="showUserSettingWindow()" rerender="leadArea" style="width:100%;"><span>ユーザ設定</span></apex:commandLink>
                      </p>
                      <p style="width:33%;float:left;">
                        <apex:commandLink styleClass="mapTButton mapTButtonSizeMobile TopMenuLinkElementMobile" action="{!reloadPage}" onClick="FreezeScreen('初期化中...');" style="width:100%;"><span>画面更新</span></apex:commandLink>
                      </p>
                    </div>
                  </div>
                </div>
                <div class="tab-pane">
                  <input type="radio" name="tab" id="tab02" onClick="selectTab('tab02');"/>
                  <label class="tab-item" for="tab02">周辺情報</label>
                  <div class="tab-content">
                    <div style="padding 10px; 10px; 10px; 10px; font-size:14px;float:left;width:100px;height:40px;">
                      <apex:commandLink styleClass="mapTButton mapTButtonSizeMobile TopMenuLinkElementMobilet" action="{!getDestinationsList}" onClick="FreezeScreen('検索中...');"><span>現在地から検索</span></apex:commandLink>
                    </div>
                    <table width="100%">
                      <tr>
                        <td width="30%">
                          <div style="padding-bottom:5px;">担当：</div>
                        </td>
                        <td width="20%"><input type="checkbox" style="width:20px;height:20px;" id="nFarSearchTantoMb" onChange="document.getElementById('page:form:nFarSearchTanto').value = this.checked;" /></td>
                        <apex:outputText rendered="{!mts.mtAriaActivate__c}">
                          <td width="30%">
                            <div style="padding-bottom:5px;">担当エリア：</div>
                          </td>
                          <td width="20%"><input type="checkbox" style="width:20px;height:20px;" id="nFarSearchAreaMb" onChange="document.getElementById('page:form:nFarSearchArea').value = this.checked;" /></td>
                        </apex:outputText>
                      </tr>
                      <tr><td>　</td></tr>
                      <tr>
                        <td width="30%">
                          <div style="padding-bottom:5px;">未割当：</div>
                        </td>
                        <td width="20%"><input type="checkbox" style="width:20px;height:20px;" id="nFarSearchEndMb" onChange="document.getElementById('page:form:nFarSearchEnd').value = this.checked;" /></td>
                        <apex:outputText rendered="{!mts.mtGroupActivate__c}">
                          <td width="30%">
                            <div style="padding-bottom:5px;">所属グループ：</div>
                          </td>
                          <td width="20%"><input type="checkbox" style="width:20px;height:20px;" id="nFarSearchGroupMb" onChange="document.getElementById('page:form:nFarSearchGroup').value = this.checked;" /></td>
                        </apex:outputText>
                      </tr>
                    </table>
                  </div>
                </div>
                <div class="tab-pane">
                  <input type="radio" name="tab" id="tab03" onClick="selectTab('tab03');"/>
                  <label class="tab-item" for="tab03">ルートアクション</label>
                  <div class="tab-content">
                    <apex:commandLink id="rootPanelViewFlagMobile" styleClass="mapTButton mapTButtonSizeMobile TopMenuLinkElementMobile" onClick="changeRootViewMode();" rendered="{!rootPanelViewFlag==false}" rerender="leadArea"><span>ルート表示</span></apex:commandLink>
                    <apex:commandLink id="todayButton" styleClass="mapTButton mapTButtonSizeMobile TopMenuLinkElementMobile" onClick="TodayVisitListButtonClick();" rendered="{!rootPanelViewFlag}" rerender="leadArea" style="color:blue;"><span>ルート詳細</span></apex:commandLink>
                    <a href="#" class="{!IF(todaySalesFlag == true,'mapTButtonBlue','mapTButton')} mapTButtonSizeMobile TopMenuLinkElementMobile" onClick="showSelectedDateWindow();"><span>訪問表示</span></a>
                    <a href="#" class="{!IF(searchConditionFlag == true,'mapTButtonBlue','mapTButton')} mapTButtonSizeMobile TopMenuLinkElementMobile" onClick="SearchPanelViewButtonClick();"><span>検索表示</span></a>
                    <apex:commandLink styleClass="mapTButton mapTButtonSizeMobile TopMenuLinkElementMobile" action="{!turnToAddLeadModeTrue}" rendered="{!AddLeadModeFlag == 'false'}" onClick="FreezeScreen('変更中...');"><span>登録モード</span></apex:commandLink>
                    <apex:commandLink styleClass="mapTButtonBlue mapTButtonSizeMobile TopMenuLinkElementMobile" action="{!turnToAddLeadModeFalse}" rendered="{!AddLeadModeFlag == 'true'}" onClick="FreezeScreen('変更中...');"><span>訪問モード</span></apex:commandLink>
                    <a href="#" class="mapTButton mapTButtonSizeMobile TopMenuLinkElementMobile" onClick="CustomerListViewButtonClick();"><span>顧客一覧</span></a>
                  </div>
                </div>
              </div>
            </div>
            <!-- 検索対応----Start-->
            <div class="SearchTool mapTBorder mapTdiv viewShadow" style="font-size:12px;z-index:20;">
              <apex:outputPanel id="SearchToolPanel">
                <div class="SearchToolDiv" style="" id="SearchComponent">
                  <div style="padding-bottom:10px;font-weight: bold;">検索</div>
                  <div class="OneLineThreeButtons" style="height:40px;margin-top:15px;text-align:center;">
                    <div style="float:left;width:30%;">
                      <a class="{!IF(isLeadSc=='検索する','mapTButtonBlue','mapTButton')} mapTButtonSize144 TopMenuLinkElement" style="cursor:pointer;" onClick="changeLeadSc(this);" id="isLeadSc"><span>リードを検索</span></a>
                      <apex:inputHidden value="{!isLeadSc}" id="isLeadSc" />
                    </div>
                    <div style="float:left;width:30%;">
                      <a class="{!IF(isAccSc=='検索する','mapTButtonBlue','mapTButton')} mapTButtonSize144 TopMenuLinkElement" style="cursor:pointer;" onClick="changeAccSc(this);" id="isAccSc"><span>取引先を検索</span></a>
                      <apex:inputHidden value="{!isAccSc}" id="isAccSc" />
                    </div>
                    <div style="float:left;width:30%;">
                      <apex:commandLink styleClass="mapTButton mapTButtonSize144 TopMenuLinkElement" style="cursor:pointer;" reRender="none" action="{!saveUserSearchCondition}" onComplete="scToolSaveFlag = true;alert('条件を保存しました。');"><span>条件を保存</span></apex:commandLink>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>1 住所</span></div>
                    <div class="tdConent">
                      <apex:inputText value="{!scAddress}" style="border: 1px solid #e9dfe5;" id="scAddress" styleClass="needToBeClear" />
                      <div style="padding-left:5px;height: 25px;" class="spanArea">
                        <apex:selectList value="{!adCondition}" size="1" id="adCondition" style="border: 1px solid #e9dfe5;height: 25px;">
                          <apex:selectOptions value="{!searchConditionInfoList}" />
                        </apex:selectList>
                      </div>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>2 所属グループ</span></div>
                    <div class="tdConent">
                      <apex:inputText id="scGroup" value="{!scGroup}" style="border: 1px solid #e9dfe5;" styleClass="needToBeClear" />
                      <div style="padding-left:5px;height: 25px;" class="spanArea">
                        <apex:selectList value="{!scGroupCondition}" size="1" id="scGroupCondition" style="border: 1px solid #e9dfe5;height: 25px;">
                          <apex:selectOptions value="{!searchConditionInfoList}" />
                        </apex:selectList>
                      </div>
                      <div style="padding-right:0px;" class="spanArea">
                        <a style="color:blue;font-size:70%;cursor:pointer;text-decoration:underline;width:50px;" onClick="document.getElementById('page:form:scGroup').value='--未入力--';" class="linkButton">未入力</a>
                      </div>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>3 顧客名</span></div>
                    <div class="tdConent">
                      <apex:inputText id="leadName" value="{!scLeadName}" style="border: 1px solid #e9dfe5;" styleClass="needToBeClear" />
                      <div style="padding-left:5px;height: 25px;" class="spanArea">
                        <apex:selectList value="{!LeadNameCondition}" size="1" id="LeadNameCondition" style="border: 1px solid #e9dfe5;height: 25px;">
                          <apex:selectOptions value="{!searchConditionInfoList}" />
                        </apex:selectList>
                      </div>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>4 エリア</span></div>
                    <div class="tdConent">
                      <apex:inputText id="scArea" value="{!scArea}" style="border: 1px solid #e9dfe5;" styleClass="needToBeClear" />
                      <div style="padding-left:5px;height: 25px;" class="spanArea">
                        <apex:selectList value="{!scAreaCondition}" size="1" id="scAreaCondition" style="border: 1px solid #e9dfe5;height: 25px;">
                          <apex:selectOptions value="{!searchConditionInfoList}" />
                        </apex:selectList>
                      </div>
                      <div style="padding-right:0px;" class="spanArea">
                        <a style="color:blue;font-size:70%;cursor:pointer;text-decoration:underline;width:50px;" onClick="document.getElementById('page:form:scArea').value='--未入力--';" class="linkButton">未入力</a>
                      </div>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>5 訪問履歴</span></div>
                    <div class="tdConent">
                      <select name="scVisitStatus[]" id="scVisitStatus" multiple="multiple" class="ms-options-wrap ms-has-selections scVisitStatus" onchange="setAllSelectedValueForVisitStatus(getSelectedValues('scVisitStatus').join(',') );" style="">
                        <apex:repeat value="{!scVisitStatusList}" var="listData">
                          <option value="{!listData}">{!listData}</option>
                        </apex:repeat>
                      </select>
                      </div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>6 担当者</span></div>
                    <div class="tdConent">
                      <apex:inputText id="scSales" value="{!scSales}" style="border: 1px solid #e9dfe5;" styleClass="needToBeClear" />
                      <div style="padding-left:5px;height: 25px;" class="spanArea">
                        <apex:selectList value="{!scSalesCondition}" size="1" id="scSalesCondition" style="border: 1px solid #e9dfe5;height: 25px;">
                          <apex:selectOptions value="{!searchConditionInfoList}" />
                        </apex:selectList>
                      </div>
                      <div style="padding-right:5px;" class="spanArea">
                        <a style="color:blue;font-size:70%;cursor:pointer;text-decoration:underline;width:50px;" onClick="document.getElementById('page:form:scSales').value='--未入力--';" class="linkButton">未入力</a>
                      </div>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>7 作成日</span></div>
                    <div class="tdConent">
                      <apex:inputText value="{!scCreateStart}" style="border: 1px solid #e9dfe5;width:80px;padding: .1rem .1rem;" id="createDateStart" styleClass="startDate needToBeClear" />
                      <div class="spanArea">～</div>
                      <apex:inputText value="{!scCreateEnd}" style="border: 1px solid #e9dfe5;width:80px;padding: .1rem .1rem;" id="createDateEnd" styleClass="endDate needToBeClear" />
                      <a class="linkButton" style="color:blue;font-size:70%;text-decoration:underline;cursor:pointer;padding-left: 10px;" onClick="createdDateClear();">クリア</a>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="daySelector" id="daySelectorOneDay" onclick="setDatePickerOneDay();"  style="font-size:12px;">1日</div>
                    <div class="daySelector" id="daySelectorOneWeek" onclick="setDatePickerOneWeek();"  style="font-size:12px;">1週間</div>
                    <div class="daySelector" id="daySelectorOneMonth" onclick="setDatePickerOneMonth();"  style="font-size:12px;">1カ月間</div>
                    <div class="daySelector" id="daySelectorThreeMonth" onclick="setDatePickerThreeMonth();"  style="font-size:12px;">3カ月間</div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>8 担当者（最後の訪問）</span></div>
                    <div class="tdConent">
                      <apex:inputText value="{!viLastUser}" style="border: 1px solid #e9dfe5;" id="viUser" styleClass="needToBeClear" />
                      <div style="padding-left:5px;height: 25px;" class="spanArea">
                        <apex:selectList value="{!viUserCondition}" size="1" id="viUserCondition" style="border: 1px solid #e9dfe5;height: 25px;">
                          <apex:selectOptions value="{!searchConditionInfoList}" />
                        </apex:selectList>
                      </div>
                    </div>
                  </div>
                  <div class="OneLine">
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>9 訪問日（最後の訪問）</span></div>
                    <div class="tdConent">
                      <apex:inputText value="{!viLastStartDt}" style="border: 1px solid #e9dfe5;width:80px;padding: .1rem .1rem;" id="viStart" styleClass="startDatevi needToBeClear" />
                      <div class="spanArea">～</div>
                      <apex:inputText value="{!viLastEndDt}" style="border: 1px solid #e9dfe5;width:80px;padding: .1rem .1rem;" id="viEnd" styleClass="endDatevi needToBeClear" />
                      <a class="linkButton" style="color:blue;font-size:70%;text-decoration:underline;cursor:pointer;padding-left: 10px;" onClick="VisitDateTimeClear();">クリア</a>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="daySelector" id="daySelectorOneDayvi" onclick="setDatePickerOneDayvi();" style="font-size:12px;">1日</div>
                    <div class="daySelector" id="daySelectorOneWeekvi" onclick="setDatePickerOneWeekvi();" style="font-size:12px;">1週間</div>
                    <div class="daySelector" id="daySelectorOneMonthvi" onclick="setDatePickerOneMonthvi();" style="font-size:12px;">1カ月間</div>
                    <div class="daySelector" id="daySelectorThreeMonthvi" onclick="setDatePickerThreeMonthvi();" style="font-size:12px;">3カ月間</div>
                  </div>
                  <div class="OneLine">
                    <div class="tdTitle"><span>10 訪問予約日</span></div>
                    <div class="tdConent">
                      <apex:inputText value="{!scViScStart}" style="border: 1px solid #e9dfe5;width:80px;padding:.1rem.1rem;" id="ScDateStart" styleClass="startDateScDate needToBeClear" />
                      <div class="spanArea">～</div>
                      <apex:inputText value="{!scViScEnd}" style="border: 1px solid #e9dfe5;width:80px;padding:.1rem.1rem;" id="ScDateEnd" styleClass="endDateScDate needToBeClear" />
                      <a class="linkButton" style="color:blue;font-size:70%;text-decoration:underline;cursor:pointer;padding-left: 10px;" onClick="VisitScheduleDateClear();">クリア</a>
                    </div>
                  </div>
                  <div class="OneLine">
                    <div class="daySelector" id="daySelectorOneDayScDate" onclick="setDatePickerOneDayScDate();" style="font-size:12px;">1日</div>
                    <div class="daySelector" id="daySelectorOneWeekScDate" onclick="setDatePickerOneWeekScDate();" style="font-size:12px;">1週間</div>
                    <div class="daySelector" id="daySelectorOneMonthScDate" onclick="setDatePickerOneMonthScDate();" style="font-size:12px;">1カ月間</div>
                    <div class="daySelector" id="daySelectorThreeMonthScDate" onclick="setDatePickerThreeMonthScDate();" style="font-size:12px;">3カ月間</div>
                    <span style="font-size: 70%;">未入力</span>
                    <apex:inputCheckbox value="{!scScDateNull}" id="scScDateNull" />
                  </div>
                  <apex:variable var="dataIndex" value="{!0}" />
                  <apex:repeat value="{!plusSearchColumn}" var="psc" id="dynamicFRepeat">
                    <apex:variable var="dataIndex" value="{!(dataIndex+1)}" />
                    <div class="DynamicFieldData" />
                    <div class="OneLine">
                      <div class="tdTitle" style="overflow:hidden;"><span>[リード]{!plusSearchColumnNum[psc]} {!leadLabelMap[psc]}</span></div>
                      <apex:outputText rendered="{!leadClmIsPickerList[psc]}">
                        <select name="DynamicField{!dataIndex}" id="DynamicField{!dataIndex}" multiple="multiple" class="ms-options-wrap ms-has-selections" onchange="setAllSelectedValue1('DynamicField{!JSINHTMLENCODE(TEXT(dataIndex))}',getSelectedValues('DynamicField{!JSINHTMLENCODE(TEXT(dataIndex))}').join(',') );" >
                          <apex:repeat value="{!selectPickListLeadData[psc]}" var="listData">
                            <option value="{!listData}">{!listData}</option>
                          </apex:repeat>
                        </select>
                        <apex:inputText value="{!plusSearchColumn[psc]}" id="hiddenLeadIdDataPicker" style="display:none;" styleClass="needToBeClear DynamicFieldForAll DynamicField{!dataIndex}" />
                      </apex:outputText>
                      <apex:outputText rendered="{!leadClmIsPickerList[psc] == false}">
                        <div class="tdConent">
                          <apex:inputText value="{!plusSearchColumn[psc]}" id="hiddenLeadIdData" style="border: 1px solid #e9dfe5;" styleClass="needToBeClear {!plusSearchColumn[psc]}" />
                        </div>
                      </apex:outputText>
                    </div>
                  </apex:repeat>
                  <apex:repeat value="{!plusSearchColumnAcc}" var="psc" id="dynamicFRepeatAcc">
                    <apex:variable var="dataIndex" value="{!(dataIndex+1)}" />
                    <div class="DynamicFieldData" />
                    <div class="OneLine">
                      <div class="tdTitle" style="overflow:hidden;"><span>[取引先]{!plusSearchColumnAccNum[psc]} {!accLabelMap[psc]}</span></div>
                      <apex:outputText rendered="{!accClmIsPickerList[psc]}">
                        <select name="DynamicField{!JSINHTMLENCODE(TEXT(dataIndex))}" id="DynamicField{!JSINHTMLENCODE(TEXT(dataIndex))}" multiple="multiple" class="ms-options-wrap ms-has-selections" onchange="setAllSelectedValue1('DynamicField{!JSINHTMLENCODE(TEXT(dataIndex))}',getSelectedValues('DynamicField{!JSINHTMLENCODE(TEXT(dataIndex))}').join(',') );" >
                          <apex:repeat value="{!selectPickListAccData[psc]}" var="listData">
                            <option value="{!listData}">{!listData}</option>
                          </apex:repeat>
                        </select>
                        <apex:inputText value="{!plusSearchColumnAcc[psc]}" id="hiddenAccIdDataPicker" style="display:none;" styleClass="needToBeClear DynamicFieldForAll DynamicField{!dataIndex}" />
                      </apex:outputText>
                      <apex:outputText rendered="{!accClmIsPickerList[psc] == false}">
                        <div class="tdConent">
                          <apex:inputText value="{!plusSearchColumnAcc[psc]}" id="hiddenAccIdData" style="border: 1px solid #e9dfe5;" styleClass="needToBeClear {!plusSearchColumnAcc[psc]}" />
                        </div>
                      </apex:outputText>
                    </div>
                  </apex:repeat>
                  <div class="TwoLine">
                    <div>カスタム条件式（リード）</div>
                    <div>
                      <apex:input type="text" value="{!customSearch}" id="customSearch" style="width:300px;" html-placeholder="(1 OR 2 OR 3) AND 4" />
                      <span>　</span>
                      <a class="linkButton" style="color:blue;font-size:70%;text-decoration:underline;cursor:pointer;" onClick="customValidationClear();">クリア</a>
                    </div>
                  </div>
                  <div class="TwoLine">
                    <div>カスタム条件式（取引先）</div>
                    <div>
                      <apex:input type="text" value="{!customSearchAcc}" id="customSearchAcc" style="width:300px;" html-placeholder="(1 OR 2 OR 3) AND 4" />
                      <span>　</span>
                      <a class="linkButton" style="color:blue;font-size:70%;text-decoration:underline;cursor:pointer;" onClick="customValidationClearAcc();">クリア</a>
                    </div>
                  </div>
                  <div class="OneLineThreeButtons" style="height:35px;margin-top:15px;text-align:center;">
                    <apex:commandLink id="conditionSearchBtn" styleClass="mapTButtonSize180" onClick="return clickPrepareToSearch();" action="{!initPage}" style="text-decoration: none;"><span>検索</span></apex:commandLink>
                    <a class="mapTButtonSize180 TopMenuLinkElement" onClick="clearData()" style="margin-left:20px;margin-top:0px;cursor:pointer;"><span>クリア</span></a>
                    <a class="mapTButtonSize180 TopMenuLinkElement" onClick="hideSearchWindow();" style="margin-left:20px;margin-top:0px;cursor:pointer;"><span>閉じる</span></a> 
                  </div>
                </div>
              </apex:outputPanel>
            </div>
            <!-- SearchTool -->
            <!-- ユーザ設定対応----Start-->
            <div class="UserSettingWindow">
              <div class="mapTBorder mapTdiv viewShadow SearchToolDiv" style="padding-left:10px;padding-right:10px;background-color: white;padding-bottom: 20px;" id="SearchComponent">
                <div style="padding-bottom:10px;font-weight: bold;">ユーザ設定</div>
                <div class="OneLine">
                  <div style="padding-left:10px;">
                  <table>
                    <tr style="height:40px;">
                      <td colspan="2">
                        <div style="color:blue;">※ ユーザ設定を変更した場合は画面を更新してください。</div>
                      </td>
                    </tr>
                    <tr style="height:40px;">
                      <td>交通手段</td>
                      <td>
                        <div>
                          <apex:inputField styleClass="selectList" value="{!mtu.mtTransportation__c}" style="border: 1px solid #e9dfe5;" />
                        </div>
                      </td>
                    </tr>
                    <tr style="height:40px;">
                      <td>ルート出発地点</td>
                      <td>
                        <div>
                          <apex:inputField styleClass="selectList" value="{!mtu.mtRouteOriginLocation__c}" style="border: 1px solid #e9dfe5;" />
                        </div>
                      </td>
                    </tr>
                    <tr style="height:40px;">
                      <td>地図表示形式</td>
                      <td>
                        <div>
                          <apex:inputField styleClass="selectList" value="{!mtu.mtViewTypeMapTechMap__c}" style="border: 1px solid #e9dfe5;" />
                        </div>
                      </td>
                    </tr>
                    <tr style="height:40px;">
                      <td>ズーム設定</td>
                      <td>
                        <div>
                          <apex:inputField styleClass="selectList" value="{!mtu.mtZoomSetting__c}" style="border: 1px solid #e9dfe5;" />
                        </div>
                      </td>
                    </tr>
                    <tr style="height:40px;vertical-align:top;">
                      <td>周辺座標取得距離（Km）</td>
                      <td>
                        <div>
                          <apex:inputField type="number" value="{!mtu.mtRectDistance__c}" style="border: 1px solid #e9dfe5;" />
                        </div>
                      </td>
                    </tr>
                    <tr style="height:40px;vertical-align:top;">
                      <td>クラスター表示最大倍率</td>
                      <td>
                        <div>
                          <apex:inputField type="number" value="{!mtu.mtClusterMaxZoom__c}" style="border: 1px solid #e9dfe5;" />
                        </div>
                      </td>
                    </tr>
                    <tr style="height:40px;vertical-align:top;">
                      <td>有料区間を利用しない</td>
                      <td>
                        <div>
                          <apex:inputField value="{!mtu.mtAvoidTolls__c}" style="border: 1px solid #e9dfe5;" />
                        </div>
                      </td>
                    </tr>
                    <tr>
                      <td>
                        <apex:commandLink styleClass="mapTButton mapTButtonSize180 TopMenuLinkElement" action="{!userSettingActivate}"><span>保存</span></apex:commandLink>
                      </td>
                      <td>
                        <a class="mapTButton mapTButtonSize180 TopMenuLinkElement" onClick="hideUserSettingWindow();" style="cursor:pointer;"><span>閉じる</span></a>
                      </td>
                    </tr>
                  </table>
                  </div>
                </div>
              </div>
            </div>
            <div class="SelectedDateWindow">
              <div class="mapTBorder mapTdiv viewShadow" style="padding-left:10px;padding-right:10px;background-color: white;padding-bottom: 20px;height:200px;" id="SearchComponent">
                <div style="padding-bottom:10px;font-weight: bold;">日付選択</div>
                <div class="OneLine">
                  <table class="DateSelectTable">
                    <tr>
                      <td width="15%" style="vertical-align: middle;">日付</td>
                      <td>
                          <div class="daySelector">
                            <apex:inputText value="{!strSelectedDate}" style="border: 1px solid #e9dfe5;width:120px;padding: .1rem .1rem;" id="SelectedDate" styleClass="SelectedDate" />
                          </div>
                          <div class="daySelector">
                            ～
                          </div>
                          <div class="daySelector">
                            <apex:inputText value="{!strSelectedDateEnd}" style="border: 1px solid #e9dfe5;width:120px;padding: .1rem .1rem;" id="SelectedDateEnd" styleClass="SelectedDate" />
                          </div>
                      </td>
                    </tr>
                    <tr>
                      <td colspan="2">
                        <div class="daySelector" id="daySelectorYerstoday" onclick="setDatePickerOneDayAgo();" style="margin-top:5px;">前日</div>
                        <div class="daySelector" id="daySelectorToday" onclick="setDatePickerToday();" style="margin-top:5px;">本日</div>
                        <div class="daySelector" id="daySelectorTomorrow" onclick="setDatePickerNextDay();" style="margin-top:5px;">翌日</div>
                      </td>
                    </tr>
                    <tr>
                      <td colspan="2"> <br/>
                        <apex:commandLink styleClass="mapTButton mapTButtonSize180 TopMenuLinkElement" onClick="clickTodaySalesFlag();" action="{!SelectedDateActivate}"><span>表示</span></apex:commandLink>
                        <a class="mapTButton mapTButtonSize180 TopMenuLinkElement" onClick="hideSelectedDateWindow();" style="cursor:pointer;"><span>戻る</span></a> </td>
                    </tr>
                  </table>
                </div>
              </div>
            </div>
          </div>
          <!--mapMenu-->
          <div id="map" style="margin-top:30px;"></div>
        </div>
        <!-- your content here -->
        <div class="cd-panel cd-panel--from-right js-cd-panel-main" id="rightPanel" style="z-index:13;">
          <header class="cd-panel__header">
            <h1>情報詳細</h1>
            <a href="#0" class="cd-panel__close js-cd-close" id="js-cd-close">Close</a>
          </header>
          <div class="cd-panel__container" style="zoom:90%;">
            <div class="cd-panel__content">
              <!-- Lead Info Start-->
              <apex:outputPanel id="LeadItemOutputPanelTop" style="padding: 0px 0px 0px 0px;">
                <div style="color:black;">
                  <apex:outputText rendered="{!messageText != ''}">
                    <div class="messageText">{!messageText}</div>
                  </apex:outputText>
                  <apex:outputText rendered="{!errorText != ''}">
                    <div class="errorText">{!errorText}</div>
                  </apex:outputText>
                </div>
                <apex:variable var="rowIndex01" value="0" />
                <!-- リード読み込みの表示 -->
                <apex:repeat value="{!leadListItem}" var="obj" id="leadData">
                  <div id="divItem{!rowIndex01}" style="width:100%;line-height:35px;color:black;" class="divItem">
                    <input type="hidden" id="hd{!obj.Id}" value="{!rowIndex01}" />
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding-left:10px;">
                      <table width="100%" height="100px">
                        <tr>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" onclick="return confIn('{!obj.Id}');" action="{!checkIn}"><span>訪問入室</span></apex:commandLink>
                          </td>
                          <td style="display:{!IF(DetailPageExitButtonShowFlag == true,'','none')}">
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rendered="{!DetailPageExitButtonShowFlag}" onclick="return confOut();" action="{!checkOut}"><span>退出</span></apex:commandLink>
                          </td>
                          <td><a onClick="return loadingAddViData('{!obj.Id}');" class="mapTButton mapTButtonSize150_2 TopMenuLinkElement" style="cursor:pointer;"><span>訪問登録</span></a> </td>
                        </tr>
                        <tr>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" onclick="return confRoute('{!JSINHTMLENCODE(obj.mtLatitude__c)}','{!JSINHTMLENCODE(obj.mtLongitude__c)}','{!obj.Id}');" action="{!naviStart}">
                              <span>ルート案内</span>
                            </apex:commandLink>
                          </td>
                          <apex:outputText rendered="{!editMode == false}">
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" action="{!changeEditMode}" oncomplete="encodeTextarea();"><span>編集</span></apex:commandLink>
                            </td>
                          </apex:outputText>
                          <apex:outputText rendered="{!editMode}">
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" action="{!changeViewMode}" oncomplete="encodeTextarea();"><span>戻る</span></apex:commandLink>
                            </td>
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" action="{!saveData}" oncomplete="encodeTextarea();"><span>保存</span></apex:commandLink>
                            </td>
                          </apex:outputText>
                        </tr>
                      </table>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="leadArea">
                        <apex:outputText rendered="{!editMode == false}">
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2" style="width:35%;">リード名</th>
                                <td>
                                  <table style="width:auto;border:none;">
                                    <tr>
                                      <td style="border:none;">
                                        <apex:outputLink value="/{!obj.Id}" target="_blank" style="color:blue;">{!obj.LastName}</apex:outputLink>
                                      </td>
                                      <td style="border:none;padding-left:10px;">
                                        <apex:outputLink value="/{!obj.Id}" target="_blank" style="color:blue;">{!obj.FirstName}</apex:outputLink>
                                      </td>
                                    </tr>
                                  </table>
                                </td>
                              </tr>
                              <apex:repeat value="{!plusEditColumnWithoutOrder}" var="column">
                                <tr class="VerticalAlignMiddle">
                                  <th colspan="2">{!leadLabelMap[column]}</th>
                                  <td><span class="MarginRight10"><apex:outputField value="{!obj[column]}" /></span></td>
                                </tr>
                              </apex:repeat>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2">添付ファイル</th>
                                <td>
                                  <apex:repeat value="{!clickLeadAttList}" var="att">
                                    <div>
                                      <span style="padding:0px 10px 0px 10px;"><apex:outputLink style="width:50px;" value="/{!att.Id}" >開く</apex:outputLink></span>
                                      <span style="padding:0px 10px 0px 10px;"><apex:outputField value="{!att.Name}" /></span>
                                      <span style="padding:0px 10px 0px 10px;"><apex:outputField value="{!att.ContentType}" /></span>
                                    </div>
                                  </apex:repeat>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </apex:outputText>
                        <apex:outputText rendered="{!editMode}">
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2" style="width:35%;">リード名</th>
                                <td>
                                  <div class="box_sty_dib mr10" style="float: left;width: 100%;height: 45px;line-height:45px;"> <span class="mr20 pad-sei" style="float:left;">姓</span>
                                    <apex:inputField value="{!obj.LastName}" style="height:25px;line-height:25px;font-size: 12px;" /> </div>
                                  <div class="box_sty_dib mr10" style="float: left;width: 100%;height: 45px;line-height:45px;"> <span class="mr20 pad-sei" style="float:left;">名</span>
                                    <div style="padding-top:8px;">
                                      <apex:inputField value="{!obj.FirstName}" style="height:25px;line-height:25px;float:left;font-size: 12px;" />
                                    </div>
                                  </div>
                                </td>
                              </tr>
                              <apex:repeat value="{!plusEditColumnWithoutOrder}" var="column">
                                <tr class="VerticalAlignMiddle">
                                  <th colspan="2">{!leadLabelMap[column]}</th>
                                  <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}"  style="font-size: 12px;"/></span></td>
                                </tr>
                              </apex:repeat>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2">添付ファイル</th>
                                <td>
                                  <div>
                                    <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" onClick="openTempfileWindow('{!obj.Id}');" oncomplete="encodeTextarea();">
                                      <span>ファイル添付</span>
                                    </apex:commandLink>
                                  </div>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </apex:outputText>
                      </apex:outputPanel>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="viArea">
                        <apex:repeat value="{!stiList}" var="objVi">
                          <table class="table_sty">
                            <tbody>
                              <tr>
                                <th colspan="2" style="width:25%;">アクション</th>
                                <td style="width:75%">
                                  <div class="box_sty_dib mr10">
                                    <apex:outputText rendered="{!AND(OR(objVi.mtStatus__c == '訪問前',objVi.mtStatus__c == '移動中'),OR(mtu.mtVisitStatus__c == '訪問前',mtu.mtVisitStatus__c == '移動中'))}">
                                      <span>
                                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" onclick="return confIndetail('{!objVi.Id}');" action="{!checkInDetail}" >
                                          <span>入室</span>
                                        </apex:commandLink>
                                      </span>
                                    <apex:outputText rendered="{! objVi.f_mt__mtDeleteFlag__c == false}">
                                    </apex:outputText>
                                      <span>
                                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" onclick="return confDeletedetail('{!objVi.Id}');" action="{!ScheduledToVisitInfoDelete}" >
                                          <span style="margin-left:10px;">削除</span>
                                        </apex:commandLink>
                                      </span>
                                    </apex:outputText>
                                  </div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">予定名</th>
                                <td>
                                  <div class="box_sty_dib mr10"><span class="MarginRight10"><apex:outputLink value="/{!objVi.Id}" target="_blank" style="color:blue;">{!objVi.Name}</apex:outputLink></span></div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">開始/終了</th>
                                <td>
                                  <div class="box_sty_dib mr10">
                                    <table style="border:none;width:auto;">
                                      <tr>
                                        <td style="border:none;">
                                          <apex:outputField value="{!objVi.mtStartDateTime__c}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" style="float: left;" />
                                          <apex:inputField type="datetime-local" value="{!objVi.mtStartDateTime__c}" rendered="{!editMode == true && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" style="float: left;line-height:30px;height:30px;" />
                                        </td>
                                        <td style="border:none;"><span>～</span></td>
                                        <td style="border:none;">
                                          <apex:outputField value="{!objVi.mtEndDateTime__c}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" style="float: left;" />
                                          <apex:inputField type="datetime-local" value="{!objVi.mtEndDateTime__c}" rendered="{!editMode == true && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" style="float: left;line-height:30px;height:30px;" />
                                        </td>
                                      </tr>
                                    </table>
                                  </div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">状況</th>
                                <td>
                                  <div class="box_sty_dib mr10"><span class="MarginRight10"><apex:outputField value="{!objVi.mtStatus__c}"/></span></div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">訪問結果</th>
                                <td colspan="2" style="padding-top:10px;">
                                  <apex:outputField value="{!objVi.mtDescription__c}" styleClass="escpTextArea" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" />
                                  <!-- <apex:outputText  rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" >
                                    <textarea style="display:block" name="textAreaHid">{!HTMLENCODE(objVi.f_mt__mtDescription__c)}</textarea>
                                  </apex:outputText> -->
                                  <apex:inputField value="{!objVi.mtDescription__c}" styleClass="ResizableTextArea escpTextArea" style="width:98%;font-size:12px;line-height:25px;height:125px;" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" />
                                </td>
                              </tr>
                              <apex:repeat value="{!stvAddcolumns}" var="column">
                                <tr>
                                  <th colspan="2">{!stvLabelMap[column]}</th>
                                  <td colspan="2" style="padding-top:5px;">
                                    <apex:variable value="{!0}" var="setCnt" />
                                    <apex:outputField value="{!objVi[column]}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" />
                                    <apex:repeat value="{!stvPikcListMap}" var="picClm">
                                      <apex:outputText rendered="{!AND(picClm == column,setCnt == 0)}">
                                        <apex:selectList value="{!objVi[column]}" onChange="setStiDataAddClm('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" size="1" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}">
                                          <apex:selectOptions value="{!stvPikcListMap[column]}" />
                                        </apex:selectList>
                                        <apex:variable value="{!setCnt+1}" var="setCnt" />
                                      </apex:outputText>
                                    </apex:repeat>
                                    <apex:outputText rendered="{!setCnt == 0}">
                                      <apex:inputField value="{!objVi[column]}" onChange="setStiDataAddClm('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" style="width:98%;font-size:12px;" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c) && (stvTypeMap[column] == 'String' || stvTypeMap[column] == 'Value' || stvTypeMap[column] == 'Decimal')}" />
                                      <apex:inputField value="{!objVi[column]}" style="font-size:12px;" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c) && stvTypeMap[column] == 'Boolean'}" />
                                      <apex:inputField type="date" value="{!objVi[column]}" onChange="setStiDataAddClm('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c) && stvTypeMap[column] == 'Date'}" />
                                      <apex:inputField type="datetime-local" value="{!objVi[column]}" onChange="setStiDataAddClm('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c) && stvTypeMap[column] == 'DateTime'}" />
                                    </apex:outputText>
                                  </td>
                                </tr>
                              </apex:repeat>
                            </tbody>
                          </table>
                          <br/>
                        </apex:repeat>
                      </apex:outputPanel>
                    </div>
                  </div>
                  <apex:variable var="rowIndex01" value="{!(VALUE(rowIndex01)+1)}" />
                  <!--increment-->
                </apex:repeat>
                <!-- 顧客情報 -->
                <apex:repeat value="{!accListItem}" var="obj" id="accData">
                  <div id="divItem{!rowIndex01}" style="width:100%;line-height:35px;color:black;" class="divItem">
                    <input type="hidden" id="hd{!obj.Id}" value="{!rowIndex01}" />
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding-left:10px;">
                      <table width="100%" height="100px">
                        <tr>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" onclick="return confIn('{!obj.Id}');" action="{!checkIn}"><span>訪問入室</span></apex:commandLink>
                          </td>
                          <td style="display:{!IF(DetailPageExitButtonShowFlag == true,'','none')}">
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rendered="{!DetailPageExitButtonShowFlag}" onclick="return confOut();" action="{!checkOut}"><span>退出</span></apex:commandLink>
                          </td>
                          <td><a onClick="return loadingAddViData('{!obj.Id}');" class="mapTButton mapTButtonSize150_2 TopMenuLinkElement" style="cursor:pointer;"><span>訪問登録</span></a> </td>
                        </tr>
                        <tr>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" onclick="return confRoute('{!JSINHTMLENCODE(obj.mtLatitude__c)}','{!JSINHTMLENCODE(obj.mtLongitude__c)}','{!obj.Id}');" action="{!naviStart}">
                              <span>ルート案内</span>
                            </apex:commandLink>
                          </td>
                          <apex:outputText rendered="{!editMode == false}">
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" action="{!changeEditMode}" oncomplete="encodeTextarea();"><span>編集</span></apex:commandLink>
                            </td>
                          </apex:outputText>
                          <apex:outputText rendered="{!editMode}">
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" action="{!changeViewMode}" oncomplete="encodeTextarea();"><span>戻る</span></apex:commandLink>
                            </td>
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" action="{!saveData}" oncomplete="encodeTextarea();"><span>保存</span></apex:commandLink>
                            </td>
                          </apex:outputText>
                        </tr>
                      </table>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="accArea">
                        <apex:outputText rendered="{!editMode == false}">
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2" style="width:35%;">{!accLabelMap['Name']}</th>
                                <td>
                                  <apex:outputLink value="/{!obj.Id}" target="_blank" style="color:blue;">{!obj.Name}</apex:outputLink>
                                </td>
                              </tr>
                              <apex:repeat value="{!plusEditColumnAccWithoutOrder}" var="column">
                                <apex:outputText rendered="{!isPersonRecTypeActivate}">
                                  <apex:outputText rendered="{!obj['IsPersonAccount']}">
                                    <tr class="VerticalAlignMiddle">
                                      <th colspan="2">{!accLabelMap[column]}</th>
                                      <td><span class="MarginRight10"><apex:outputField value="{!obj[column]}" /></span></td>
                                    </tr>
                                  </apex:outputText>
                                  <apex:outputText rendered="{!obj['IsPersonAccount'] == false}">
                                    <apex:outputText rendered="{!FIND(LOWER(column + '/'),exclusionPersonClm) == 0}">
                                      <tr class="VerticalAlignMiddle">
                                        <th colspan="2">{!accLabelMap[column]}</th>
                                        <td><span class="MarginRight10"><apex:outputField value="{!obj[column]}" /></span></td>
                                      </tr>
                                    </apex:outputText>
                                  </apex:outputText>
                                </apex:outputText>
                                <apex:outputText rendered="{!isPersonRecTypeActivate == false}">
                                  <tr class="VerticalAlignMiddle">
                                    <th colspan="2">{!accLabelMap[column]}</th>
                                    <td><span class="MarginRight10"><apex:outputField value="{!obj[column]}" /></span></td>
                                  </tr>
                                </apex:outputText>
                              </apex:repeat>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2">添付ファイル</th>
                                <td>
                                  <apex:repeat value="{!clickLeadAttList}" var="att">
                                    <div>
                                      <span style="padding:0px 10px 0px 10px;"><apex:outputLink style="width:50px;" value="/{!att.Id}" >開く</apex:outputLink></span>
                                      <span style="padding:0px 10px 0px 10px;"><apex:outputField value="{!att.Name}" /></span>
                                      <span style="padding:0px 10px 0px 10px;"><apex:outputField value="{!att.ContentType}" /></span>
                                    </div>
                                  </apex:repeat>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </apex:outputText>
                        <apex:outputText rendered="{!editMode}">
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <apex:outputText rendered="{!isPersonRecTypeActivate == false}">
                                <tr class="VerticalAlignMiddle">
                                  <th colspan="2" style="width:35%;">{!accLabelMap['Name']}</th>
                                  <td><span class="MarginRight10"><apex:inputField value="{!obj['Name']}"  style="height:25px;line-height:25px;font-size: 12px;"/></span></td>
                                </tr>
                                <apex:repeat value="{!plusEditColumnAccWithoutOrder}" var="column" id="nomalAcc">
                                  <apex:outputText rendered="{!isPersonRecTypeActivate}">
                                    <apex:outputText rendered="{!obj['IsPersonAccount'] == false}">
                                      <apex:outputText rendered="{!FIND(LOWER(column + '/'),exclusionPersonClm) == 0}">
                                        <tr class="VerticalAlignMiddle">
                                          <th colspan="2">{!accLabelMap[column]}</th>
                                          <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}"  style="font-size: 12px;"/></span></td>
                                        </tr>
                                      </apex:outputText>
                                    </apex:outputText>
                                    <apex:outputText rendered="{!obj['IsPersonAccount']}">
                                      <tr class="VerticalAlignMiddle">
                                        <th colspan="2">{!accLabelMap[column]}</th>
                                        <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}"  style="font-size: 12px;"/></span></td>
                                      </tr>
                                    </apex:outputText>
                                  </apex:outputText>
                                  <apex:outputText rendered="{!isPersonRecTypeActivate == false}">
                                    <tr class="VerticalAlignMiddle">
                                      <th colspan="2">{!accLabelMap[column]}</th>
                                      <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}"  style="font-size: 12px;"/></span></td>
                                    </tr>
                                  </apex:outputText>
                                </apex:repeat>
                              </apex:outputText>
                              <apex:outputText rendered="{!isPersonRecTypeActivate}">
                                <apex:outputText rendered="{!obj['IsPersonAccount']}">
                                  <tr class="VerticalAlignMiddle">
                                    <th colspan="2" style="width:35%;">顧客名</th>
                                    <td>
                                      <div class="box_sty_dib mr10" style="float: left;width: 100%;height: 45px;line-height:45px;"> <span class="mr20 pad-sei" style="float:left;">姓</span>
                                        <apex:inputField value="{!obj['LastName']}" style="height:25px;line-height:25px;font-size: 12px;" /> </div>
                                      <div class="box_sty_dib mr10" style="float: left;width: 100%;height: 45px;line-height:45px;"> <span class="mr20 pad-sei" style="float:left;">名</span>
                                        <div style="padding-top:8px;">
                                          <apex:inputField value="{!obj['FirstName']}" style="height:25px;line-height:25px;float:left;font-size: 12px;" />
                                        </div>
                                      </div>
                                    </td>
                                  </tr>
                                  <apex:repeat value="{!plusEditColumnAccWithoutOrder}" var="column" id="personAcc">
                                    <tr class="VerticalAlignMiddle">
                                      <th colspan="2">{!accLabelMap[column]}</th>
                                      <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}"  style="font-size: 12px;"/></span></td>
                                    </tr>
                                  </apex:repeat>
                                </apex:outputText>
                                <apex:outputText rendered="{!obj['IsPersonAccount'] == false}">
                                  <tr class="VerticalAlignMiddle">
                                    <th colspan="2" style="width:35%;">{!accLabelMap['Name']}</th>
                                    <td><span class="MarginRight10"><apex:inputField value="{!obj['Name']}"  style="height:25px;line-height:25px;font-size: 12px;"/></span></td>
                                  </tr>
                                  <apex:repeat value="{!plusEditColumnAccWithoutOrder}" var="column" id="personActivateAcc">
                                    <apex:outputText rendered="{!FIND(LOWER(column + '/'),exclusionPersonClm) == 0}">
                                      <tr class="VerticalAlignMiddle">
                                        <th colspan="2">{!accLabelMap[column]}</th>
                                        <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}"  style="font-size: 12px;"/></span></td>
                                      </tr>
                                    </apex:outputText>
                                  </apex:repeat>
                                </apex:outputText>
                              </apex:outputText>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2">添付ファイル</th>
                                <td>
                                  <div>
                                    <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" onClick="openTempfileWindow('{!obj.Id}');" oncomplete="encodeTextarea();">
                                      <span>ファイル添付</span>
                                    </apex:commandLink>
                                  </div>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </apex:outputText>
                      </apex:outputPanel>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="viArea">
                        <apex:repeat value="{!stiList}" var="objVi">
                          <table class="table_sty">
                            <tbody>
                              <tr>
                                <th colspan="2" style="width:25%;">アクション</th>
                                <td style="width:75%">
                                  <div class="box_sty_dib mr10">
                                    <apex:outputText rendered="{!AND(OR(objVi.mtStatus__c == '訪問前',objVi.mtStatus__c == '移動中'),OR(mtu.mtVisitStatus__c == '訪問前',mtu.mtVisitStatus__c == '移動中'))}">
                                      <span>
                                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" onclick="return confIndetail('{!objVi.Id}');" action="{!checkInDetail}" >
                                          <span>入室</span>
                                        </apex:commandLink>
                                      </span>
                                    <apex:outputText rendered="{!objVi.mtDeleteFlag__c == false}">
                                    </apex:outputText>
                                      <span>
                                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" onclick="return confDeletedetail('{!objVi.Id}');" action="{!ScheduledToVisitInfoDelete}">
                                          <span style="margin-left:10px;">削除</span>
                                        </apex:commandLink>
                                      </span>
                                    </apex:outputText>
                                  </div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">予定名</th>
                                <td>
                                  <div class="box_sty_dib mr10"><span class="MarginRight10"><apex:outputLink value="/{!objVi.Id}" target="_blank" style="color:blue;">{!objVi.Name}</apex:outputLink></span></div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">開始/終了</th>
                                <td>
                                  <div class="box_sty_dib mr10"> 
                                    <table style="border:none;width:auto;">
                                      <tr>
                                        <td style="border:none;">
                                          <apex:outputField value="{!objVi.mtStartDateTime__c}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" style="float: left;" />
                                          <apex:inputField type="datetime-local" value="{!objVi.mtStartDateTime__c}" rendered="{!editMode == true && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" style="float: left;line-height:30px;height:30px;" />
                                        </td>
                                        <td style="border:none;"><span>～</span></td>
                                        <td style="border:none;">
                                          <apex:outputField value="{!objVi.mtEndDateTime__c}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" style="float: left;" />
                                          <apex:inputField type="datetime-local" value="{!objVi.mtEndDateTime__c}" rendered="{!editMode == true && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" style="float: left;line-height:30px;height:30px;" />
                                        </td>
                                      </tr>
                                    </table>
                                  </div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">状況</th>
                                <td>
                                  <div class="box_sty_dib mr10"><span class="MarginRight10"><apex:outputField value="{!objVi.mtStatus__c}"/></span></div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">訪問結果</th>
                                <td colspan="2" style="padding-top:10px;">
                                  <apex:outputField value="{!objVi.mtDescription__c}" styleClass="escpTextArea" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" />
                                  <apex:inputField value="{!objVi.mtDescription__c}" styleClass="ResizableTextArea escpTextArea" style="width:98%;font-size:12px;height:125px;" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" />
                                </td>
                              </tr>
                              <apex:repeat value="{!stvAddcolumns}" var="column">
                                <tr>
                                  <th colspan="2">{!stvLabelMap[column]}</th>
                                  <td colspan="2" style="padding-top:5px;">
                                    <apex:variable value="{!0}" var="setCnt" />
                                    <apex:outputField value="{!objVi[column]}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" />
                                    <apex:repeat value="{!stvPikcListMap}" var="picClm">
                                      <apex:outputText rendered="{!AND(picClm == column,setCnt == 0)}">
                                        <apex:selectList value="{!objVi[column]}" onChange="setStiDataAddClm('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" size="1" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}">
                                          <apex:selectOptions value="{!stvPikcListMap[column]}" /> </apex:selectList>
                                        <apex:variable value="{!setCnt+1}" var="setCnt" /> </apex:outputText>
                                    </apex:repeat>
                                    <apex:outputText rendered="{!setCnt == 0}">
                                      <apex:inputField value="{!objVi[column]}" onChange="setStiDataAddClm('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" style="width:98%;font-size:12px;" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c) && (stvTypeMap[column] == 'String' || stvTypeMap[column] == 'Value' || stvTypeMap[column] == 'Decimal')}" />
                                      <apex:inputField value="{!objVi[column]}" style="font-size:12px;" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c) && stvTypeMap[column] == 'Boolean'}" />
                                      <apex:inputField type="date" value="{!objVi[column]}" onChange="setStiDataAddClm('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c) && stvTypeMap[column] == 'Date'}" />
                                      <apex:inputField type="datetime-local" value="{!objVi[column]}" onChange="setStiDataAddClm('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" rendered="{!editMode && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c) && stvTypeMap[column] == 'DateTime'}" />
                                    </apex:outputText>
                                  </td>
                                </tr>
                              </apex:repeat>
                            </tbody>
                          </table>
                          <br/>
                        </apex:repeat>
                      </apex:outputPanel>
                    </div>
                  </div>
                  <apex:variable var="rowIndex01" value="{!(VALUE(rowIndex01)+1)}" />
                  <!--increment-->
                </apex:repeat>
              </apex:outputPanel>
              <!-- Lead Info End-->
            </div>
            <!-- cd-panel__content -->
          </div>
          <!-- cd-panel__container -->
        </div>
        <!-- 商談一覧 content here -->
        <div class="cd-panel cd-panel--from-right js-cd-panel-main" id="rightOppPanel" style="z-index:12;">
          <header class="cd-panel__header">
            <h1>商談情報</h1>
            <a href="#0" class="cd-panel__close js-cd-close" id="js-opp-close">Close</a>
          </header>
          <div class="cd-panel__container" style="zoom:90%;">
            <div class="cd-panel__content">
              <!-- Opp Info Start-->
              <apex:outputPanel id="OppItemOutputPanelTop" style="padding: 0px 0px 0px 0px;">
                <div style="color:black;">
                  <apex:outputText rendered="{!messageText != ''}">
                    <div class="messageText">{!messageText}</div>
                  </apex:outputText>
                  <apex:outputText rendered="{!errorText != ''}">
                    <div class="errorText">{!errorText}</div>
                  </apex:outputText>
                </div>
                <apex:variable var="rowIndex01" value="0" />
                <apex:repeat value="{!leadListItem}" var="obj" id="leadOppData">
                  <div id="divOppItem{!rowIndex01}" style="width:100%;line-height:35px;color:black;" class="divItem">
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding-left:10px;padding-top:20px;">
                      <table width="100%" height="40px">
                        <tr>
                          <!-- <td><a onClick="return loadingAddOppData('{!obj.Id}','{!obj.ConvertedAccountId}');" class="mapTButton mapTButtonSize150_2 TopMenuLinkElement" style="cursor:pointer;"><span>新規登録</span></a> </td> -->
                          <td><apex:outputLink value="/lightning/o/Opportunity/new?defaultFieldValues=AccountId={!obj.ConvertedAccountId}" styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" style="cursor:pointer;" target="_blank"><span>新規登録</span></apex:outputLink></td>
                        </tr>
                      </table>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="leadArea">
                        <apex:outputText >
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <tr class="VerticalAlignMiddle">
                                <th style="width:20%;">商談</th>
                                <th style="width:20%;">フェーズ</th>
                                <th style="width:20%;">完了予定日</th>
                                <th style="width:40%;">説明</th>
                              </tr>
                              <apex:repeat value="{!oppList}" var="opp">
                                <tr class="VerticalAlignMiddle">
                                  <td><apex:outputLink value="/{!opp.Id}" target="_blank" style="color:blue;">{!opp.name}</apex:outputLink></td>
                                  <td><apex:outputField value="{!opp.StageName}" /></td>
                                  <td><apex:outputField value="{!opp.CloseDate}" /></td>
                                  <td><apex:outputField value="{!opp.Description}" /></td>
                                </tr>
                              </apex:repeat>
                            </tbody>
                          </table>
                        </apex:outputText>
                      </apex:outputPanel>
                    </div> <br/>
                  </div>
                  <apex:variable var="rowIndex01" value="{!(VALUE(rowIndex01)+1)}" />
                  <!--increment-->
                </apex:repeat>
                <apex:repeat value="{!accListItem}" var="obj" id="accOppData">
                  <div id="divOppItem{!rowIndex01}" style="width:100%;line-height:35px;color:black;" class="divItem">
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding-left:10px;padding-top:20px;">
                      <table width="100%" height="40px">
                        <tr>
                          <td><apex:outputLink value="/lightning/o/Opportunity/new?defaultFieldValues=AccountId={!obj.id}" styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" style="cursor:pointer;" target="_blank"><span>新規登録</span></apex:outputLink></td>
                        </tr>
                      </table>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="accArea">
                        <apex:outputText >
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <tr class="VerticalAlignMiddle">
                                <th style="width:20%;">商談</th>
                                <th style="width:20%;">フェーズ</th>
                                <th style="width:20%;">完了予定日</th>
                                <th style="width:40%;">説明</th>
                              </tr>
                              <apex:repeat value="{!oppList}" var="opp">
                                <tr class="VerticalAlignMiddle">
                                  <td><apex:outputLink value="/{!opp.Id}" target="_blank" style="color:blue;">{!opp.name}</apex:outputLink></td>
                                  <td><apex:outputField value="{!opp.StageName}" /></td>
                                  <td><apex:outputField value="{!opp.CloseDate}" /></td>
                                  <td><apex:outputField value="{!opp.Description}" /></td>
                                </tr>
                              </apex:repeat>
                            </tbody>
                          </table>
                        </apex:outputText>
                      </apex:outputPanel>
                    </div> <br/>
                  </div>
                  <apex:variable var="rowIndex01" value="{!(VALUE(rowIndex01)+1)}" />
                  <!--increment-->
                </apex:repeat>
              </apex:outputPanel>
              <!-- Opp Info End-->
            </div>
            <!-- cd-panel__content -->
          </div>
          <!-- cd-panel__container -->
        </div>
        <!-- cd-panel -->
        <div class="cd-panel cd-panel--from-right js-cd-panel-main" id="rightPanelRoute" style="z-index:11;">
          <header class="cd-panel__header">
            <h1>情報詳細</h1>
            <a href="#0" class="cd-panel__close js-cd-close" id="js-cd-closeRoute">Close</a>
          </header>
          <div class="cd-panel__container" style="zoom:90%;">
            <div class="cd-panel__content">
              <!-- Lead Info Start-->
              <apex:outputPanel id="LeadItemOutputPanelTopRoute" style="padding: 0px 0px 0px 0px;">
                <div style="color:black;">
                  <apex:outputText rendered="{!messageText != ''}">
                    <div class="messageText">{!messageText}</div>
                  </apex:outputText>
                  <apex:outputText rendered="{!errorText != ''}">
                    <div class="errorText">{!errorText}</div>
                  </apex:outputText>
                </div>
                <apex:variable var="rowIndex01" value="0" />
                <!-- リード情報の読み込み -->
                <apex:repeat value="{!routeLdData}" var="obj" id="leadDataRoute">
                  <div id="divItemRoute{!rowIndex01}" style="width:100%;line-height:35px;color:black;" class="divItem">
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding-left:10px;padding-top:40px;">
                      <table width="100%" height="100px">
                        <tr>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" onclick="return confIn('{!obj.Id}');" action="{!checkIn}"><span>訪問入室</span></apex:commandLink>
                          </td>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rendered="{!mtu.mtVisitStatus__c=='訪問中'}" onclick="return confOut();" action="{!checkOutRoute}"><span>退出</span></apex:commandLink>
                          </td>
                          <td><a onClick="return loadingAddViData('{!obj.Id}');" class="mapTButton mapTButtonSize150_2 TopMenuLinkElement" style="cursor:pointer;"><span>訪問登録</span></a> </td>
                        </tr>
                        <tr>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" onclick="return confRoute('{!JSINHTMLENCODE(obj.mtLatitude__c)}','{!JSINHTMLENCODE(obj.mtLongitude__c)}','{!obj.Id}');" action="{!naviStart}"><span>ルート案内</span></apex:commandLink>
                          </td>
                          <apex:outputText rendered="{!editMode == false}">
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTopRoute" action="{!changeEditMode}"><span>編集</span></apex:commandLink>
                            </td>
                          </apex:outputText>
                          <apex:outputText rendered="{!editMode}">
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTopRoute" action="{!changeViewMode}"><span>戻る</span></apex:commandLink>
                            </td>
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTopRoute" action="{!saveDataRoute}"><span>保存</span></apex:commandLink>
                            </td>
                          </apex:outputText>
                        </tr>
                      </table>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="leadAreaRoute">
                        <apex:outputText rendered="{!editMode == false}">
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2" style="width:35%;">リード名</th>
                                <td>
                                  <table style="width:auto;border:none;">
                                    <tr>
                                      <td style="border:none;">
                                        <apex:outputLink value="/{!obj.Id}" target="_blank" style="color:blue;">{!obj.LastName}</apex:outputLink>
                                      </td>
                                      <td style="border:none;padding-left:10px;">
                                        <apex:outputLink value="/{!obj.Id}" target="_blank" style="color:blue;">{!obj.FirstName}</apex:outputLink>
                                      </td>
                                    </tr>
                                  </table>
                                </td>
                              </tr>
                              <apex:repeat value="{!plusEditColumnWithoutOrder}" var="column">
                                <tr class="VerticalAlignMiddle">
                                  <th colspan="2">{!leadLabelMap[column]}</th>
                                  <td><span class="MarginRight10"><apex:outputField value="{!obj[column]}" /></span></td>
                                </tr>
                              </apex:repeat>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2">添付ファイル</th>
                                <td>
                                  <apex:repeat value="{!clickLeadAttList}" var="att">
                                    <div class="MarginRight10">
                                      <table>
                                        <tr>
                                          <td>
                                            <apex:outputLink style="width:50px;" value="/{!att.Id}">開く</apex:outputLink>
                                          </td>
                                          <td>
                                            <apex:outputField value="{!att.Name}" />
                                          </td>
                                          <td>
                                            <apex:outputField value="{!att.ContentType}" />
                                          </td>
                                        </tr>
                                      </table>
                                    </div>
                                  </apex:repeat>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </apex:outputText>
                        <apex:outputText rendered="{!editMode}">
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2" style="width:35%;">リード名</th>
                                <td>
                                  <div class="box_sty_dib mr10" style="float: left;width: 100%;height: 45px;line-height:45px;"> <span class="mr20 pad-sei" style="float:left;">姓</span>
                                    <apex:inputField value="{!obj.LastName}" style="height:25px;line-height:25px;font-size: 12px;" /> </div>
                                  <div class="box_sty_dib mr10" style="float: left;width: 100%;height: 45px;line-height:45px;"> <span class="mr20 pad-sei" style="float:left;">名</span>
                                    <div style="padding-top:8px;">
                                      <apex:inputField value="{!obj.FirstName}" style="height:25px;line-height:25px;float:left;font-size: 12px;" />
                                    </div>
                                  </div>
                                </td>
                              </tr>
                              <apex:repeat value="{!plusEditColumnWithoutOrder}" var="column">
                                <tr class="VerticalAlignMiddle">
                                  <th colspan="2">{!leadLabelMap[column]}</th>
                                  <td>
                                    <span class="MarginRight10">
                                      <apex:inputField value="{!obj[column]}" style="font-size: 12px;"/>
                                    </span>
                                  </td>
                                </tr>
                              </apex:repeat>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2">添付ファイル</th>
                                <td>
                                  <div>
                                    <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" onClick="openTempfileWindow('{!obj.Id}');" oncomplete="encodeTextarea();"><span>ファイル添付</span></apex:commandLink>
                                  </div>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </apex:outputText>
                      </apex:outputPanel>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="viAreaRoute">
                        <apex:repeat value="{!routeViData}" var="objVi">
                          <table class="table_sty">
                            <tbody>
                              <tr>
                                <th colspan="2" style="width:25%;">アクション</th>
                                <td style="width:75%">
                                  <div class="box_sty_dib mr10">
                                    <apex:outputText rendered="{!AND(OR(objVi.mtStatus__c == '訪問前',objVi.mtStatus__c == '移動中'),OR(mtu.mtVisitStatus__c == '訪問前',mtu.mtVisitStatus__c == '移動中'))}">
                                      <span>
                                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" onclick="return confIndetail('{!objVi.Id}');" action="{!checkInDetailRoute}"><span>入室</span></apex:commandLink>
                                      </span>
                                    </apex:outputText>
                                    <apex:outputText rendered="{! objVi.f_mt__mtDeleteFlag__c == false}">
                                      <span>
                                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" onclick="return confDeletedetail('{!objVi.Id}');" action="{!ScheduledToVisitInfoDeleteRoute}"><span style="margin-left:10px;">削除</span></apex:commandLink>
                                      </span>
                                    </apex:outputText>
                                  </div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">予定名</th>
                                <td>
                                  <div class="box_sty_dib mr10"><span class="MarginRight10"><apex:outputLink value="/{!objVi.Id}" target="_blank" style="color:blue;">{!objVi.Name}</apex:outputLink></span></div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">開始/終了</th>
                                <td>
                                  <div class="box_sty_dib mr10"> 
                                    <table style="border:none;width:auto;">
                                      <tr>
                                        <td style="border:none;">
                                          <apex:outputField value="{!objVi.mtStartDateTime__c}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" style="float: left;" />
                                          <apex:inputField type="datetime-local" value="{!objVi.mtStartDateTime__c}" rendered="{!editMode == true && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" style="float: left;line-height:30px;height:30px;" />
                                        </td>
                                        <td style="border:none;"><span>～</span></td>
                                        <td style="border:none;">
                                          <apex:outputField value="{!objVi.mtEndDateTime__c}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" style="float: left;" />
                                          <apex:inputField type="datetime-local" value="{!objVi.mtEndDateTime__c}" rendered="{!editMode == true && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" style="float: left;line-height:30px;height:30px;" />
                                        </td>
                                      </tr>
                                    </table>
                                  </div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">状況</th>
                                <td>
                                  <div class="box_sty_dib mr10"><span class="MarginRight10"><apex:outputField value="{!objVi.mtStatus__c}"/></span></div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">訪問結果</th>
                                <td colspan="2" style="padding-top:10px;">
                                  <apex:outputField value="{!objVi.mtDescription__c}" rendered="{!editMode == false}" styleClass="escpTextArea"/>
                                  <apex:inputField value="{!objVi.mtDescription__c}" styleClass="ResizableTextArea escpTextArea" style="width:98%;font-size:12px;height:125px;" rendered="{!editMode}" />
                                 </td>
                              </tr>
                              <apex:repeat value="{!stvAddcolumns}" var="column">
                                <tr>
                                  <th colspan="2">{!stvLabelMap[column]}</th>
                                  <td colspan="2" style="padding-top:5px;">
                                    <apex:variable value="{!0}" var="setCnt" />
                                    <apex:outputField value="{!objVi[column]}" rendered="{!editMode == false}" />
                                    <apex:repeat value="{!stvPikcListMap}" var="picClm">
                                      <apex:outputText rendered="{!AND(picClm == column,setCnt == 0)}">
                                        <apex:selectList value="{!objVi[column]}" onChange="setStiDataAddClmRoute('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" size="1" rendered="{!editMode}">
                                          <apex:selectOptions value="{!stvPikcListMap[column]}" /> </apex:selectList>
                                        <apex:variable value="{!setCnt+1}" var="setCnt" /> </apex:outputText>
                                    </apex:repeat>
                                    <apex:outputText rendered="{!setCnt == 0}">
                                      <apex:inputField value="{!objVi[column]}" onChange="setStiDataAddClmRoute('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" style="width:98%;font-size:12px;" rendered="{!editMode && (stvTypeMap[column] == 'String' || stvTypeMap[column] == 'Value' || stvTypeMap[column] == 'Decimal')}" />
                                      <apex:inputField value="{!objVi[column]}" style="font-size:12px;" rendered="{!editMode && stvTypeMap[column] == 'Boolean'}" />
                                      <apex:inputField type="date" value="{!objVi[column]}" onChange="setStiDataAddClmRoute('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" rendered="{!editMode && stvTypeMap[column] == 'Date'}" />
                                      <apex:inputField type="datetime-local" value="{!objVi[column]}" onChange="setStiDataAddClmRoute('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" rendered="{!editMode && stvTypeMap[column] == 'DateTime'}" /> </apex:outputText>
                                  </td>
                                </tr>
                              </apex:repeat>
                            </tbody>
                          </table> <br/> </apex:repeat>
                      </apex:outputPanel>
                    </div>
                  </div>
                  <apex:variable var="rowIndex01" value="{!(VALUE(rowIndex01)+1)}" />
                  <!--increment-->
                </apex:repeat>
                <!-- 顧客情報の読み込み -->
                <apex:repeat value="{!routeAcData}" var="obj" id="accDataRoute">
                  <div id="divItemRoute{!rowIndex01}" style="width:100%;line-height:35px;color:black;" class="divItem">
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding-left:10px;padding-top:40px;">
                      <table width="100%" height="100px">
                        <tr>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" onclick="return confIn('{!obj.Id}');" action="{!checkIn}"><span>訪問入室</span></apex:commandLink>
                          </td>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rendered="{!mtu.mtVisitStatus__c == '訪問中'}" onclick="return confOut();" action="{!checkOutRoute}"><span>退出</span></apex:commandLink>
                          </td>
                          <td><a onClick="return loadingAddViData('{!obj.Id}');" class="mapTButton mapTButtonSize150_2 TopMenuLinkElement" style="cursor:pointer;"><span>訪問登録</span></a> </td>
                        </tr>
                        <tr>
                          <td>
                            <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" onclick="return confRoute('{!JSINHTMLENCODE(obj.mtLatitude__c)}','{!JSINHTMLENCODE(obj.mtLongitude__c)}','{!obj.Id}');" action="{!naviStart}"><span>ルート案内</span></apex:commandLink>
                          </td>
                          <apex:outputText rendered="{!editMode == false}">
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTopRoute" action="{!changeEditMode}"><span>編集</span></apex:commandLink>
                            </td>
                          </apex:outputText>
                          <apex:outputText rendered="{!editMode}">
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTopRoute" action="{!changeViewMode}"><span>戻る</span></apex:commandLink>
                            </td>
                            <td>
                              <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTopRoute" action="{!saveDataRoute}"><span>保存</span></apex:commandLink>
                            </td>
                          </apex:outputText>
                        </tr>
                      </table>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="accAreaRoute">
                        <apex:outputText rendered="{!editMode == false}">
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2" style="width:35%;">{!accLabelMap['Name']}</th>
                                <td>
                                  <apex:outputLink value="/{!obj.Id}" target="_blank" style="color:blue;">{!obj.Name}</apex:outputLink>
                                </td>
                              </tr>
                              <apex:repeat value="{!plusEditColumnAccWithoutOrder}" var="column">
                                <apex:outputText rendered="{!isPersonRecTypeActivate}">
                                  <apex:outputText rendered="{!obj['IsPersonAccount'] == false}">
                                    <apex:outputText rendered="{!FIND(LOWER(column + '/'),exclusionPersonClm) == 0}">
                                      <tr class="VerticalAlignMiddle">
                                        <th colspan="2">{!accLabelMap[column]}</th>
                                        <td><span class="MarginRight10"><apex:outputField value="{!obj[column]}"  style="height:25px;line-height:25px;font-size: 12px;"/></span></td>
                                      </tr>
                                    </apex:outputText>
                                  </apex:outputText>
                                  <apex:outputText rendered="{!obj['IsPersonAccount']}">
                                    <tr class="VerticalAlignMiddle">
                                      <th colspan="2">{!accLabelMap[column]}</th>
                                      <td><span class="MarginRight10"><apex:outputField value="{!obj[column]}"  style="height:25px;line-height:25px;font-size: 12px;"/></span></td>
                                    </tr>
                                  </apex:outputText>
                                </apex:outputText>
                                <apex:outputText rendered="{!isPersonRecTypeActivate == false}">
                                  <tr class="VerticalAlignMiddle">
                                    <th colspan="2">{!accLabelMap[column]}</th>
                                    <td><span class="MarginRight10"><apex:outputField value="{!obj[column]}"  style="height:25px;line-height:25px;font-size: 12px;"/></span></td>
                                  </tr>
                                </apex:outputText>
                              </apex:repeat>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2">添付ファイル</th>
                                <td>
                                  <apex:repeat value="{!clickLeadAttList}" var="att">
                                    <div class="MarginRight10">
                                      <table>
                                        <tr>
                                          <td>
                                            <apex:outputLink style="width:50px;" value="/{!att.Id}">開く</apex:outputLink>
                                          </td>
                                          <td>
                                            <apex:outputField value="{!att.Name}" />
                                          </td>
                                          <td>
                                            <apex:outputField value="{!att.ContentType}" />
                                          </td>
                                        </tr>
                                      </table>
                                    </div>
                                  </apex:repeat>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </apex:outputText>
                        <apex:outputText rendered="{!editMode}">
                          <table class="table_sty" style="padding-top:100px;">
                            <tbody>
                              <apex:outputText rendered="{!isPersonRecTypeActivate == false}">
                                <tr class="VerticalAlignMiddle">
                                  <th colspan="2" style="width:35%;">{!accLabelMap['Name']}</th>
                                  <td><span class="MarginRight10"><apex:inputField value="{!obj['Name']}"  style="height:25px;line-height:25px;font-size: 12px;"/></span></td>
                                </tr>
                                <apex:repeat value="{!plusEditColumnAccWithoutOrder}" var="column">
                                  <apex:outputText rendered="{!isPersonRecTypeActivate}">
                                    <apex:outputText rendered="{!obj['IsPersonAccount']}">
                                      <tr class="VerticalAlignMiddle">
                                        <th colspan="2">{!accLabelMap[column]}</th>
                                        <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}" /></span></td>
                                      </tr>
                                    </apex:outputText>
                                    <apex:outputText rendered="{!obj['IsPersonAccount'] == false}">
                                      <apex:outputText rendered="{!FIND(LOWER(column + '/'),exclusionPersonClm) == 0}">
                                        <tr class="VerticalAlignMiddle">
                                          <th colspan="2">{!accLabelMap[column]}</th>
                                          <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}" /></span></td>
                                        </tr>
                                      </apex:outputText>
                                    </apex:outputText>
                                  </apex:outputText>
                                  <apex:outputText rendered="{!isPersonRecTypeActivate == false}">
                                    <tr class="VerticalAlignMiddle">
                                      <th colspan="2">{!accLabelMap[column]}</th>
                                      <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}" /></span></td>
                                    </tr>
                                  </apex:outputText>
                                </apex:repeat>
                              </apex:outputText>
                              <apex:outputText rendered="{!isPersonRecTypeActivate}">
                                <apex:outputText rendered="{!obj['IsPersonAccount']}">
                                  <tr class="VerticalAlignMiddle">
                                    <th colspan="2" style="width:35%;">顧客名</th>
                                    <td>
                                      <div class="box_sty_dib mr10" style="float: left;width: 100%;height: 45px;line-height:45px;"> <span class="mr20 pad-sei" style="float:left;">姓</span>
                                        <apex:inputField value="{!obj['LastName']}" style="height:25px;line-height:25px;font-size: 12px;" /> </div>
                                      <div class="box_sty_dib mr10" style="float: left;width: 100%;height: 45px;line-height:45px;"> <span class="mr20 pad-sei" style="float:left;">名</span>
                                        <div style="padding-top:8px;">
                                          <apex:inputField value="{!obj['FirstName']}" style="height:25px;line-height:25px;float:left;font-size: 12px;" />
                                        </div>
                                      </div>
                                    </td>
                                  </tr>
                                  <apex:repeat value="{!plusEditColumnAccWithoutOrder}" var="column" id="personAcc">
                                    <tr class="VerticalAlignMiddle">
                                      <th colspan="2">{!accLabelMap[column]}</th>
                                      <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}"  style="font-size: 12px;"/></span></td>
                                    </tr>
                                  </apex:repeat>
                                </apex:outputText>
                                <apex:outputText rendered="{!obj['IsPersonAccount'] == false}">
                                  <tr class="VerticalAlignMiddle">
                                    <th colspan="2" style="width:35%;">{!accLabelMap['Name']}</th>
                                    <td><span class="MarginRight10"><apex:inputField value="{!obj['Name']}"  style="height:25px;line-height:25px;font-size: 12px;"/></span></td>
                                  </tr>
                                  <apex:repeat value="{!plusEditColumnAccWithoutOrder}" var="column" id="personActivateAcc">
                                    <apex:outputText rendered="{!FIND(LOWER(column + '/'),exclusionPersonClm) == 0}">
                                      <tr class="VerticalAlignMiddle">
                                        <th colspan="2">{!accLabelMap[column]}</th>
                                        <td><span class="MarginRight10"><apex:inputField value="{!obj[column]}"  style="font-size: 12px;"/></span></td>
                                      </tr>
                                    </apex:outputText>
                                  </apex:repeat>
                                </apex:outputText>
                              </apex:outputText>
                              <tr class="VerticalAlignMiddle">
                                <th colspan="2">添付ファイル</th>
                                <td>
                                  <div>
                                    <apex:commandLink styleClass="mapTButton mapTButtonSize150_2 TopMenuLinkElement" rerender="LeadItemOutputPanelTop" onClick="openTempfileWindow('{!obj.Id}');" oncomplete="encodeTextarea();"><span>ファイル添付</span></apex:commandLink>
                                  </div>
                                </td>
                              </tr>
                            </tbody>
                          </table>
                        </apex:outputText>
                      </apex:outputPanel>
                    </div> <br/>
                    <div class="mapTBorder mapTdiv viewShadow" style="background:white;padding:5px;font-size:12px;">
                      <apex:outputPanel id="viAreaRoute">
                        <apex:repeat value="{!routeViData}" var="objVi">
                          <table class="table_sty">
                            <tbody>
                              <tr>
                                <th colspan="2" style="width:25%;">アクション</th>
                                <td style="width:75%">
                                  <div class="box_sty_dib mr10">
                                    <apex:outputText rendered="{!AND(OR(objVi.mtStatus__c == '訪問前',objVi.mtStatus__c == '移動中'),OR(mtu.mtVisitStatus__c == '訪問前',mtu.mtVisitStatus__c == '移動中'))}">
                                      <span>
                                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" onclick="return confIndetail('{!objVi.Id}');" action="{!checkInDetailRoute}" ><span>入室</span></apex:commandLink>
                                      </span>
                                    </apex:outputText>
                                    <apex:outputText rendered="{! objVi.f_mt__mtDeleteFlag__c == false}">
                                      <span>
                                        <apex:commandLink styleClass="mapTButton mapTButtonSize100 TopMenuLinkElement" onclick="return confDeletedetail('{!objVi.Id}');" action="{!ScheduledToVisitInfoDeleteRoute}" ><span style="margin-left:10px;">削除</span></apex:commandLink>
                                      </span>
                                    </apex:outputText>
                                  </div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">予定名</th>
                                <td>
                                  <div class="box_sty_dib mr10"><span class="MarginRight10"><apex:outputLink value="/{!objVi.Id}" target="_blank" style="color:blue;">{!objVi.Name}</apex:outputLink></span></div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">開始/終了</th>
                                <td>
                                  <div class="box_sty_dib mr10">
                                    <table style="border:none;width:auto;">
                                      <tr>
                                        <td style="border:none;">
                                          <apex:outputField value="{!objVi.mtStartDateTime__c}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" style="float: left;" />
                                          <apex:inputField type="datetime-local" value="{!objVi.mtStartDateTime__c}" rendered="{!editMode == true && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" style="float: left;line-height:30px;height:30px;" />
                                        </td>
                                        <td style="border:none;"><span>～</span></td>
                                        <td style="border:none;">
                                          <apex:outputField value="{!objVi.mtEndDateTime__c}" rendered="{!editMode == false || (objVi.mtIsEdit__c == false && mtu.mtOldDataEdit__c == false)}" style="float: left;" />
                                          <apex:inputField type="datetime-local" value="{!objVi.mtEndDateTime__c}" rendered="{!editMode == true && (objVi.mtIsEdit__c || mtu.mtOldDataEdit__c)}" style="float: left;line-height:30px;height:30px;" />
                                        </td>
                                      </tr>
                                    </table>
                                  </div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">状況</th>
                                <td>
                                  <div class="box_sty_dib mr10"><span class="MarginRight10"><apex:outputField value="{!objVi.mtStatus__c}"/></span></div>
                                </td>
                              </tr>
                              <tr>
                                <th colspan="2">訪問結果</th>
                                <td colspan="2" style="padding-top:10px;">
                                  <apex:outputField value="{!objVi.mtDescription__c}" rendered="{!editMode == false}" styleClass="escpTextArea"/>
                                  <apex:inputField value="{!objVi.mtDescription__c}" styleClass="ResizableTextArea escpTextArea" style="width:98%;font-size:12px;height:125px;" rendered="{!editMode}" />
                                 </td>
                              </tr>
                              <apex:repeat value="{!stvAddcolumns}" var="column">
                                <tr>
                                  <th colspan="2">{!stvLabelMap[column]}</th>
                                  <td colspan="2" style="padding-top:5px;">
                                    <apex:variable value="{!0}" var="setCnt" />
                                    <apex:outputField value="{!objVi[column]}" rendered="{!editMode == false}" />
                                    <apex:repeat value="{!stvPikcListMap}" var="picClm">
                                      <apex:outputText rendered="{!AND(picClm == column,setCnt == 0)}">
                                        <apex:selectList value="{!objVi[column]}" onChange="setStiDataAddClmRoute('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" size="1" rendered="{!editMode}">
                                          <apex:selectOptions value="{!stvPikcListMap[column]}" /> </apex:selectList>
                                        <apex:variable value="{!setCnt+1}" var="setCnt" /> </apex:outputText>
                                    </apex:repeat>
                                    <apex:outputText rendered="{!setCnt == 0}">
                                      <apex:inputField value="{!objVi[column]}" onChange="setStiDataAddClmRoute('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" style="width:98%;font-size:12px;" rendered="{!editMode && (stvTypeMap[column] == 'String' || stvTypeMap[column] == 'Value' || stvTypeMap[column] == 'Decimal')}" />
                                      <apex:inputField value="{!objVi[column]}" style="font-size:12px;" rendered="{!editMode && stvTypeMap[column] == 'Boolean'}" />
                                      <apex:inputField type="date" value="{!objVi[column]}" onChange="setStiDataAddClmRoute('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" rendered="{!editMode && stvTypeMap[column] == 'Date'}" />
                                      <apex:inputField type="datetime-local" value="{!objVi[column]}" onChange="setStiDataAddClmRoute('{!JSINHTMLENCODE(objVi.Id)}','{!JSINHTMLENCODE(column)}',this.value);" rendered="{!editMode && stvTypeMap[column] == 'DateTime'}" /> </apex:outputText>
                                  </td>
                                </tr>
                              </apex:repeat>
                            </tbody>
                          </table> <br/> </apex:repeat>
                      </apex:outputPanel>
                    </div>
                  </div>
                  <apex:variable var="rowIndex01" value="{!(VALUE(rowIndex01)+1)}" />
                  <!--increment-->
                </apex:repeat>
              </apex:outputPanel>
              <!-- Lead Info End-->
            </div>
            <!-- cd-panel__content -->
          </div>
          <!-- cd-panel__container -->
        </div>
        <!-- cd-panel -->
        <!-- 訪問ルート対応----Start-->
        <div class="cd-panel cd-panel--from-right js-cd-panel-main" id="rightPanel2" style="z-index:10;width:10%;">
          <header class="cd-panel__headerMini" id="navigationPanelHeader">
            <h1 id="navigationPanelTitle">訪問ルート</h1> <a href="#0" class="cd-panel__close js-cd-close" id="js-cd-close2">Close</a> </header>
          <div class="cd-panel__containerMini" id="navigationPanelContainer">
            <div id="viewNavigationPanel" style="height:100vh;display:none;vertical-align: middle;border-left:solid 1px #dbe2e9;" onClick="changeMenuNavi();">
              <span style="vertical-align: middle;color:gray;font-size:30px;font-weight:bold;">《</span>
            </div>
            <div class="cd-panel__content" id="navigationPanel" style="background-color: antiquewhite;color: black;">
              <apex:outputPanel id="routeGuidance">
                <div class="means_of_transportation_title">
                  <table>
                    <tr>
                      <td width="100%">
                        <div class="means_of_transportation" style="width:100%;">
                          <table>
                            <tr>
                              <td><span>交通手段：{!mtu.mtTransportation__c}</span></td>
                              <td>
                                <span>表示形式：</span>
                                <apex:selectList value="{!hyoujiKeishiki}" size="1" style="border: 1px solid #e9dfe5;">
                                  <apex:selectOptions value="{!hyoujiKeishikiList}" />
                                  <apex:actionSupport event="onchange" action="{!initRouteView}" />
                                </apex:selectList>
                              </td>
                            </tr>
                            <tr>
                              <td colspan="2" style="padding-top:10px;">
                                <span>完了行動の表示：</span>
                                <apex:selectList value="{!rootFinishView}" size="1" style="border: 1px solid #e9dfe5;">
                                  <apex:selectOptions value="{!rootFinishViewList}" />
                                  <apex:actionSupport event="onchange" action="{!initRouteView}" />
                                </apex:selectList>
                              </td>
                            </tr>
                          </table>
                        </div>
                      </td>
                    </tr>
                  </table>
                </div>
                <div class="placeDiv" style="text-align:center;">{!IF(mtu.f_mt__mtRouteOriginLocation__c == '0','現在地','')}{!IF(mtu.f_mt__mtRouteOriginLocation__c == '1','出発地','')}{!IF(mtu.f_mt__mtRouteOriginLocation__c == '2','出発地','')}</div>
                <div class="placeDivAfter"></div>
                <apex:outputText rendered="{!hyoujiKeishiki == '1'}">
                  <apex:repeat value="{!routeViDataList}" var="stiv">
                    <div class="placeDiv" onClick="moveClickLocationNavi('{!JSINHTMLENCODE(stiv.mtLatitude__c)}','{!JSINHTMLENCODE(stiv.mtLongitude__c)}');">
                      <p style="font-weight:bold;margin: 0.2em 0;">{!stiv.mtLeadName__c}</p><br/>
                      <span>住所：
                        <apex:commandLink onClick="return confRoute('{!JSINHTMLENCODE(IF(ISBLANK(stiv.mtAccount__c),stiv.mtLatitude__c,stiv.f_mt__mtAccount__r.mtLatitude__c))}','{!JSINHTMLENCODE(IF(ISBLANK(stiv.mtAccount__c),stiv.mtLongitude__c,stiv.f_mt__mtAccount__r.mtLongitude__c))}','{!JSINHTMLENCODE(IF(ISBLANK(stiv.mtAccount__c),stiv.mtLead__c,stiv.mtAccount__c))}');" action="{!naviStart}">
                          {!IF(ISBLANK(stiv.mtAddress__c),'住所未登録',stiv.mtAddress__c)}
                        </apex:commandLink>
                      </span>
                      <br/>
                      <span>時間：<apex:outputField value="{!stiv.mtStartDateTime__c}" /> ～ <apex:outputField value="{!stiv.mtEndDateTime__c}" /></span><br/> 
                    </div>
                    <div class="placeDivAfter"></div>
                  </apex:repeat>
                </apex:outputText>
                <!-- Lead Info End-->
                <div id="directions_panel_loading" style="text-align:center;display:none;">読み込み中...</div>
                <div id="directions_panel" style="text-align:center;"></div>
                <div id="directions_panel_total" style="text-align:center;"></div>
              </apex:outputPanel>
            </div>
            <!-- cd-panel__content2 -->
          </div>
          <!-- cd-panel__container2 -->
        </div>
        <!-- 一覧パネル -->
        <div class="cd-panel cd-panel--from-right js-cd-panel-main" id="rightPanel3" style="z-index:9;width:10%;">
          <header class="cd-panel__headerMini" id="customerListPanelHeader">
            <h1 id="customerListPanelTitle">一覧</h1> <a href="#0" class="cd-panel__close js-cd-close" id="js-cd-close3">Close</a> </header>
          <div class="cd-panel__containerMini" id="customerListPanelContainer">
            <div id="viewCustomerListPanel" style="height:100vh;display:none;vertical-align: middle;border-left:solid 1px #dbe2e9;" onClick="changeMenu();">
              <span style="vertical-align: middle;color:gray;font-size:30px;font-weight:bold;">《</span>
            </div>
            <div class="cd-panel__content" id="customerListPanel" style="padding-left:40px;padding-right:40px;background-color: rgb(236, 236, 236);color: black;">
            </div>
            <!-- cd-panel__content3 -->
          </div>
          <!-- cd-panel__container3 -->
        </div>
        <!-- 検索パネル -->
        <div class="cd-panel cd-panel--from-right js-cd-panel-main" id="leftPanel" style="z-index:9;width:0%;">
          <header class="cd-panel__headerVeryMini" id="searchPanelHeader">
            <h1 id="searchPanelTitle">検索</h1>
            <a href="#0" class="cd-panel__close js-cd-close" id="js-cd-close4">Close</a>
          </header>
          <div class="cd-panel__containerVeryMini" id="searchPanelContainer">
            <div style="padding:60px 10px 0px 10px;user-select: none;">
              <table style="width:100%;">
                <tr><td style="padding:10px;">
                  <div class="cd-panelButton" onClick="showSearchWindow();$('#leftPanel').removeClass('cd-panel--is-visible');">
                    <div><apex:image width="25px" height="25px" value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_image/search.png')}"/></div>
                    <div style="font-size:12px;color:gray;">詳細検索</div>
                  </div>
                </td></tr>
                <tr><td style="padding:10px;">
                  <div class="cd-panelButton" onClick="readUserConditionSearch();">
                    <div><apex:image width="25px" height="25px" value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_image/memorialsearch.png')}"/></div>
                    <div style="font-size:12px;color:gray;">記録条件検索</div>
                  </div>
                </td></tr>
                <tr><td style="padding:10px;">
                  <div class="cd-panelButton" onClick="clickAreaFlag();initpageFnc();">
                    <div><apex:image width="25px" height="25px" value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_image/tanto.png')}"/></div>
                    <div style="font-size:12px;color:gray;">担当顧客</div>
                  </div>
                </td></tr>
                <apex:outputText rendered="{!mts.mtAriaActivate__c}">
                  <tr><td style="padding:10px;" onClick="clickGroupFlag();initpageFnc();">
                    <div class="cd-panelButton">
                      <div><apex:image width="25px" height="25px" value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_image/area.png')}"/></div>
                      <div style="font-size:12px;color:gray;">担当エリア</div>
                    </div>
                  </td></tr>
                </apex:outputText>
                <apex:outputText rendered="{!mts.mtGroupActivate__c}">
                  <tr><td style="padding:10px;" onClick="clickMySalesFlag();initpageFnc();">
                    <div class="cd-panelButton">
                      <div><apex:image width="25px" height="25px" value="{!URLFOR($Resource.MapT_loadStatic, 'MapT_image/group.png')}"/></div>
                      <div style="font-size:12px;color:gray;">所属グループ</div>
                    </div>
                  </td></tr>
                </apex:outputText>
              </table>
            </div>
          </div>
          <!-- cd-panel__container3 -->
        </div>
        <!-- cd-panel2 -->
        <!-- ユーザ設定対応----Start-->
        <div class="ModifyScheduleWindow" style="z-index:10;display:none;">
          <div class="mapTBorder mapTdiv viewShadow" style="padding-left:10px;padding-right:10px;background-color: white;padding-bottom: 20px;height:220px;" id="SearchComponent">
            <div style="padding-bottom:10px;font-weight: bold;">時間設定</div>
            <div class="OneLine">
              <table class="DateSelectTable">
                <tr>
                  <td width="15%" style="vertical-align: middle;">開始</td>
                  <td><input type="datetime-local" value="1996-12-19T16:39:57" id="StartDateTime" class="SelectedDate" style="height:35px;background-color: aliceblue;" /> </td>
                </tr>
                <tr>
                  <td width="15%" style="vertical-align: middle;">終了</td>
                  <td><input type="datetime-local" value="1996-12-19T16:39:57" id="EndDateTime" class="SelectedDate" style="height:35px;background-color: aliceblue;margin-top:10px" /> </td>
                </tr>
                <tr style="height:25px;">
                  <td colspan="2"> <span class="SaveSuccessfulMessage" style="width: 250px;float: left;height:25px;">時間を変更しました。</span> </td>
                </tr>
                <tr>
                  <td colspan="2"> <br/> <input type="hidden" id="ScheduledToVisitId" name="ScheduledToVisitId" value="" /> <a class="mapTButton mapTButtonSize180 TopMenuLinkElement" onClick="SaveScheduledToVisit();" style="cursor:pointer;"><span>保存</span></a> <a class="mapTButton mapTButtonSize180 TopMenuLinkElement" onClick="hideEditWindowForScheduledToVisit();" style="cursor:pointer;"><span>閉じる</span></a> </td>
                </tr>
              </table>
            </div>
          </div>
        </div>
        <div class="tooltip" style="display:none;">
          <!-- 詳細表示ポップアップパネル -->
          <apex:outputPanel id="LeadItemOutputPanel" style="padding: 0px 0px 0px 0px;">
            <div style="color:red;">{!errorTextMarker}</div>
            <apex:repeat id="LeadItem" value="{!leadListItem}" var="LeadItem">
              <apex:commandLink style="text-decoration: none;" rendered="{!EnterButtonShowFlag}" onclick="return confIn('{!LeadItem.Id}');" action="{!checkIn}">
                <span Class="tooltipDetailButton">入室</span>
              </apex:commandLink>
              <div id="tooltipDetailButton" class="tooltipDetailButton" onClick="tooltipDetailButtonClick()" style="display:{!IF(DetailButtonShowFlag == true,'','none')}">詳細</div>
              <apex:commandLink style="text-decoration: none;" rendered="{!RouteGuideButtonShowFlag}" onclick="return confRoute('{!JSINHTMLENCODE(LeadItem.mtLatitude__c)}','{!JSINHTMLENCODE(LeadItem.mtLongitude__c)}','{!LeadItem.Id}');" action="{!naviStart}">
                <span Class="tooltipDetailButton">ルート案内</span>
              </apex:commandLink>
              <div id="tooltipOppButton" class="tooltipDetailButton" onClick="tooltipOppButtonClick()" style="display:{!IF(OppButtonShowFlag == true,'','none')}">商談</div>
              <apex:commandLink style="text-decoration: none;" rendered="{!ExitButtonShowFlag}" onclick="return confOut();" action="{!checkOut}"><span Class="tooltipDetailButton">退出</span></apex:commandLink>
              <table style="color: black;width:100%;">
                <apex:outputText rendered="{!LeadItem.mtGeocodingTypeGetLocation__c != null && LeadItem.mtGeocodingTypeGetLocation__c != 'address'}">
                  <tr>
                    <td width="100%" colspan="2">
                      <span style="color:red;">正確性に欠ける住所です</span>
                    </td>
                  </tr>
                </apex:outputText>
                <tr>
                  <td width="25%"> <span>顧客名：</span> </td>
                  <td>
                    <apex:outputLink value="/{!LeadItem.Id}" target="_blank" style="color:blue;">{!LeadItem.Name}</apex:outputLink>
                  </td>
                </tr>
                <tr>
                  <td width="25%"> <span>住所：</span> </td>
                  <td>
                    <apex:commandLink onClick="return confRoute('{!JSINHTMLENCODE(LeadItem.mtLatitude__c)}','{!JSINHTMLENCODE(LeadItem.mtLongitude__c)}','{!LeadItem.Id}');" value="{!LeadItem.State}{!LeadItem.City}{!LeadItem.Street}" /> </td>
                </tr>
                <tr>
                  <td width="25%"> <span>状況：</span> </td>
                  <td>
                    <apex:outputText value="{!JSINHTMLENCODE(LeadItem.mtLastStoVStatus__c)}（{!JSINHTMLENCODE(LeadItem.mtIsConvertedOrNot__c)}）" /> </td>
                </tr>
                <apex:repeat value="{!plusMarkerColumn}" var="column">
                  <tr>
                    <td width="25%"> <span>{!leadLabelMap[column]}：</span> </td>
                    <td>
                      <apex:outputText value="{!HTMLENCODE(LeadItem[column])}" /> </td>
                  </tr>
                </apex:repeat>
              </table> <br/>
              <div style="padding-bottom:4px;color: black;">訪問情報</div>
              <table width="100%" style="border-top:solid 1px;color: black;">
                <apex:repeat id="ScheduledToVisitInfoList" value="{!stiList}" var="ScheduledToVisitInfoItem">
                  <tr>
                    <td>
                      <apex:outputField value="{!ScheduledToVisitInfoItem.mtStartDateTime__c}" /> <span>{!ScheduledToVisitInfoItem.mtStatus__c}</span>
                      <apex:repeat value="{!plusMarkerViColumn}" var="column">
                        <span style="padding-left:5px;">
                          <apex:outputField value="{!ScheduledToVisitInfoItem[column]}"/>
                        </span>
                      </apex:repeat>
                    </td>
                    <td style="vertical-align: top;">
                      <apex:commandLink style="text-decoration: none;width: 50px;float: left;" onclick="return confIndetail('{!ScheduledToVisitInfoItem.Id}');" action="{!checkInDetail}" rendered="{!AND(OR(ScheduledToVisitInfoItem.mtStatus__c == '訪問前',ScheduledToVisitInfoItem.mtStatus__c == '移動中'),OR(mtu.mtVisitStatus__c == '訪問前',mtu.mtVisitStatus__c == '移動中'))}">
                        <span Class="tooltipDetailButton2">入室</span>
                      </apex:commandLink>
                    </td>
                  </tr>
                </apex:repeat>
              </table>
            </apex:repeat>
            <apex:repeat id="AccItem" value="{!accListItem}" var="accItem">
              <apex:commandLink style="text-decoration: none;" rendered="{!EnterButtonShowFlag}" onclick="return confIn('{!accItem.Id}');" action="{!checkIn}">
                <span Class="tooltipDetailButton">入室</span>
              </apex:commandLink>
              <div id="tooltipDetailButton" class="tooltipDetailButton" onClick="tooltipDetailButtonClick()" style="display:{!IF(DetailButtonShowFlag == true,'','none')}">詳細</div>
              <apex:commandLink style="text-decoration: none;" rendered="{!RouteGuideButtonShowFlag}" onclick="return confRoute('{!JSINHTMLENCODE(accItem.mtLatitude__c)}','{!JSINHTMLENCODE(accItem.mtLongitude__c)}','{!accItem.Id}');" action="{!naviStart}">
                <span Class="tooltipDetailButton">ルート案内</span>
              </apex:commandLink>
              <div id="tooltipOppButton" class="tooltipDetailButton" onClick="tooltipOppButtonClick()" style="display:{!IF(OppButtonShowFlag == true,'','none')}">商談</div>
              <apex:commandLink style="text-decoration: none;" rendered="{!ExitButtonShowFlag}" onclick="return confOut();" action="{!checkOut}"><span Class="tooltipDetailButton">退出</span></apex:commandLink>
              <table style="color: black;width:100%;">
                <apex:outputText rendered="{!accItem.mtGeocodingTypeGetLocation__c != null && accItem.mtGeocodingTypeGetLocation__c != 'address'}">
                  <tr>
                    <td width="100%" colspan="2">
                      <span style="color:red;">正確性に欠ける住所です</span>
                    </td>
                  </tr>
                </apex:outputText>
                <tr>                
                  <td width="25%"> <span>顧客名：</span> </td>
                  <td>
                    <apex:outputLink value="/{!accItem.Id}" target="_blank" style="color:blue;">{!accItem.Name}</apex:outputLink>
                  </td>
                </tr>
                <tr>
                  <td width="25%"> <span>住所：</span> </td>
                  <td>
                    <apex:commandLink onClick="return confRoute('{!JSINHTMLENCODE(accItem.mtLatitude__c)}','{!JSINHTMLENCODE(accItem.mtLongitude__c)}','{!accItem.Id}');" value="{!accItem.BillingState}{!accItem.BillingCity}{!accItem.BillingStreet}" /> </td>
                </tr>
                <tr>
                  <td width="25%"> <span>状況：</span> </td>
                  <td>
                    <apex:outputText value="{!HTMLENCODE(accItem.mtLastStoVStatus__c)}" /> </td>
                </tr>
                <apex:repeat value="{!plusMarkerColumnAcc}" var="column">
                  <tr>
                    <td width="25%"> <span>{!accLabelMap[column]}：</span> </td>
                    <td>
                      <apex:outputText value="{!HTMLENCODE(accItem[column])}" /> </td>
                  </tr>
                </apex:repeat>
              </table> <br/>
              <div style="padding-bottom:4px;color: black;">訪問情報</div>
              <table width="100%" style="border-top:solid 1px;color: black;">
                <apex:repeat id="ScheduledToVisitInfoList" value="{!stiList}" var="ScheduledToVisitInfoItem">
                  <tr>
                    <td>
                      <apex:outputField value="{!ScheduledToVisitInfoItem.mtStartDateTime__c}" />
                      <span>{!ScheduledToVisitInfoItem.mtStatus__c}</span>
                      <apex:repeat value="{!plusMarkerViColumn}" var="column">
                        <span style="padding-left:5px;">
                          <apex:outputField value="{!ScheduledToVisitInfoItem[column]}"/>
                        </span>
                      </apex:repeat>
                    </td>
                    <td style="vertical-align: top;">
                      <apex:commandLink style="text-decoration: none;width: 50px;float: left;" onclick="return confIndetail('{!ScheduledToVisitInfoItem.Id}');" action="{!checkInDetail}" rendered="{!AND(OR(ScheduledToVisitInfoItem.mtStatus__c == '訪問前',ScheduledToVisitInfoItem.mtStatus__c == '移動中'),OR(mtu.mtVisitStatus__c == '訪問前',mtu.mtVisitStatus__c == '移動中'))}"> <span Class="tooltipDetailButton2">入室</span> </apex:commandLink>
                    </td>
                  </tr>
                </apex:repeat>
              </table>
            </apex:repeat>
          </apex:outputPanel>
        </div>
        <!-- tooltip -->
        <apex:actionFunction name="searchLeadInfo" action="{!searchLeadInfo}" reRender="LeadItemOutputPanel,LeadItemOutputPanelTop,OppItemOutputPanelTop" oncomplete="encodeTextarea();">
          <apex:param name="strLatitude" value="" assignTo="{!strLatitude}" />
          <apex:param name="strLongitude" value="" assignTo="{!strLongitude}" />
        </apex:actionFunction>
        <apex:actionFunction name="naviStart" action="{!naviStart}" />
        <apex:actionFunction name="updateCenterLocation" action="{!updateCenterLocation}" reRender="none" />
        <apex:actionFunction name="setStiDataAddClm" action="{!setStiDataAddClm}" reRender="none">
          <apex:param name="stiId" value="" />
          <apex:param name="clmName" value="" />
          <apex:param name="setData" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="setStiDataAddClmRoute" action="{!setStiDataAddClmRoute}" reRender="none">
          <apex:param name="stiId" value="" />
          <apex:param name="clmName" value="" />
          <apex:param name="setData" value="" />
        </apex:actionFunction>
        <apex:actionFunction action="{!changeViewMode}" name="changeViewMode" rerender="LeadItemOutputPanelTop" oncomplete="encodeTextarea();" />
        <apex:actionFunction action="{!changeViewMode}" name="changeViewModeOpp" rerender="OppItemOutputPanelTop" />
        <apex:actionFunction action="{!changeViewMode}" name="changeViewModeRoute" rerender="LeadItemOutputPanelTopRoute" />
        <apex:actionFunction action="{!changeViewMode}" name="changeViewModeNavi" rerender="routeGuidance" />
        <apex:actionFunction action="{!getOpps}" name="getOpps" rerender="OppItemOutputPanelTop" />
        <apex:actionFunction action="{!setRootView}" name="setRootViewFuc" />
        <apex:actionFunction action="{!initPage}" name="initpageFnc" />
        <!-- 訪問予定登録モーダルウィンドウ -->
        <section id="modalAreaAddViData" class="modalArea" style="display:none;">
          <div id="modalBg" class="modalBg"></div>
          <div class="modalWrapper">
            <div class="modalContents">
              <h1 style="font-weight:bold;font-size:24px;padding-bottom:10px;padding-top:10px;color:black;">訪問予定登録</h1> <br/>
              <table style="width:350px;">
                <tr>
                  <th style="font-weight:bold;color:black;vertical-align:middle;"><div style="padding:10px 0px 10px 0px;">予定名</div></th>
                  <td>
                    <div style="padding:10px 0px 10px 0px;">
                      <apex:inputText value="{!viName}" style="width:100%;"/>
                    </div>
                  </td>
                </tr>
                <tr>
                  <th style="font-weight:bold;color:black;vertical-align:middle;"><div style="padding:10px 0px 10px 0px;">開始</div></th>
                  <td>
                    <div style="padding:10px 0px 10px 0px;">
                      <input type="Text" id="viStartDate" autocomplete="off" style="width:100%;" />
                    </div>
                  </td>
                </tr>
                <tr>
                  <th style="font-weight:bold;color:black;vertical-align:middle;"><div style="padding:10px 0px 10px 0px;">終了</div></th>
                  <td>
                    <div style="padding:10px 0px 10px 0px;">
                      <input type="Text" id="viEndDate" autocomplete="off" style="width:100%;"/>
                    </div>
                  </td>
                </tr>
                <tr>
                  <th style="font-weight:bold;color:black;vertical-align:middle;"><div style="padding:10px 0px 10px 0px;">担当者</div></th>
                  <td>
                      <apex:selectList value="{!viMapTechUserId}" size="1" style="border: 1px solid #9AB8D3;height: 25px;border-radius: 5px;font-size: 1rem;">
                          <apex:selectOptions value="{!viMapTechUserList}" />
                      </apex:selectList>
                  </td>
                </tr>
                <tr>
                  <td> <span style="padding:5px 5px 5px 5px;"><apex:commandLink action="{!viSave}" onClick="setDatepicker();" styleClass="mapTButton mapTButtonSize100" rerender="LeadItemOutputPanel,OppItemOutputPanelTop,LeadItemOutputPanelTop,LeadItemOutputPanelTopRoute" oncomplete="encodeTextarea();"><span>登録</span></apex:commandLink>
                    </span>
                  </td>
                  <td> <span style="padding:5px 5px 5px 5px;"><apex:commandLink onClick="setDatepicker();" styleClass="mapTButton mapTButtonSize100" rerender="LeadItemOutputPanel,OppItemOutputPanelTop,LeadItemOutputPanelTop,LeadItemOutputPanelTopRoute" style="margin-left: 10px;" oncomplete="encodeTextarea();"><span>閉じる</span></apex:commandLink>
                    </span>
                  </td>
                </tr>
              </table>
            </div>
            <div id="closeModalClaim" class="closeModal" onClick="closeAddViData();"> × </div>
          </div>
        </section>
        <!-- 商談登録モーダルウィンドウ -->
        <section id="modalAreaAddOppData" class="modalArea" style="display:none;">
          <div id="modalOppBg" class="modalBg"></div>
          <div class="modalWrapper">
            <div class="modalContents">
              <h1 style="font-weight:bold;font-size:16px;color:black;">商談登録</h1> <br/>
              <table>
                <tr>
                  <th style="font-weight:bold;color:black;"><div style="padding:10px 0px 10px 0px;">取引先</div></th>
                  <td>
                    <div style="padding:10px 0px 10px 0px;">
                      <apex:inputField value="{!newOpp.AccountId}" />
                    </div>
                  </td>
                </tr>

                <tr>
                  <th style="font-weight:bold;color:black;"><div style="padding:10px 0px 10px 0px;">説明</div></th>
                  <td>
                    <div style="padding:10px 0px 10px 0px;">
                      <apex:inputField value="{!newOpp.Description}" />
                    </div>
                  </td>
                </tr>
                <tr>
                  <td> <span style="padding:5px 5px 5px 5px;"><apex:commandLink action="{!oppSave}" onClick="setOppDatepicker();" styleClass="mapTButton mapTButtonSize100" rerender="LeadItemOutputPanel,OppItemOutputPanelTop,LeadItemOutputPanelTop,LeadItemOutputPanelTopRoute" oncomplete="encodeTextarea();"><span>登録</span></apex:commandLink>
                    </span>
                  </td>
                  <td> <span style="padding:5px 5px 5px 5px;"><apex:commandLink onClick="setOppDatepicker();" styleClass="mapTButton mapTButtonSize100" rerender="LeadItemOutputPanel,OppItemOutputPanelTop,LeadItemOutputPanelTop,LeadItemOutputPanelTopRoute" style="margin-left: 10px;" oncomplete="encodeTextarea();"><span>閉じる</span></apex:commandLink>
                    </span>
                  </td>
                </tr>
              </table>
            </div>
            <div id="closeModalOppClaim" class="closeModal" onClick="closeAddOppData();"> × </div>
          </div>
        </section>
        <!-- 未退出データ警告 -->
        <section id="modalAreaWarningCheckOut" class="modalArea" style="display:none;">
          <div id="modalBg" class="modalBg"></div>
          <div class="modalWrapper">
            <div class="modalContents">
              <div style="color:black;">未退出の訪問が存在しています。訪問を確認してください。</div> <br/>
              <div><a class="mapTButton mapTButtonSize100 TopMenuLinkElement" onClick="closeWarningCheckOut();tooltipDetailButtonClickRoute();" style="cursor:pointer;margin-left: 10px"><span>詳細を表示</span></a></div>
            </div>
            <div id="closeModalClaim" class="closeModal" onClick="closeWarningCheckOut();"> × </div>
          </div>
        </section>
        <!-- エラー表示 -->
        <section id="modalAreaErrorView" class="modalArea" style="display:none;">
          <div id="modalBg" class="modalBg"></div>
          <div class="modalWrapper">
            <div class="modalContents">
              <div style="color:black;">{!errorText}</div> <br/>
              <div><a class="mapTButton mapTButtonSize100 TopMenuLinkElement" onClick="closeErrorView();" style="cursor:pointer;margin-left: 10px"><span>閉じる</span></a></div>
            </div>
            <div id="closeModalClaim" class="closeModal" onClick="closeErrorView();"> × </div>
          </div>
        </section>
        <input type="hidden" id="strLatitude" name="strLatitude" value="" />
        <input type="hidden" id="strLongitude" name="strLongitude" value="" />
      </apex:form>
    </body>
  </apex:outputPanel>
  <script>
    //----------------------------------------
    // 初期実行スクリプト処理
    //----------------------------------------
    var MapItem;                    // 地図の変数
    var lastOpenedInfoWindow;       // 最後に開いたWindow
    var isMobileFlagTemp = false;   // モバイル判定
    var coords = '';                // 座標コード
    var CONFIGURATION = '';         // 座標JSONデータ
    var locColorMap = new Map();    // カラーマップ
    var bounds;
    var markers;                    // マーカー
    
    var positionCoordinate = new Array();// 座標コード
    var setPinMap = '{!JSENCODE(setPinStyleStr)}';    // ピン形状情報Map
    var iconStr = "";
    
    //---リード登録用項目---
    var myInfoWindowAddLeadGlobal;
    var markerAddLeadGlobal;
    
    var stopCenterMarkerUpdate = false;
    //---記録条件保存フラグ---
    var scToolSaveFlag = false;

    //---モバイルチェック---
    var isMobile = {
        Android: function() {
            return navigator.userAgent.match(/Android/i);
        },
        BlackBerry: function() {
            return navigator.userAgent.match(/BlackBerry/i);
        },
        iOS: function() {
            return navigator.userAgent.match(/iPhone|iPad|iPod/i);
        },
        Opera: function() {
            return navigator.userAgent.match(/Opera Mini/i);
        },
        Windows: function() {
            return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);
        },
        any: function() {
            return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
        }
    };
    
    if( isMobile.any() ){
        isMobileFlagTemp = true;
    }
    // DatetimePickerセット
    try{
        $.datetimepicker.setLocale('ja');
        $("#viStartDate").datetimepicker();
        $("#viEndDate").datetimepicker();
    }catch (error) {
        alert('DatetimePickerの初期化に失敗しました。開発元までお問い合わせください。ERR-01' + error);
    }
    var leadExecute = false; //executeLeadQueryを実行完了フラグ
    var accExecute = false; //executeAccQueryを実行完了フラグ
    var configExecute = false; //CONFIGURATIONyを設定完了フラグ
    var accPamam = { pCoords:coords,pMaxCnt:0,exeFlg:accExecute }
    initLocal();
    //---画面表示座標一覧文字列---
    function initLocal(){
      try{
        
        var maxCnt = 0;
        
        try{
          let ldPamam = { pCoords: coords,pMaxCnt:maxCnt,exeFlg:leadExecute }
          var ldQuery = "{!JSENCODE(executeLeadQuery)}";
          exeQuery(ldQuery,locColorMap, positionCoordinate,ldPamam,"lead");

          // 検索完了まで待機
          const intervalId = setInterval(()=>{
            leadExecute = ldPamam.exeFlg;
            if(leadExecute == false){
              return;
            }
            clearInterval(intervalId);
            
            coords = ldPamam.pCoords;
            maxCnt = ldPamam.pMaxCnt;

            accPamam = { pCoords: coords,pMaxCnt:maxCnt,exeFlg:accExecute }
            var accQuery = "{!JSENCODE(executeAccQuery)}";
            exeQuery(accQuery,locColorMap, positionCoordinate,accPamam,"account");

            }, 500);

          }catch (error) {
              alert('カスタム条件式を確認してください。\n・OR句を使用するときは対象を()で囲んでください。');
          }

        // 検索完了まで待機
        const intervalId = setInterval(()=>{
            accExecute = accPamam.exeFlg;
            if(leadExecute == false || accExecute == false){
                return;
            }
            clearInterval(intervalId);

            coords = accPamam.pCoords;
            maxCnt = accPamam.pMaxCnt;

            document.getElementById("viewCount").innerText = "表示件数：" + maxCnt;
            document.getElementById("viewCountHide").innerText = "表示件数：" + maxCnt;
            coords = coords.substring(0,coords.length - 1);
          
            CONFIGURATION = JSON.parse(
                '{"capabilities":{' + 
                      '"input":true, ' + 
                      '"autocomplete":true,' + 
                      '"directions":true,' + 
                      '"distanceMatrix":true,' + 
                      '"details":true' + 
                  '},' + 
                  '"locations":[' + coords + '],' +
                  '"mapOptions":{},' + 
                  '"mapsApiKey":"{!JSINHTMLENCODE($Setup.f_mt__mtGoogleApiParam__c.f_mt__mtAPIKey__c)}"' + 
                '}'
            );
            
            coords = null;
            configExecute = true;
          }, 500);
          
      }catch (error) {
          alert('座標の初期化に失敗しました。開発元までお問い合わせください。ERR-02' + error);
          leadExecute = true;
          accExecute = true;
          configExecute = true;
      }
    }

    /*--------------------------------------------------
     * SOQL実行処理（XSS対策版）
     *-------------------------------------------------*/
    function exeQuery(query, locColorMap, positionCoordinate, dataPamam, execType){
      if(query != ""){
        Visualforce.remoting.Manager.invokeAction(
          '{!$RemoteAction.MapTMobileMapPageController.exeLeadQuery}',
          query,
          function(result, event){
            if (event.status && event.result != '') {
              var dataLabelMap = new Map();
              var columns = [];
              
              if(execType == "lead"){
                columns = "{!JSINHTMLENCODE(mts.f_mt__mtCustomerListAddColumn__c)}".split(",");
                "{!JSINHTMLENCODE(leadLabelMapStr)}".split(',').forEach(function(dataVal){
                  var parts = dataVal.split('=');
                  dataLabelMap.set(parts[0], parts[1]);
                });
              } else if(execType == "account"){
                columns = "{!JSINHTMLENCODE(mts.f_mt__mtCustomerListAccAddColumn__c)}".split(",");
                "{!JSINHTMLENCODE(accLabelMapStr)}".split(',').forEach(function(dataVal){
                  var parts = dataVal.split('=');
                  dataLabelMap.set(parts[0], parts[1]);
                });
              }
    
              var dataList = JSON.parse(event.result);
              for (var i = 0; i < dataList.length; i++) {
                var dataRec = dataList[i];
                if(dataRec.f_mt__mtLatitude__c && dataRec.f_mt__mtLongitude__c){
                  dataPamam.pCoords += '{"coords":{"lat": ' + Number(dataRec.f_mt__mtLatitude__c) + ',"lng": ' + Number(dataRec.f_mt__mtLongitude__c) + '}},';
                  locColorMap.set(Number(dataRec.f_mt__mtLatitude__c) + Number(dataRec.f_mt__mtLongitude__c), dataRec.f_mt__mtMarkerColor__c || 'ffffff');
                  positionCoordinate.push(dataRec.f_mt__mtLatitude__c + ',' + dataRec.f_mt__mtLongitude__c);
    
                  if(i < 100){
                    var addHtml = '';
                    columns.forEach(function(clmName){
                      if(clmName){
                        var labelSafe = $('<div>').text(dataLabelMap.get(clmName)).html();
                        var valueSafe = $('<div>').text(dataRec[clmName] || '').html();
                        addHtml += '<tr><td style="padding:5px;">' +
                                   '<div style="color:#021431fa;font-weight:bold;padding-bottom:3px;">' + labelSafe + '</div>' +
                                   '<div style="height:20px;">' + valueSafe + '</div>' +
                                   '</td></tr>';
                      }
                    });
    
                    var $customerDiv = $('<div>', {
                      id: 'clp' + dataRec.f_mt__mtLatitude__c + dataRec.f_mt__mtLongitude__c,
                      class: 'custDiv',
                      click: (function(lat, lng){ 
                        return function(){ moveClickLocation(this, lat, lng); };
                      })(dataRec.f_mt__mtLatitude__c, dataRec.f_mt__mtLongitude__c)
                    });
    
                    var $table = $('<table>', { style: 'width:100%;' })
                      .append(
                        $('<tr>').append(
                          $('<td>', { style: 'padding:5px;' }).append(
                            $('<div>', { style: 'color:#021431fa;font-weight:bold;padding-bottom:3px;' }).text('顧客名'),
                            $('<a>', {
                              style: 'color:blue;',
                              href: '/' + encodeURIComponent(dataRec.Id),
                              target: '_blank'
                            }).text(dataRec.Name),
                            $('<span>').html('　'),
                            $('<span>', {
                              style: 'border:solid 1px gray;background:#' + $('<div>').text(dataRec.f_mt__mtMarkerColor__c || 'ffffff').html()
                            }).html('　　　'),
                            $('<span>').html('　'),
                            $('<input>', {
                              type: 'button',
                              class: 'btnMini',
                              value: '詳細',
                              click: (function(cnt, lat, lng){
                                return function(){ openPopupWindow(cnt, lat, lng); };
                              })(dataPamam.pMaxCnt, dataRec.f_mt__mtLatitude__c, dataRec.f_mt__mtLongitude__c)
                            })
                          )
                        ),
                        $('<tr>').append(
                          $('<td>', { style: 'padding:5px;' }).append(
                            $('<div>', { style: 'color:#021431fa;font-weight:bold;padding-bottom:3px;' }).text('住所'),
                            $('<div>', { style: 'height:20px;' }).text(dataRec.f_mt__mtInputAddress__c || '')
                          )
                        ),
                        $(addHtml)
                      );
    
                    $customerDiv.append($table);
                    $('#customerListPanel').append($customerDiv).append('<br/>');
                  }
                  dataPamam.pMaxCnt++;
                }
              }
            }
            dataPamam.exeFlg = true;
          },
          {buffer: false, escape: false}
        );
      } else {
        dataPamam.exeFlg = true;
      }
    }

    /*--------------------------------------------------
     * onLoad処理
     *-------------------------------------------------*/
    window.onload = function() {
        // 検索完了まで待機
        const intervalId = setInterval(()=>{
            if(leadExecute == false || accExecute == false || configExecute == false){
                return;
            }
            clearInterval(intervalId);

            windOnload();

          }, 500);
    }

    /*------------------------------------------------
     * windowOnload処理Function
     *-----------------------------------------------*/
    function windOnload(){
      initMap();
      if('{!JSINHTMLENCODE(lastSelectTab)}' != ''){
          document.getElementById("{!JSINHTMLENCODE(lastSelectTab)}").click();
      }
      
      try{
          // オートコンプリート無効化
          //1.住所
          document.getElementById('page:form:scAddress').autocomplete = "off";
          //2.所属グループ
          document.getElementById('page:form:scGroup').autocomplete = "off";
          //3.顧客名
          document.getElementById('page:form:leadName').autocomplete = "off";
          //4.エリア
          document.getElementById('page:form:scArea').autocomplete = "off";
          //6.担当者
          document.getElementById('page:form:scSales').autocomplete = "off";
          //7 作成日
          document.getElementById('page:form:createDateStart').autocomplete = "off";
          document.getElementById('page:form:createDateEnd').autocomplete = "off";
          //9 担当者（最後の訪問）
          document.getElementById('page:form:viUser').autocomplete = "off";
          //10 訪問日時（最後の訪問）
          document.getElementById('page:form:viStart').autocomplete = "off";
          document.getElementById('page:form:viEnd').autocomplete = "off";
          //11 訪問予約日
          document.getElementById('page:form:ScDateStart').autocomplete = "off";
          document.getElementById('page:form:ScDateEnd').autocomplete = "off";

          if('{!nFarSearchTanto}' == 'true'){
              document.getElementById('nFarSearchTanto').checked = true;
              document.getElementById('nFarSearchTantoMb').checked = true;
          }
          if('{!nFarSearchGroup}' == 'true'){
              document.getElementById('nFarSearchGroup').checked = true;
              document.getElementById('nFarSearchGroupMb').checked = true;
          }
          if('{!nFarSearchArea}' == 'true'){
              document.getElementById('nFarSearchArea').checked = true;
              document.getElementById('nFarSearchAreaMb').checked = true;
          }
          if('{!nFarSearchEnd}' == 'true'){
              document.getElementById('nFarSearchEnd').checked = true;
              document.getElementById('nFarSearchEndMb').checked = true;
          }
          
          $("*").dblclick(function(e){
              e.preventDefault();
          });
          
          $('#js-cd-close').bind('click', function() {
              $('#rightPanel').removeClass("cd-panel--is-visible");
              changeViewMode();
          });
          $('#js-opp-close').bind('click', function() {
              $('#rightOppPanel').removeClass("cd-panel--is-visible");
              changeViewModeOpp();
          });
          
          $('#js-cd-closeRoute').bind('click', function() {
              $('#rightPanelRoute').removeClass("cd-panel--is-visible");
              changeViewModeRoute();
          });
          
          $('#js-cd-close2').bind('click', function() {
              $('#rightPanel2').removeClass("cd-panel--is-visible");
              changeViewModeNavi();
          });
          $('#js-cd-close3').bind('click', function() {
              $('#rightPanel3').removeClass("cd-panel--is-visible");
          });
          $('#js-cd-close4').bind('click', function() {
              $('#leftPanel').removeClass("cd-panel--is-visible");
          });
          
          //初期化の時に、非表示に設定する
          $(".tooltip").css("display", "none");
          
          // 現在の住所・MapTechユーザの登録起点を取得する
          getLocation(MapItem);
          
          if('{!JSINHTMLENCODE(AddLeadModeFlag)}' == 'true'){
              //リード登録モードに変更すると、地図上にマーカーを設定してからリードを登録できます
              getLocationAddLead(MapItem);
          }
          
          //複数選択対応(訪問履歴)--------Start
          $('select[multiple]').multiselect({
              columns  : 1,
              search   : true,
              selectAll: true,
              texts    : {
                  placeholder: '選択してください',
              }
          });
          var scVisitStatus = '{!JSINHTMLENCODE(scVisitStatus)}';
          if(scVisitStatus != ''){
              var selectedOptions = scVisitStatus.split(",");
              for(var i in selectedOptions) {
                  var optionVal = selectedOptions[i];
                  $('.scVisitStatus ').find("option[value='"+optionVal+"']").prop("selected", "selected");
              }
              $('.scVisitStatus ').multiselect('reload');
          }
          
          var className = '';
          var realClassName = '';
          $('.DynamicFieldForAll').each(function(){
              className = $(this).attr('class');
              var oneData = className.split(' ');
              realClassName = oneData[2];
              
              var selectedValues = $(this).val();
              var selectedOptions = selectedValues.split(",");
              for(var i in selectedOptions) {
                  var optionVal = selectedOptions[i];
                  $('#'+realClassName+'').find("option[value='"+ optionVal +"']").prop("selected", "selected");
              }
                  
              $('#'+realClassName+'').multiselect('reload');
          });
          
          // モバイル判定
          if( isMobile.any() ){
              document.getElementById("allSetDataAreaMobile").style.display = '';
          }else{
              document.getElementById("allSetDataArea").style.display = '';
          }
          
          // Lightピッカー表示処理
          var picker = new Lightpick({
              field: document.getElementById('page:form:createDateStart'),
              secondField: document.getElementById('page:form:createDateEnd'),
              isMobileFlag:isMobileFlagTemp,
              singleDate: false,
              lang: 'jp',
              format: 'YYYY/MM/DD',
              
              dropdowns: {
                  years: {
                    min: 2000,
                    max: null,
                  },
                  months: true,
              },
          });
          
          // Lightピッカー表示処理
          var picker2 = new Lightpick({
              field: document.getElementById('page:form:viStart'),
              secondField: document.getElementById('page:form:viEnd'),
              isMobileFlag:isMobileFlagTemp,
              singleDate: false,
              lang: 'jp',
              // date format
              format: 'YYYY/MM/DD',
              
              dropdowns: {
                  years: {
                    min: 2000,
                    max: null,
                  },
                  months: true,
              },
          });
          
          // Lightピッカー表示処理
          var picker = new Lightpick({
              field: document.getElementById('page:form:ScDateStart'),
              secondField: document.getElementById('page:form:ScDateEnd'),
              isMobileFlag:isMobileFlagTemp,
              singleDate: false,
              lang: 'jp',
              // date format
              format: 'YYYY/MM/DD',
              
              dropdowns: {
                  years: {
                    min: 2000,
                    max: null,
                  },
                  months: true,
              },
          });
          
          // 日付選択のLightピッカー表示処理
          var picker3 = new Lightpick({
              field: document.getElementById('page:form:SelectedDate'),
              format: 'YYYY/MM/DD',
              singleDate: true,
              lang: 'jp',
              dropdowns: {
                  years: {
                    min: 2000,
                    max: null,
                  },
                  months: true,
              },
          });
          // 日付選択のLightピッカー表示処理
          var picker4 = new Lightpick({
              field: document.getElementById('page:form:SelectedDateEnd'),
              format: 'YYYY/MM/DD',
              singleDate: true,
              lang: 'jp',
              dropdowns: {
                  years: {
                    min: 2000,
                    max: null,
                  },
                  months: true,
              },
          });
          
          var zoomSet = '{!JSINHTMLENCODE(mtu.f_mt__mtZoomSetting__c)}';
          if(zoomSet == ''){
            zoomSet = '{!JSENCODE(HTMLENCODE(googleSetting.f_mt__mtZoomSetting__c))}';
          }
          
          if('{!JSENCODE(HTMLENCODE(mtu.f_mt__mtApointLatitude__c))}' != ''){
              var mtulatApo = '{!JSENCODE(HTMLENCODE(mtu.f_mt__mtApointLatitude__c))}';
              var mtulngApo = '{!JSENCODE(HTMLENCODE(mtu.f_mt__mtApointLongitude__c))}';
              var beforeOpenWindow = new google.maps.LatLng(mtulatApo , mtulngApo );
              
              if(zoomSet == '前回の作業位置固定'){
                  bounds.extend(beforeOpenWindow);
              }
          }
          
          var fitlistener = google.maps.event.addListener(MapItem, "idle", function() {
              // 地図の表示設定を適用
              MapItem.fitBounds(bounds);
              google.maps.event.removeListener(fitlistener);
          });
          
          // 退出警告を表示する
          if("{!warningCheckOut}" == "true"){
              loadingWarningCheckOut();
          }
          // エラーが発生していた場合エラーを表示
          if("{!JSENCODE(HTMLENCODE(errorText))}" != ""){
              loadingErrorView();
          }
          
          document.getElementById("map-container").style.display = "";
          document.getElementById("loaderWindow").style.display = "none";
          document.getElementById("loaderMsg").style.display = "none";
      }catch (error) {
          alert('表示に失敗しました。地図を再表示してください。日付入力項目に日付以外を入力しないでください。ERR-03');
      }

      // classがselectListの全ての<select>要素に対して処理
      $(".selectList").each(function() {
          // 空のvalueを持つ<option>を削除
          $(this).find("option[value='']").remove();
      });
    }

    /*------------------------------------------------
     * 簡易Function
     *-----------------------------------------------*/
    function hideElement(el) {el.style.display = 'none';}                                              // 引数の要素を非表示に変更する
    function showElement(el) {el.style.display = '';}                                                  // 引数の要素を表示に変更する
    function hidePopUpWindowWithArrow(){$(".tooltip").hide();}                                         // ポップアップパネルを隠す
    function tooltipDetailButtonClick() {$('#rightPanel').addClass("cd-panel--is-visible");}           // 右パネルの詳細表示
    function tooltipOppButtonClick() {$('#rightOppPanel').addClass("cd-panel--is-visible");}           // 右商談パネルの詳細表示
    function tooltipDetailButtonClickRoute() {$('#rightPanelRoute').addClass("cd-panel--is-visible");} // 右ルートパネルの詳細表示
    function HideMenuWhenMarkerWasClick() {hideArea();}                                                // Menuを閉じる
    function initMap() {new LocatorPlus(CONFIGURATION);}                                               // Mapの初期化
    function hideSearchWindow(){$(".SearchTool").hide();}                                              // 検索ウィンドウを隠す
    function showSearchWindow(){$(".SearchTool").show();}                                              // 検索ウィンドウを表示
    function showUserSettingWindow(){$(".UserSettingWindow").show();}                                  // ユーザ設定を表示
    function hideUserSettingWindow(){$(".UserSettingWindow").hide();}                                  // ユーザ設定を隠す
    function showSelectedDateWindow(){$(".SelectedDateWindow").show();}                                // 日付選択を表示
    function hideSelectedDateWindow(){$(".SelectedDateWindow").hide();}                                // 日付選択を隠す
    
    /*-----------------------------------------------
     * 地図の初期化
     *----------------------------------------------*/
    function LocatorPlus(configuration) {
        try{
            const locator = this;

            locator.locations     = configuration.locations || [];
            locator.capabilities  = configuration.capabilities || {};

            const mapEl               = document.getElementById('map');
            locator.panelListEl       = document.getElementById('locations-panel-list');
            const sectionNameEl       = document.getElementById('location-results-section-name');
            const resultsContainerEl  = document.getElementById('location-results-list');

            locator.searchLocation        = null;
            locator.searchLocationMarker  = null;
            locator.selectedLocationIdx   = null;
            locator.userCountry           = null;

            const mapOptions = configuration.mapOptions;
            
            var mapTypeSet = '';
            if('{!JSENCODE(HTMLENCODE(mtu.f_mt__mtViewTypeMapTechMap__c))}' != ''){
                mapTypeSet = '{!JSENCODE(HTMLENCODE(mtu.f_mt__mtViewTypeMapTechMap__c))}';
            }else{
                mapTypeSet = '{!JSENCODE(HTMLENCODE(googleSetting.f_mt__mtMapType__c))}'
            }
            
            var zoomSet = '{!JSINHTMLENCODE(mtu.f_mt__mtZoomSetting__c)}';
            if(zoomSet == ''){
              zoomSet = '{!JSENCODE(HTMLENCODE(googleSetting.f_mt__mtZoomSetting__c))}';
            }
            
            locator.map = new google.maps.Map(mapEl, {
                gestureHandling:      'greedy',
                fullscreenControl:    mapOptions.fullscreenControl,
                zoomControl:          mapOptions.zoomControl,
                streetViewControl:    mapOptions.streetViewControl,
                mapTypeControl:       mapOptions.mapTypeControl,
                mapTypeId:            mapTypeSet,
                streetViewControl:    true,
                minZoom: 5,
                
              
                mapTypeControlOptions: {
                    position: google.maps.ControlPosition.TOP_RIGHT,
                },
            });
            
            MapItem = locator.map;
            
            // クリック時のアクション
            google.maps.event.addListener(locator.map, 'click', function(e) {
                hidePopUpWindowWithArrow();  // 検索パネル非表示
                hideSearchWindow();          // 検索処理
                hideUserSettingWindow();     // ユーザ設定画面
            });
            
            // ドラック時のアクション
            google.maps.event.addListener(locator.map, 'drag', function(e) {
                hidePopUpWindowWithArrow();  // 検索パネル非表示
            });
            
            // ズーム時のアクション
            google.maps.event.addListener(locator.map, 'zoom_changed', function(e) {
               hidePopUpWindowWithArrow();  // 検索パネル非表示
            });
            
            //-------------------------------------------------------
            // インナーファンクション 選択データの取得
            //-------------------------------------------------------
            const selectResultItem = function(locationIdx, panToMarker,event) {
                locator.selectedLocationIdx = locationIdx;
                for (let locationElem of resultsContainerEl.children) {
                    locationElem.classList.remove('selected');
                    if (getResultIndex(locationElem) === locator.selectedLocationIdx) {
                        locationElem.classList.add('selected');
                    }
                }
                if (panToMarker && (locationIdx != null)) {
                    locator.map.panTo(locator.locations[locationIdx].coords);
                }
                
                //Markerを押下する時に、Menuを閉じます
                HideMenuWhenMarkerWasClick();
                
                showPopUpWindowWithArrow(event);
                $("#divItem"+locationIdx).css("display", "");
            };
            
            // MarkerClusterer設定
            const labels = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            bounds = new google.maps.LatLngBounds();
              
            // マーカーをセットする
            markers = locator.locations.map(function(location, index) {
                var colorSet = locColorMap.get(location.coords.lat + location.coords.lng) != null ? locColorMap.get(location.coords.lat + location.coords.lng) : 'ffffff';
                if(setPinMap.indexOf(locColorMap.get(location.coords.lat + location.coords.lng) + '":"車') != -1){
                    iconStr = "{!URLFOR($Resource.MapTMarkers, '/Car/" + colorSet + ".png')}";
                    
                }else if(setPinMap.indexOf(locColorMap.get(location.coords.lat + location.coords.lng) + '":"星') != -1){
                    iconStr = "{!URLFOR($Resource.MapTMarkers, '/Star/" + colorSet + ".png')}";
                    
                }else{
                    iconStr = "{!URLFOR($Resource.MapTMarkers, '/Home/" + colorSet + ".png')}";
                }
                
                const marker = new google.maps.Marker({
                    position: location.coords,
                    map:      locator.map,
                    icon: {
                        url: iconStr
                    },
                    
                    title:location.title,
                });
                
                if('{!visitRecDetailRedirectFlag}' == 'true' || zoomSet == 'オートフォーカス'){
                    bounds.extend(marker.position);
                }
                
                // 登録モードはクリックイベントを無効化
                if('{!JSENCODE(HTMLENCODE(AddLeadModeFlag))}' == 'false'){
                    // clickイベントを取得するListenerを追加
                    marker.addListener('click', function(event) {
                        // 前開いたInfoWindow画面を閉じます
                        closeLastOpenedInfoWindow();
                        stopCenterMarkerUpdate = true;
                        
                        var strLatitude = event.latLng.lat();
                        var strLongitude = event.latLng.lng();

                        // 顧客一覧の色を変更
                        changeCustomerListColor(strLatitude,strLongitude);
                        
                        selectResultItem(index, false,event);
                        const contentString = '<div class="tooltipDetailButton" onclick="tooltipDetailButtonClick()" style="display:none;">詳細</div>' + 
                                              '<span id="page:form:LeadItemOutputPanel" style="padding: 0px 0px 0px 0px;"></span>';
                        const infowindowItemLead = new google.maps.InfoWindow({
                            content: contentString,
                        });
                        
                        lastOpenedInfoWindow = infowindowItemLead;
                        
                        infowindowItemLead.open({
                            anchor: marker,
                            MapItem,
                            shouldFocus: false,
                        });
                    });
                }
                
                var listener = google.maps.event.addListener(MapItem, "idle", function () {
                    MapItem.setZoom(6);
                    google.maps.event.removeListener(listener);
                });
                
                return marker;
            });
            
            // オプションの定義
            const clusterOptions = {
                imagePath: "https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",
                gridSize: 30,
                zoomOnClick: false,
                maxZoom: {!JSINHTMLENCODE(Text(mtu.mtClusterMaxZoom__c))}
            };
            // マーカーを管理する Marker Clusterer を追加する
            const markerClusterer = new MarkerClusterer(locator.map, markers, clusterOptions);
            
            // クラスターが生成されたあとにスタイルを変更する
            const styles = markerClusterer.getStyles();
            for (let i=0; i<styles.length; i++) {
                //クラスターのFontサイズ
                styles[i].textSize = 20;
            }

            // マーカーの境界に合わせる
            locator.updateBounds = function() {
                const bounds = new google.maps.LatLngBounds();
                if (locator.searchLocationMarker) {
                    if(zoomSet == 'オートフォーカス'){
                        bounds.extend(locator.searchLocationMarker.getPosition());
                    }
                }
                for (let i = 0; i < markers.length; i++) {
                    if(zoomSet == 'オートフォーカス'){
                        bounds.extend(markers[i].getPosition());
                    }
                }
                locator.map.fitBounds(bounds);
            };
            locator.updateBounds();

            // 指定場所からユーザまでの距離を取得
            // リストの並べ替えに使用
            const getLocationDistance = function(location) {
                if (!locator.searchLocation) return null;

                // 移動距離を使用（距離行列）
                if (location.travelDistanceValue != null) {
                    return location.travelDistanceValue;
                }

                // 直線距離にフォールバック
                return google.maps.geometry.spherical.computeDistanceBetween(
                    new google.maps.LatLng(location.coords),
                    locator.searchLocation.location
                );
            };
            
            // ルート案内
            if("{!rootviewFlag}" == "true"){
                var directionsService = new google.maps.DirectionsService();
                var directionsRenderer = new google.maps.DirectionsRenderer();
                
                // 経路の経度緯度
                var myWaypoints = [];
                var strwaypoints = '{!JSENCODE(HTMLENCODE(waypoints))}';
                
                //最後のコンマを削除する
                strwaypoints = strwaypoints.replace(/,\s*$/, "");
                
                if(strwaypoints != ''){
                    strwaypoints.split(',').forEach( function( latligData ) {
                        var locData = new google.maps.LatLng(latligData.split(':')[0],latligData.split(':')[1])
                        myWaypoints.push({ location:locData , stopover: true});
                    })
                }
                
                directionsRenderer.setMap(locator.map);

                var TravelModeStr = '';
                var mtuTransport = '{!JSENCODE(HTMLENCODE(mtu.f_mt__mtTransportation__c))}';
                if(mtuTransport == ''){
                  mtuTransport = '{!JSENCODE(HTMLENCODE(googleSetting.f_mt__mtTransportation__c))}';
                }
                
                if(mtuTransport == '車'){
                    TravelModeStr = 'DRIVING';
                    
                }else if(mtuTransport == '徒歩'){
                    TravelModeStr = 'WALKING';
                    
                }else if(mtuTransport == '徒歩/電車'){
                    TravelModeStr = 'TRANSIT';
                    
                }else if(mtuTransport == '自転車'){
                    TravelModeStr = 'BICYCLING';
                }
                
                var originData = null;
                
                // GPSを取得する必要がある可能性があるためGPS情報を取得する前提で処理する
                navigator.geolocation.getCurrentPosition((position) => {
                    if('{!JSINHTMLENCODE(originLat)}' == '' && '{!JSINHTMLENCODE(originLig)}' == ''){
                        var gpslat = position.coords.latitude;
                        var gpslig = position.coords.longitude;
                        originData = new google.maps.LatLng(gpslat,gpslig);
                        
                    }else{
                        originData = new google.maps.LatLng('{!JSINHTMLENCODE(originLat)}','{!JSINHTMLENCODE(originLig)}');
                    }
                    
                    var endData = new google.maps.LatLng('{!JSENCODE(HTMLENCODE(endLat))}','{!JSENCODE(HTMLENCODE(endLig))}');
                    
                    // 中間経路が存在しない場合
                    if(myWaypoints.length == 0 && '{!JSENCODE(HTMLENCODE(endLat))}' != ''){
                        directionsService.route({
                            origin: {
                                'location': originData
                            },
                            destination: {
                                'location': endData
                            },
                            
                            transitOptions: {
                                modes: ['BUS','RAIL','SUBWAY','TRAIN','TRAM'],
                                routingPreference: 'FEWER_TRANSFERS'
                            },
                            avoidTolls: {!IF(mtu.mtAvoidTolls__c,"true","false")},
                            travelMode: TravelModeStr
                        }, function(response, status) {
                            if (status === 'OK') {
                                directionsRenderer.setDirections(response);
                                directionsRenderer.setOptions({
                                    suppressMarkers: true,
                                    preserveViewport: (zoomSet == 'オートフォーカス' ? false : true)
                                });
                                
                                //順番でリードを出力する
                                if('{!JSENCODE(HTMLENCODE(hyoujiKeishiki))}' == '2'){
                                    outputAllRouteInfoWithLead(response);
                                }
                            } else {
                                window.alert('ルート検索ができませんでした。交通手段についてご確認ください。');
                            }
                        });
                    // 中間経路が存在する場合
                    }else if(myWaypoints.length != 0){
                        directionsService.route({
                            origin: {
                                'location': originData
                            },
                            destination: {
                                'location': endData
                            },
                            
                            waypoints: myWaypoints,
                            optimizeWaypoints: ('{!JSENCODE(HTMLENCODE(hyoujiKeishiki)) }' == '1' ? false : true),
                            transitOptions: {
                                modes: ['BUS','RAIL','SUBWAY','TRAIN','TRAM'],
                                routingPreference: 'FEWER_TRANSFERS'
                            },
                            avoidTolls: {!IF(mtu.mtAvoidTolls__c,"true","false")},
                            travelMode: TravelModeStr
                            
                        }, function(response, status) {
                            if (status === 'OK') {
                                directionsRenderer.setDirections(response);
                                directionsRenderer.setOptions({
                                    suppressMarkers: true,
                                    preserveViewport: (zoomSet == 'オートフォーカス' ? false : true)
                                });
                                
                                //順番でリードを出力する
                                if('{!JSENCODE(HTMLENCODE(hyoujiKeishiki))}' == '2'){
                                    outputAllRouteInfoWithLead(response);
                                }
                            } else {
                                window.alert('ルート検索ができませんでした。交通手段についてご確認ください。');
                            }
                        });
                    }
                });
            }
            
            const getResultIndex = function(elem) {
                return parseInt(elem.getAttribute('data-location-index'));
            };

            locator.renderResultsList = function() {
                let locations = locator.locations.slice();
                for (let i = 0; i < locations.length; i++) {
                    locations[i].index = i;
                }
                if (locator.searchLocation) {
                    sectionNameEl.textContent =
                        'Nearest locations (' + locations.length + ')';
                    locations.sort(function(a, b) {
                        return getLocationDistance(a) - getLocationDistance(b);
                    });
                } else {
                    sectionNameEl.textContent = '位置情報 (${locations.length})';
                }
                const resultItemContext = {
                    locations: locations,
                    showDirectionsButton: !!locator.searchLocation
                };

                for (let item of resultsContainerEl.children) {
                    const resultIndex = getResultIndex(item);
                    if (resultIndex === locator.selectedLocationIdx) {
                        item.classList.add('selected');
                    }

                    const resultSelectionHandler = function() {
                        if (resultIndex !== locator.selectedLocationIdx) {
                            locator.clearDirections();
                        }
                        selectResultItem(resultIndex, true);
                    };

                    item.addEventListener('click', resultSelectionHandler);
                    item.querySelector('.select-location').addEventListener('click', function(e) {
                        alert(e.latLng.toString());
                        resultSelectionHandler();
                        e.stopPropagation();
                    });

                    item.querySelector('.details-button').addEventListener('click', function() {
                        locator.showDetails(resultIndex);
                    });

                    if (resultItemContext.showDirectionsButton) {
                        item.querySelector('.show-directions').addEventListener('click', function(e) {
                            alert(e.latLng.toString());
                            
                            selectResultItem(resultIndex, false);
                            locator.updateDirections();
                            e.stopPropagation();
                        });
                    }
                }
            };

            // オプションの機能の初期化
            initializeSearchInput(locator);
            initializeDistanceMatrix(locator);
            initializeDirections(locator);
            initializeDetails(locator);

            // 結果の初期レンダリング
            locator.renderResultsList();
        }catch (error) {
            alert('地図の初期化に失敗しました。開発元までお問い合わせください。ERR-04' + error);
        }
    }
    
    /*--------------------------------------------------
     * ポップアップ表示画面が開かれていた場合に閉じる
     *-------------------------------------------------*/
    function closeLastOpenedInfoWindow() {
        if (lastOpenedInfoWindow) {
            lastOpenedInfoWindow.close();
            stopCenterMarkerUpdate = false;
        }
    }

    /*--------------------------------------------------
     * 検索の初期化
     *-------------------------------------------------*/
    function initializeSearchInput(locator) {
        try{
            const geocodeCache = new Map();
            const geocoder = new google.maps.Geocoder();

            const searchInputEl = document.getElementById('location-search-input');
            const searchButtonEl = document.getElementById('location-search-button');

            const updateSearchLocation = function(address, location) {
                if (locator.searchLocationMarker) {
                    locator.searchLocationMarker.setMap(null);
                }
                if (!location) {
                    locator.searchLocation = null;
                    return;
                }
                locator.searchLocation = {'address': address, 'location': location};
                
                locator.searchLocationMarker = new google.maps.Marker({
                    position: location,
                    map: locator.map,
                    title: address,
                    draggable:false,
                    animation: google.maps.Animation.DROP,
                });
                
                
                var lat = locator.searchLocationMarker.getPosition().lat();
                var lng = locator.searchLocationMarker.getPosition().lng();

                var contentStr1 = '<p><div style="color:black;min-height:25px;">'+address+'</div><div style="margin-left:5px;color:black;height:25px;"><a class="mapTButton mapTButtonSize100 TopMenuLinkElement" onClick="createLeadForSearchResult(\''+address+'\', \''+lat+'\',  \''+lng+'\' )" style="cursor:pointer;"><span>座標を登録</span></a></div><div style="color:black;height:25px;"><span class="insertSuccessfulMessage" style="width: 250px;float: left;">座標を登録しました。</span></div></p>';
                var myInfoWindow1 = new google.maps.InfoWindow({
                    content: contentStr1
                });

                google.maps.event.addListenerOnce(locator.searchLocationMarker, "click", function(event) {
                    var strLatitude = event.latLng.lat();
                    var strLongitude = event.latLng.lng();

                    myInfoWindow1.open(MapItem, locator.searchLocationMarker);
                });
                google.maps.event.addListener(myInfoWindow1, "closeclick", function() {
                    google.maps.event.addListenerOnce(locator.searchLocationMarker, "click", function(event) {
                        myInfoWindow1.open(MapItem, locator.searchLocationMarker);
                    });
                });
                
                const addressParts = address.split(' ');
                locator.userCountry = addressParts[addressParts.length - 1];

                locator.updateBounds();
                locator.renderResultsList();
                locator.updateTravelTimes();
                locator.clearDirections();
                
                hideArea();
            };

            const geocodeSearch = function(query) {
                if (!query) {
                    return;
                }

                const handleResult = function(geocodeResult) {
                    searchInputEl.value = geocodeResult.formatted_address;
                    updateSearchLocation(
                        geocodeResult.formatted_address, geocodeResult.geometry.location
                    );
                };

                if (geocodeCache.has(query)) {
                    handleResult(geocodeCache.get(query));
                    return;
                }
                const request = {address: query, bounds: locator.map.getBounds()};
                geocoder.geocode(request, function(results, status) {
                    if (status === 'OK') {
                        if (results.length > 0) {
                            const result = results[0];
                            geocodeCache.set(query, result);
                            handleResult(result);
                        }
                    }
                });
            };
            // オートコンプリートを初期化
            if(searchInputEl != null){
                initializeSearchInputAutocomplete(locator, searchInputEl, geocodeSearch, updateSearchLocation);
            }
            
        }catch (error) {
            alert('検索の初期化に失敗しました。開発元までお問い合わせください。ERR-05' + error);
        }

    }

    /*--------------------------------------------------
     * 検索の初期化（オートコンプリート）
     *-------------------------------------------------*/
    function initializeSearchInputAutocomplete(locator, searchInputEl, fallbackSearch, searchLocationUpdater) {
        try{
            const autocomplete = new google.maps.places.Autocomplete(searchInputEl, {
                types: ['geocode'],
                fields: ['place_id', 'formatted_address', 'geometry.location']
            });
            
            autocomplete.bindTo('bounds', locator.map);
            autocomplete.addListener('place_changed', function() {
                const placeResult = autocomplete.getPlace();
                if (!placeResult.geometry) {
                    fallbackSearch(placeResult.name);
                    return;
                }
                searchLocationUpdater(
                    placeResult.formatted_address, placeResult.geometry.location
                );
            });
        }catch (error) {
            alert('検索の初期化に失敗しました。開発元までお問い合わせください。ERR-06' + error);
        }
    }

    /*--------------------------------------------------
     * ルートの初期化
     *-------------------------------------------------*/
    function initializeDistanceMatrix(locator) {
        try{
            const distanceMatrixService = new google.maps.DistanceMatrixService();

            // 距離行列を使用して、選択した場所への移動時間を処理
            locator.updateTravelTimes = function() {
                if (!locator.searchLocation) return;

                const units = (locator.userCountry === 'USA') ? google.maps.UnitSystem.IMPERIAL : google.maps.UnitSystem.METRIC;
                const request = {
                    origins: [locator.searchLocation.location],
                    destinations: locator.locations.map(function(x) {
                        return x.coords;
                    }),
                    travelMode: google.maps.TravelMode.DRIVING,
                    unitSystem: units,
                };
                const callback = function(response, status) {
                    if (status === 'OK') {
                        const distances = response.rows[0].elements;
                        for (let i = 0; i < distances.length; i++) {
                            const distResult = distances[i];
                            let travelDistanceText, travelDistanceValue;
                            if (distResult.status === 'OK') {
                                travelDistanceText = distResult.distance.text;
                                travelDistanceValue = distResult.distance.value;
                            }
                            const location = locator.locations[i];
                            location.travelDistanceText = travelDistanceText;
                            location.travelDistanceValue = travelDistanceValue;
                        }

                        // 順序が変更された場合は再処理
                        locator.renderResultsList();
                    }
                };
                distanceMatrixService.getDistanceMatrix(request, callback);
            };
        }catch (error) {
            alert('ルートの初期化に失敗しました。開発元までお問い合わせください。ERR-07' + error);
        }
    }

    /*--------------------------------------------------
     * ルートのfitBounds設定
     *-------------------------------------------------*/
    function initializeDirections(locator) {
        try{
            var zoomSet = '{!JSINHTMLENCODE(mtu.f_mt__mtZoomSetting__c)}';
            if(zoomSet == ''){
              zoomSet = '{!JSENCODE(HTMLENCODE(googleSetting.f_mt__mtZoomSetting__c))}';
            }
            const directionsCache = new Map();
            const directionsService = new google.maps.DirectionsService();
            const directionsRenderer = new google.maps.DirectionsRenderer({
                suppressMarkers: true,
                preserveViewport: (zoomSet == 'オートフォーカス' ? false : true)
            });

            // 検索場所から地図上の選択した場所に表示される道順を更新します
            locator.updateDirections = function() {
                if (!locator.searchLocation || (locator.selectedLocationIdx == null)) {
                    return;
                }
                const cacheKey = JSON.stringify([locator.searchLocation.location, locator.selectedLocationIdx]);
                if (directionsCache.has(cacheKey)) {
                    const directions = directionsCache.get(cacheKey);
                    directionsRenderer.setMap(locator.map);
                    directionsRenderer.setDirections(directions);
                    return;
                }
                const request = {
                    origin: locator.searchLocation.location,
                    destination: locator.locations[locator.selectedLocationIdx].coords,
                    travelMode: google.maps.TravelMode.DRIVING
                };
                directionsService.route(request, function(response, status) {
                    if (status === 'OK') {
                        directionsRenderer.setMap(locator.map);
                        directionsRenderer.setDirections(response);
                        directionsCache.set(cacheKey, response);
                        
                        //順番でリードを出力する
                        if('{!JSENCODE(HTMLENCODE(hyoujiKeishiki))}' == '2'){
                            outputAllRouteInfoWithLead(response);
                        }
                    }
                });
            };

            locator.clearDirections = function() {
                directionsRenderer.setMap(null);
            };
        }catch (error) {
            alert('ルートの初期化に失敗しました。開発元までお問い合わせください。ERR-08' + error);
        }
    }

    //-----------------------------------------------------
    // 運転時間、運転距離順でリードを出力する
    //-----------------------------------------------------
    function outputAllRouteInfoWithLead(response) {
        try{
            var route = response.routes[0];
            var summaryPanel = document.getElementById("directions_panel");
            summaryPanel.innerHTML = "";
            
            var strlat = '';
            var strlng = '';
            
            //リモートメソッドのパラメータ
            const remoteParameter = []

            // For each route, display summary information.
            for (var i = 0; i < route.legs.length; i++) {
                var routeSegment = i + 1;
                var strDistance = route.legs[i].distance.text;
                var strDuration = route.legs[i].duration.text;

                strlat = route.legs[i].end_location.lat();
                strlng = route.legs[i].end_location.lng();
                
                // 一番近い距離のLeadの座標を取得する
                var mostCloseDistance = findCloseAddress(strlat,strlng);
                remoteParameter.push(mostCloseDistance+':'+strDistance+'_'+strDuration);
            }
            displayLeadInfo(remoteParameter,response);
        }catch (error) {
            alert('ルートの初期化に失敗しました。開発元までお問い合わせください。ERR-09' + error);
        }
    }
    
    //-----------------------------------------------------
    // 距離計算
    //-----------------------------------------------------
    function computeTotalDistance(result) {
        try{
            var totalDist = 0;
            var totalTime = 0;
            var myroute = result.routes[0];
            
            for (i = 0; i < myroute.legs.length; i++) {
                totalDist += myroute.legs[i].distance.value;
                totalTime += myroute.legs[i].duration.value;
            }
            totalDist = totalDist / 1000.
            
            
            var totalMinutes = (totalTime / 60).toFixed(0);
            
            var hours = Math.floor(totalMinutes / 60);          
            var minutes = totalMinutes % 60;
            
            if(hours == 0){
                $('#navigationPanel').append($('<div class="placeDiv">')
                    .append('<p style="font-weight:bold;margin: 0.2em 0;">総距離　' + totalDist.toFixed(1) + 'キロ</p><br>')
                    .append('<p style="font-weight:bold;margin: 0.2em 0;">総時間　' + minutes+'分</p><br>')
                    .append('</div>')
                    .append('')
                );
            }else{
                $('#navigationPanel').append($('<div class="placeDiv">')
                    .append('<p style="font-weight:bold;margin: 0.2em 0;">総距離　' + totalDist.toFixed(1) + 'キロ</p><br>')
                    .append('<p style="font-weight:bold;margin: 0.2em 0;">総時間　' + hours + '時間'+minutes+'分</p><br>')
                    .append('</div>')
                    .append('')
                );
            }
        }catch (error) {
            alert('ルートの初期化に失敗しました。開発元までお問い合わせください。ERR-10' + error);
        }
    }
    
    //-----------------------------------------------------
    // Lead情報ごとの距離を右側パネルに表示する
    //-----------------------------------------------------
    function displayLeadInfo(remoteParameter,response) {
        try{
            document.getElementById("directions_panel_loading").style.display = "";
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.MapTMobileMapPageController.fetchLeadInfomation}',
                JSON.stringify(remoteParameter),
                '{!JSENCODE(HTMLENCODE(strSelectedDate))}',
                '{!JSENCODE(HTMLENCODE(strSelectedDateEnd))}',
                '{!mtu.Id}',
                '{!JSINHTMLENCODE(rootFinishView)}',
                function(result, event){
                    if (event.status) {
                        for (var index = 0; index < result.length; index++) {
                            //最後は時間と距離を出力しない
                            $('#navigationPanel').append($('<div class="placeDiv indexClass'+index+'" onClick="moveClickLocationNavi(' + result[index].strLatitude + ',' + result[index].strLongitude + ')">')
                                .append('<p style="font-weight:bold;margin: 0.2em 0;">' + result[index].strLeadName + '</p><br>')
                                .append('<span>住所：<a href="#" OnClick="return confRouteAndAction(\''+result[index].strLatitude+'\',\''+result[index].strLongitude+'\',\''+result[index].strLeadId+'\');">' + result[index].strAddressNoPostal + '</a></span><br>')
                                .append('<span>距離：'+result[index].strDistance+'&nbsp;&nbsp;&nbsp;（予想'+result[index].strDuration+'）</span><br></div>')
                            );
                            
                            for (var index2 = 0; index2 < result[index].ScheduledToVisitInfo.length; index2++) {
                                 $('.indexClass'+index).append('<span class='+result[index].ScheduledToVisitInfo[index2].strScheduledToVisitId+'>時間：'+result[index].ScheduledToVisitInfo[index2].strStartDateTime+'～'+result[index].ScheduledToVisitInfo[index2].strEndDateTime+'</span>');
                                 $('.indexClass'+index).append('&nbsp; &nbsp;<a href="#"  onClick="showEditWindowForScheduledToVisit(\''+result[index].ScheduledToVisitInfo[index2].strScheduledToVisitId+'\')" style="cursor:pointer;"><span>編集</span></a></br>');
                            }
                            
                            $('#navigationPanel').append($('</div>'));
                            $('#navigationPanel').append($('<div class="placeDivAfter"></div>'));
                        }
                        computeTotalDistance(response);
                        
                        document.getElementById("directions_panel_loading").style.display = "none";

                    // 異常終了時のメッセージ
                    } else if (event.type === 'exception') {
                        alert('表示処理に失敗しました。開発元までお問い合わせください。ERR-11');
                    }
                },
                {buffer: false,escape: true}
            );
        }catch (error) {
            alert('表示処理に失敗しました。開発元までお問い合わせください。ERR-11' + error);
        }
    }
    
    //-----------------------------------------------------
    // Lead情報を登録する
    //-----------------------------------------------------
    function createLeadForSearchResult(strAddress,strlat,strlng) {
        try{
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.MapTMobileMapPageController.createLeadForSearchResult}',
                strAddress,
                '{!mtu.Id}',
                strlat,
                strlng,
                function(result, event){
                    if (event.status) {
                        $(".insertSuccessfulMessage").show();
                    // 異常終了時のメッセージ
                    } else if (event.type === 'exception') {
                        $(".insertSuccessfulMessage").hide();
                    }
                },
                {buffer: false,escape: true}
            );
        }catch (error) {
            alert('登録処理に失敗しました。開発元までお問い合わせください。ERR-12' + error);
        }
    }
    
    //-----------------------------------------------------
    // 一番近い距離のLeadの座標を返す
    //-----------------------------------------------------
    function findCloseAddress(strlatTemp,strlngTemp) {
        var theMostClosePlace;
        var theMostClosePlaceTemp;
        var theLeadIWantToFind; // 一番近い距離のLeadの座標
        
        try{
            positionCoordinate.forEach(function(Coordinate, index, array) {
                var CoordinateItem = Coordinate.split(',');
              
                theMostClosePlaceTemp = calcCrow(CoordinateItem[0],CoordinateItem[1],strlatTemp,strlngTemp).toFixed(3);
                
                // 一回目に取得した距離を設定する
                if(index == 0){
                    theMostClosePlace = theMostClosePlaceTemp;
                    theLeadIWantToFind = CoordinateItem[0]+','+CoordinateItem[1];
                }else{
                    if(theMostClosePlace > theMostClosePlaceTemp){
                        theMostClosePlace = theMostClosePlaceTemp;
                        theLeadIWantToFind = CoordinateItem[0]+','+CoordinateItem[1];
                    }
                }
            });
        }catch (error) {
            alert('登録処理に失敗しました。開発元までお問い合わせください。ERR-13' + error);
        }
        
        return theLeadIWantToFind;
        
    }
    
    //-----------------------------------------------------
    // 座標間の距離計算
    //-----------------------------------------------------
    function calcCrow(lat1, lon1, lat2, lon2) {
        var result;
        try{
            var R = 6371; // km
            var dLat = toRad(lat2-lat1);
            var dLon = toRad(lon2-lon1);
            var lat1 = toRad(lat1);
            var lat2 = toRad(lat2);

            var a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2); 
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
            result = R * c;
        }catch (error) {
            alert('座標計算に失敗しました。開発元までお問い合わせください。ERR-14' + error);
        }
        return result;
    }

    //-----------------------------------------------------
    // 座標間の距離計算
    //-----------------------------------------------------
    function toRad(Value){
        return Value * Math.PI / 180;
    }
    

    /*--------------------------------------------------
     * 地図パネルの初期化
     *-------------------------------------------------*/
    function initializeDetails(locator) {
        try{
            const panelDetailsEl = document.getElementById('locations-panel-details');
            const detailsService = new google.maps.places.PlacesService(locator.map);

            const renderDetails = function(context) {
                panelDetailsEl.innerHTML = detailsTemplate(context);
                panelDetailsEl.querySelector('.back-button').addEventListener('click', hideDetails);
            };

            const hideDetails = function() {
                showElement(locator.panelListEl);
                hideElement(panelDetailsEl);
            };

            locator.showDetails = function(locationIndex) {
                const location = locator.locations[locationIndex];
                const context = {location};

                const initArray = function(arraySize) {
                    const array = [];
                    while (array.length < arraySize) {
                        array.push(0);
                    }
                    return array;
                };

                if (location.placeId) {
                    const request = {
                      placeId: location.placeId,
                      fields: [
                          'formatted_phone_number', 'website', 'opening_hours', 'url',
                          'utc_offset_minutes', 'price_level', 'rating', 'user_ratings_total'
                      ]
                  };
                  detailsService.getDetails(request, function(place, status) {
                      if (status == google.maps.places.PlacesServiceStatus.OK) {
                          if (place.opening_hours) {
                              const daysHours =
                                  place.opening_hours.weekday_text.map(e => e.split(/\:\s+/)).map(e => ({'days': e[0].substr(0, 3), 'hours': e[1]}));

                              for (let i = 1; i < daysHours.length; i++) {
                                  if (daysHours[i - 1].hours === daysHours[i].hours) {
                                      if (daysHours[i - 1].days.indexOf('-') !== -1) {
                                          daysHours[i - 1].days = daysHours[i - 1].days.replace(/\w+$/, daysHours[i].days);
                                      } else {
                                          daysHours[i - 1].days += ' - ' + daysHours[i].days;
                                      }
                                      daysHours.splice(i--, 1);
                                  }
                              }
                              place.openingHoursSummary = daysHours;
                          }
                          if (place.rating) {
                              const starsOutOfTen = Math.round(2 * place.rating);
                              const fullStars = Math.floor(starsOutOfTen / 2);
                              const halfStars = fullStars !== starsOutOfTen / 2 ? 1 : 0;
                              const emptyStars = 5 - fullStars - halfStars;

                              place.fullStarIcons = initArray(fullStars);
                              place.halfStarIcons = initArray(halfStars);
                              place.emptyStarIcons = initArray(emptyStars);
                          }
                          if (place.price_level) {
                              place.dollarSigns = initArray(place.price_level);
                          }
                          if (place.website) {
                              const url = new URL(place.website);
                              place.websiteDomain = url.hostname;
                          }

                          context.place = place;
                          renderDetails(context);
                      }
                  });
                }
                renderDetails(context);
                hideElement(locator.panelListEl);
                showElement(panelDetailsEl);
            };
        }catch (error) {
            alert('地図表示に失敗しました。開発元までお問い合わせください。ERR-15' + error);
        }
    }
    
    /*--------------------------------------------------
     * [検索]クリア処理
     *-------------------------------------------------*/
    function clearData() {
        $(".needToBeClear").val('');
        $(".scVisitStatus option:selected").prop("selected", false);
        $(".scVisitStatus").multiselect('reload');   
        
        document.getElementById("page:form:scScDateNull").checked = false;
        document.getElementById("page:form:allSelectedValueForVisitStatus").value = '';
        
        var dField = document.getElementsByClassName('DynamicFieldData');
        for (var i = 0; i < dField.length + 1; i++){
            if($("#DynamicField" + (i + 1) + " option:selected") != null){
                $("#DynamicField" + (i + 1) + " option:selected").prop("selected", false);
            }
            if($("#DynamicField" + i) != null){
                $("#DynamicField" + i).multiselect('reload');
            }
            if(document.getElementById("page:form:dynamicFRepeat:" + i + ":hiddenLeadIdData") != null){
                document.getElementById("page:form:dynamicFRepeat:" + i + ":hiddenLeadIdData").value = '';
            }
            if(document.getElementById("page:form:dynamicFRepeat:" + i + ":hiddenLeadIdDataPicker") != null){
                document.getElementById("page:form:dynamicFRepeat:" + i + ":hiddenLeadIdDataPicker").value = '';
            }
            if(document.getElementById("page:form:dynamicFRepeatAcc:" + i + ":hiddenAccIdData") != null){
                document.getElementById("page:form:dynamicFRepeatAcc:" + i + ":hiddenAccIdData").value = '';
            }
            if(document.getElementById("page:form:dynamicFRepeatAcc:" + i + ":hiddenAccIdDataPicker") != null){
                document.getElementById("page:form:dynamicFRepeatAcc:" + i + ":hiddenAccIdDataPicker").value = '';
            }
        }
        customValidationClear();
    }
    
    /*--------------------------------------------------
     * [検索]カスタム条件式クリア（リード）
     *-------------------------------------------------*/
     function customValidationClear(){
        document.getElementById("page:form:customSearch").value="";
    }
    /*--------------------------------------------------
     * [検索]カスタム条件式クリア（取引先）
     *-------------------------------------------------*/
    function customValidationClearAcc(){
        document.getElementById("page:form:customSearchAcc").value="";
    }
    /*--------------------------------------------------
     * [検索]作成日のクリア
     *-------------------------------------------------*/
    function createdDateClear(){
        document.getElementById("page:form:createDateStart").value="";
        document.getElementById("page:form:createDateEnd").value="";
    }
    /*--------------------------------------------------
     * [検索]訪問予約日のクリア
     *-------------------------------------------------*/
    function VisitDateTimeClear(){
        document.getElementById("page:form:viStart").value="";
        document.getElementById("page:form:viEnd").value="";
    }
    /*--------------------------------------------------
     * [検索]訪問日時のクリア
     *-------------------------------------------------*/
    function VisitScheduleDateClear(){
        document.getElementById("page:form:ScDateStart").value="";
        document.getElementById("page:form:ScDateEnd").value="";
    }    
    
    /*--------------------------------------------------
     * 緯度・経度からリードを取得
     *-------------------------------------------------*/
    function showPopUpWindowWithArrow(eventAnthor){
        var strLatitude = eventAnthor.latLng.lat();
        var strLongitude = eventAnthor.latLng.lng();
        
        var myClientX = 0;
        var myClientY = 0;
        
        initialLocation = new google.maps.LatLng(strLatitude, strLongitude);
        MapItem.setCenter(initialLocation);
        
        // 経度緯度をパラメータとして、Apexに渡す、検索処理を実施する
        searchLeadInfo(strLatitude,strLongitude);
    }
    
    /*--------------------------------------------------
     * Lead追加するボタン押下処理
     *-------------------------------------------------*/
    function addLeadButtonClick() {
        FreezeScreen('登録中...');
        var strLatitude = $("#strLatitude").val();
        var strLongitude = $("#strLongitude").val();
        
        SaveLeadLatLngInfo(strLatitude,strLongitude);
    }
    
    //-----------------------------------------------------
    // Lead情報を登録する
    //-----------------------------------------------------
    function SaveLeadLatLngInfo(strLatitude,strLongitude) {
        try{
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.MapTMobileMapPageController.SaveLeadLatLngInfo}',
                strLatitude,
                strLongitude,
                '{!mtu.Id}',
                function(result, event){
                    if (event.status) {
                        if(result=='success'){
                            alert('リードを登録しました。');
                            FreezeScreenOff();
                            
                            //自動的に閉じる
                            if (myInfoWindowAddLeadGlobal) {
                                myInfoWindowAddLeadGlobal.close();
                                markerAddLeadGlobal.setDraggable( false ) ;
                                
                                getLocationAddLead();
                            }
                        }else{
                            alert('重複する座標には登録できません。' + result);
                            FreezeScreenOff();
                        }
                    // 異常終了時のメッセージ
                    } else if (event.type === 'exception') {
                        alert('重複する座標には登録できません。');
                        FreezeScreenOff();
                    }
                },
                {buffer: false,escape: true}
            );
        }catch (error) {
            alert('登録に失敗しました。開発元までお問い合わせください。ERR-16' + error);
        }
    }
    
    /*--------------------------------------------------
     * ルート表示モードの切り替え
     *-------------------------------------------------*/
    function changeRootViewMode() {
        FreezeScreen('ルート読込中...');
        setRootViewFuc();
    }
    /*--------------------------------------------------
     * 右のルートパネルを表示する
     *-------------------------------------------------*/
    function TodayVisitListButtonClick() {
        $('#rightPanel2').addClass("cd-panel--is-visible");
    }
    /*--------------------------------------------------
     * 右の顧客一覧パネルを表示する
     *-------------------------------------------------*/
    function CustomerListViewButtonClick() {
        $('#rightPanel3').addClass("cd-panel--is-visible");
    }
    /*--------------------------------------------------
     * 右の本日の訪問先パネルを表示する
     *-------------------------------------------------*/
    function SearchPanelViewButtonClick() {
        $('#leftPanel').addClass("cd-panel--is-visible");
    }
    leftPanel
    /*--------------------------------------------------
     * 訪問ルートボタン押下時
     *-------------------------------------------------*/
    function clickTodaySalesFlag() {
        FreezeScreen('表示中...');
        document.getElementById("page:form:todaySalesFlag").value="true";
        document.getElementById("page:form:mySalesFlag").value="false";
        document.getElementById("page:form:areaFlag").value="false";
        document.getElementById("page:form:groupFlag").value="false";
        document.getElementById("page:form:noSalesFlag").value="false";
        document.getElementById("page:form:searchConditionFlag").value="false";
        document.getElementById("page:form:visitRecDetailRedirectFlag").value="false";
        document.getElementById("page:form:executeSearchBtnFlag").value="false";
    }
    
    /*--------------------------------------------------
     * 私の担当ボタン押下時
     *-------------------------------------------------*/
    function clickMySalesFlag() {
        FreezeScreen('表示中...');
        document.getElementById("map").style.display = 'none';
        document.getElementById("loaderWindow").style.display = 'inline';
        document.getElementById("page:form:todaySalesFlag").value="false";
        document.getElementById("page:form:mySalesFlag").value="true";
        document.getElementById("page:form:areaFlag").value="false";
        document.getElementById("page:form:groupFlag").value="false";
        document.getElementById("page:form:noSalesFlag").value="false";
        document.getElementById("page:form:searchConditionFlag").value="false";
        document.getElementById("page:form:visitRecDetailRedirectFlag").value="false";
        document.getElementById("page:form:executeSearchBtnFlag").value="false";
    }
    
    /*--------------------------------------------------
     * エリアボタン押下時
     *-------------------------------------------------*/
    function clickAreaFlag() {
        FreezeScreen('表示中...');
        document.getElementById("map").style.display = 'none';
        document.getElementById("loaderWindow").style.display = 'inline';
        document.getElementById("page:form:todaySalesFlag").value="false";
        document.getElementById("page:form:mySalesFlag").value="false";
        document.getElementById("page:form:areaFlag").value="true";
        document.getElementById("page:form:groupFlag").value="false";
        document.getElementById("page:form:noSalesFlag").value="false";
        document.getElementById("page:form:searchConditionFlag").value="false";
        document.getElementById("page:form:visitRecDetailRedirectFlag").value="false";
        document.getElementById("page:form:executeSearchBtnFlag").value="false";
    }
    
    /*--------------------------------------------------
     * 所属グループボタン押下時
     *-------------------------------------------------*/
    function clickGroupFlag() {
        FreezeScreen('表示中...');
        document.getElementById("map").style.display = 'none';
        document.getElementById("loaderWindow").style.display = 'inline';
        document.getElementById("page:form:todaySalesFlag").value="false";
        document.getElementById("page:form:mySalesFlag").value="false";
        document.getElementById("page:form:areaFlag").value="false";
        document.getElementById("page:form:groupFlag").value="true";
        document.getElementById("page:form:noSalesFlag").value="false";
        document.getElementById("page:form:searchConditionFlag").value="false";
        document.getElementById("page:form:visitRecDetailRedirectFlag").value="false";
        document.getElementById("page:form:executeSearchBtnFlag").value="false";
    }
    
    /*--------------------------------------------------
     * 未割当ボタン押下時
     *-------------------------------------------------*/
    function clicknoSales() {
        FreezeScreen('表示中...');
        document.getElementById("map").style.display = 'none';
        document.getElementById("loaderWindow").style.display = 'inline';
        document.getElementById("page:form:todaySalesFlag").value="false";
        document.getElementById("page:form:mySalesFlag").value="false";
        document.getElementById("page:form:areaFlag").value="false";
        document.getElementById("page:form:groupFlag").value="false";
        document.getElementById("page:form:noSalesFlag").value="true";
        document.getElementById("page:form:searchConditionFlag").value="false";
        document.getElementById("page:form:visitRecDetailRedirectFlag").value="false";
        document.getElementById("page:form:executeSearchBtnFlag").value="false";
    }
    /*--------------------------------------------------
     * 検索ボタン押下時
     *-------------------------------------------------*/
    function clickPrepareToSearch() {
        // カスタム条件式チェック
        var cms = document.getElementById("page:form:customSearch").value.toUpperCase();
        var cmsAcc = document.getElementById("page:form:customSearchAcc").value.toUpperCase();
        if(cms != null && cms != ''){
            if(cms.indexOf(' OR ') == -1 && cms.indexOf(' AND ') == -1){
                alert('ANDまたはORによる項目の接続を行ってください。');
                return false;
            }
        }
        if(cmsAcc != null && cmsAcc != ''){
            if(cmsAcc.indexOf(' OR ') == -1 && cmsAcc.indexOf(' AND ') == -1){
                alert('ANDまたはORによる項目の接続を行ってください。');
                return false;
            }
        }
    
        FreezeScreen('検索中...');
        document.getElementById("map").style.display = 'none';
        document.getElementById("loaderWindow").style.display = 'inline';
        document.getElementById("page:form:todaySalesFlag").value="false";
        document.getElementById("page:form:mySalesFlag").value="false";
        document.getElementById("page:form:areaFlag").value="false";
        document.getElementById("page:form:groupFlag").value="false";
        document.getElementById("page:form:noSalesFlag").value="false";
        document.getElementById("page:form:searchConditionFlag").value="true";
        document.getElementById("page:form:visitRecDetailRedirectFlag").value="false";
        document.getElementById("page:form:executeSearchBtnFlag").value="true";
        
        return true;
    }
    /*--------------------------------------------------
     * 時間編集画面を表示
     *-------------------------------------------------*/
    function showEditWindowForScheduledToVisit(strScheduledToVisitId){
        var StartDateAndEndDate = $("."+strScheduledToVisitId+"").html();
        StartDateAndEndDate = StartDateAndEndDate.replace('時間：','');
        var StartDateAndEndDateArray = StartDateAndEndDate.split('～');
        
        var strStartDateTimeTemp = StartDateAndEndDateArray[0]+':00';
        var strEndDateTimeTemp   = StartDateAndEndDateArray[1]+':00';
        
        strStartDateTimeTemp = strStartDateTimeTemp.replace(' ','T');
        strEndDateTimeTemp   = strEndDateTimeTemp.replace(' ','T');
        
        $("#ScheduledToVisitId").val(strScheduledToVisitId);
        $("#StartDateTime").val(strStartDateTimeTemp);
        $("#EndDateTime").val(strEndDateTimeTemp);
        
        $(".ModifyScheduleWindow").show();
    }
    /*--------------------------------------------------
     * 時間編集画面を隠す
     *-------------------------------------------------*/
    function hideEditWindowForScheduledToVisit(){
        $(".SaveSuccessfulMessage").hide();
        $(".ModifyScheduleWindow").hide();
    }
    /*--------------------------------------------------
     * 時間を保存
     *-------------------------------------------------*/
    function SaveScheduledToVisit(){
        try{
            var ScheduledToVisitIdTemp = $("#ScheduledToVisitId").val();
            var StartDateTimeTemp      = $("#StartDateTime").val();
            var EndDateTimeTemp        = $("#EndDateTime").val();
                    
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.MapTMobileMapPageController.SaveScheduledToVisit}',
                ScheduledToVisitIdTemp,
                StartDateTimeTemp,
                EndDateTimeTemp,
                function(result, event){
                    if (event.status) {
                        
                        if(result=='success'){
                            var StartDateTimeRewrite = StartDateTimeTemp.replace('T',' ');
                            var EndDateTimeRewrite = EndDateTimeTemp.replace('T',' ');

                            StartDateTimeRewrite = StartDateTimeRewrite.substring(0, 16);
                            EndDateTimeRewrite   = EndDateTimeRewrite.substring(0, 16);
                            $("."+ScheduledToVisitIdTemp+"").html('時間：'+StartDateTimeRewrite+'～'+EndDateTimeRewrite);
                            $(".SaveSuccessfulMessage").show();
                        }else{
                             $(".SaveSuccessfulMessage").html('正しい時間を入力してください');
                            $(".SaveSuccessfulMessage").show();
                        }
                    // 異常終了時のメッセージ
                    } else if (event.type === 'exception') {
                        // エラーメッセージを表示する
                        $(".SaveSuccessfulMessage").hide();
                    }
                },
                {buffer: false,escape: true}
            );
        }catch (error) {
            alert('保存に失敗しました。開発元までお問い合わせください。ERR-17' + error);
        }
    }
    
    /*--------------------------------------------------
     * 入室ボタン押下処理
     *-------------------------------------------------*/
    function confIn(dataId){
        var result;
        try{
            if('{!JSINHTMLENCODE(mtu.f_mt__mtVisitStatus__c)}' == '訪問中'){
                alert('既に訪問中の顧客があります。\n退出後に入室を行ってください。');
                return false;
            }
            document.getElementById("page:form:actionId").value = dataId;
            result = window.confirm('訪問記録を登録して入室します。よろしいですか？');
            if(result == true){
                FreezeScreen('入室中...');
            }
        }catch (error) {
            alert('保存に失敗しました。開発元までお問い合わせください。ERR-18' + error);
            return false;
        }
        return result;
    }
    
    /*--------------------------------------------------
     * 明細入室ボタン押下処理
     *-------------------------------------------------*/
    function confIndetail(dataId) {
        var result;
        try{
            if('{!JSINHTMLENCODE(mtu.f_mt__mtVisitStatus__c)}' == '訪問中'){
                alert('既に訪問中の顧客があります。\n退出後に入室を行ってください。');
                return false;
            }
            document.getElementById("page:form:actionId").value = dataId;
            result = window.confirm('入室します。よろしいですか？');
            if(result == true){
                FreezeScreen('入室中...');
            }
        }catch (error) {
            alert('保存に失敗しました。開発元までお問い合わせください。ERR-19' + error);
            return false;
        }
        return result;
    }
    
    /*--------------------------------------------------
     * 訪問予定情報を削除するボタン押下処理
     *-------------------------------------------------*/
    function confDeletedetail(dataId) {
        var result;
        try{
            document.getElementById("page:form:actionId").value = dataId;
            result = window.confirm('削除します。よろしいですか？');
            if(result == true){
                FreezeScreen('削除中...');
            }
        }catch (error) {
            alert('削除に失敗しました。開発元までお問い合わせください。ERR-20' + error);
            return false;
        }
        return result;
    }
    
    /*--------------------------------------------------
     * 退出ボタン押下処理
     *-------------------------------------------------*/
    function confOut() {
        var result;
        try{
            result = window.confirm('退出します。よろしいですか？');
            
            if(result == true){
                FreezeScreen('退出中...');
            }
        }catch (error) {
            alert('保存に失敗しました。開発元までお問い合わせください。ERR-21' + error);
            return false;
        }
        return result;
    }
    
    /*--------------------------------------------------
     * ルート案内ボタン押下処理
     *-------------------------------------------------*/
    function confRoute(lat,log,leadId) {
        var result;
        try{
            if('{!JSINHTMLENCODE(mtu.f_mt__mtVisitStatus__c)}' == '訪問中'){
                alert('既に訪問中の顧客があります。\n退出後に入室を行ってください。');
                return false;
            }
            result = window.confirm('ルート案内アプリに移動します\nよろしいですか？\n（GoogleMapアプリに移動します)');

            if(result == true){
                document.getElementById("page:form:actionId").value = leadId;
                
                if( isMobile.any() ){
                    var ua = navigator.userAgent.toLowerCase();
                    var isAndroid = ua.indexOf("android") > -1;
                    if(isAndroid) {
                        window.open('https://www.google.co.jp/maps/search/?api=1&query=' + lat + ',' + log);
                    }else{
                        window.open('maps://?q=' + lat + ',' + log);
                    }
                }else{
                    window.open('https://www.google.co.jp/maps/search/?api=1&query=' + lat + ',' + log);
                }
            }
        }catch (error) {
            alert('保存に失敗しました。開発元までお問い合わせください。ERR-22' + error);
            return false;
        }
        return result;
    }

    /*--------------------------------------------------
     * ルート案内ボタン押下処理
     *-------------------------------------------------*/
    function confRouteAndAction(lat,log,leadId) {
        var result;
        try{
            if('{!JSINHTMLENCODE(mtu.f_mt__mtVisitStatus__c)}' == '訪問中'){
                alert('既に訪問中の顧客があります。\n退出後に入室を行ってください。');
                return false;
            }
            result = window.confirm('ルート案内アプリに移動します\nよろしいですか？\n（GoogleMapアプリに移動します)');

            if(result == true){
                document.getElementById("page:form:actionId").value = leadId;
                
                if( isMobile.any() ){
                    var ua = navigator.userAgent.toLowerCase();
                    var isAndroid = ua.indexOf("android") > -1;
                    if(isAndroid) {
                        window.open('https://www.google.co.jp/maps/search/?api=1&query=' + lat + ',' + log);
                    }else{
                        window.open('maps://?q=' + lat + ',' + log);
                    }
                }else{
                    window.open('https://www.google.co.jp/maps/search/?api=1&query=' + lat + ',' + log);
                }
                naviStart();
            }
        }catch (error) {
            alert('保存に失敗しました。開発元までお問い合わせください。ERR-23' + error);
            return false;
        }
        return result;
    }
    
    /*--------------------------------------------------
     * GPSから現在地を取得する
     *-------------------------------------------------*/
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition,getLocationError);
            
        } else {
            getLocationError();
        }
    }
    
    /*--------------------------------------------------
     * GPSから現在地を取得する（地図に表示）
     *-------------------------------------------------*/
    function getLocationAddLead() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPositionAddLeadMarker,getLocationError2);
            
        } else {
            getLocationError();
        }
    }
    /*--------------------------------------------------
     * GPSエラー発生時
     *-------------------------------------------------*/
    function getLocationError(){
        showPosition(null);
        
    }
    /*--------------------------------------------------
     * GPSエラー発生時
     *-------------------------------------------------*/
    function getLocationError2(){
        showPosition2(null);
        
    }
    
    /*--------------------------------------------------
     * 引数を地図に表示（地図に表示）
     *-------------------------------------------------*/
    function showPosition2(position) {
        try{
            var lat;
            var lng;
            var zoomSet = '{!JSINHTMLENCODE(mtu.f_mt__mtZoomSetting__c)}';
            if(zoomSet == ''){
              zoomSet = '{!JSENCODE(HTMLENCODE(googleSetting.f_mt__mtZoomSetting__c))}';
            }
            
            if(position != null){
                lat = position.coords.latitude;
                lng = position.coords.longitude;
            }else{
                lat = 35.6809591;
                lng = 139.7673068;
            }
            
            document.getElementById("page:form:gpsLocationSalesMenu").value = lat + ',' + lng;
            var mapCurrentPosition = new google.maps.LatLng(lat , lng );
            
            if(MapItem != null){
                MapItem.setCenter(new google.maps.LatLng(lat, lng));
            }
         
            // 現在地のマーカー
            var marker1 = new google.maps.Marker({
                 position:mapCurrentPosition,
                 map: MapItem,
                 draggable:false,
                 animation: google.maps.Animation.DROP,
                 title:(position != null ? "現在地" : "GPS取得エラー")
            });
            
            var contentStr1 = '<p><div style="color:black;">' + (position != null ? "現在地" : "GPS取得エラー") + '</div></p>';
            var myInfoWindow1 = new google.maps.InfoWindow({
                content: contentStr1
            });
            
            google.maps.event.addListenerOnce(marker1, "click", function(event) {
                myInfoWindow1.open(MapItem, marker1);
            });
            google.maps.event.addListener(myInfoWindow1, "closeclick", function() {
                google.maps.event.addListenerOnce(marker1, "click", function(event) {
                    myInfoWindow1.open(MapItem, marker1);
                });
            });
            
            // 所属グループのマーカー
            if('{!JSINHTMLENCODE(mtu.f_mt__mtPrimaryGroup__r.f_mt__mtLatitude__c)}' != '' && '{!JSINHTMLENCODE(mtu.f_mt__mtPrimaryGroup__r.f_mt__mtLongitude__c)}' != ''){
                var markerGroup = new google.maps.Marker({
                     position:new google.maps.LatLng(Number('{!JSINHTMLENCODE(mtu.f_mt__mtPrimaryGroup__r.f_mt__mtLatitude__c)}'), Number('{!JSINHTMLENCODE(mtu.f_mt__mtPrimaryGroup__r.f_mt__mtLongitude__c)}')),
                     map: MapItem,
                     draggable:false,
                     animation: google.maps.Animation.DROP,
                     title:"所属グループ座標"
                });
                
                var contentStrGroup = '<p><div style="color:black;">所属グループ座標</div></p>';
                var myInfoWindowGroup = new google.maps.InfoWindow({
                    content: contentStrGroup
                });
                
                google.maps.event.addListenerOnce(markerGroup, "click", function(event) {
                    myInfoWindowGroup.open(MapItem, markerGroup);
                });
                google.maps.event.addListener(myInfoWindowGroup, "closeclick", function() {
                    google.maps.event.addListenerOnce(markerGroup, "click", function(event) {
                        myInfoWindowGroup.open(MapItem, markerGroup);
                    });
                });
            }
                
            if(zoomSet == 'オートフォーカス'){
                bounds.extend(mapCurrentPosition);
            }
            
        }catch (error) {
            alert('地図の読込中に失敗しました。開発元までお問い合わせください。ERR-24' + error);
        }
    }
    
    /*----------------------------------------------------------------
     * 引数を地図に表示（地図に表示） Leadを登録するためのMarker
     *---------------------------------------------------------------*/
    function showPositionAddLeadMarker(position) {
        try{
            var lat;
            var lng;
            
            var zoomSet = '{!JSINHTMLENCODE(mtu.f_mt__mtZoomSetting__c)}';
            if(zoomSet == ''){
              zoomSet = '{!JSENCODE(HTMLENCODE(googleSetting.f_mt__mtZoomSetting__c))}';
            }
            
            if(position != null){
                lat = position.coords.latitude;
                lng = position.coords.longitude;
            }else{
                lat = 35.6809591;
                lng = 139.7673068;
            }
            
            document.getElementById("page:form:gpsLocationSalesMenu").value = lat + ',' + lng;
            var mapCurrentPosition = new google.maps.LatLng(lat , lng );
            
            var strPosition = '';
            if(MapItem != null){
                MapItem.setCenter(new google.maps.LatLng(lat, lng));
                strPosition = lat + ',' + lng;
            }
         
            // 現在地のマーカー
            var markerAddLead = new google.maps.Marker({
                 position:mapCurrentPosition,
                 map: MapItem,
                 icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
                 zIndex:999,
                 draggable:true,
                 animation: google.maps.Animation.DROP,
                 title:"リードを登録する"
            });
            
            markerAddLeadGlobal = markerAddLead;
            
            if(zoomSet == 'オートフォーカス'){
                bounds.extend(mapCurrentPosition);
            }
            
            var contentStr1 = '<div class="addLeadButton" onclick="addLeadButtonClick()" style="width:150px;">リードを登録する</div><div style="color:black;">座標：</div><span id="PositionInfomation" style="color:black;padding: 0px 0px 0px 0px;">'+strPosition+'</span>';
            
            var myInfoWindowAddLead = new google.maps.InfoWindow({
                content: contentStr1
            });
            
            var markerAddLeadlistener =google.maps.event.addListener(markerAddLead, "click", function(event) {
                //経度と緯度をHidden項目に設定する-----------Start
                var strLatitude = event.latLng.lat();
                var strLongitude = event.latLng.lng();
                myInfoWindowAddLead.setContent(contentStr1);
                
                myInfoWindowAddLead.open(MapItem, markerAddLead);
                setHiddenLatitudeAndLongitude(strLatitude,strLongitude);
                //経度と緯度をHidden項目に設定する-----------End
                
                //一回押したら、二度と反応しないようにaddListenerを取り除きます
                google.maps.event.removeListener(markerAddLeadlistener);
            });
            google.maps.event.addListener(myInfoWindowAddLead, "closeclick", function() {
                google.maps.event.addListenerOnce(markerAddLead, "click", function(event) {
                    myInfoWindowAddLead.open(MapItem, markerAddLead);
                    
                    var strLatitude = event.latLng.lat();
                    var strLongitude = event.latLng.lng();
                    setHiddenLatitudeAndLongitude(strLatitude,strLongitude);
                });
            });
            
            google.maps.event.addListener(markerAddLead , 'dragend', function(event) {
                var strLatitude = event.latLng.lat();
                var strLongitude = event.latLng.lng();
                setHiddenLatitudeAndLongitude(strLatitude,strLongitude);
             });
             
            // 自動的に閉じる
            myInfoWindowAddLeadGlobal = myInfoWindowAddLead;
        }catch (error) {
            alert('地図の読込中に失敗しました。開発元までお問い合わせください。ERR-25' + error);
        }
    }
    
    /*--------------------------------------------------
     * 経度と緯度をHidden項目に設定する
     *-------------------------------------------------*/
     function setHiddenLatitudeAndLongitude(strLatitude,strLongitude) {
        $("#PositionInfomation").html(strLatitude + ',' + strLongitude);
        $("#strLatitude").val(strLatitude);
        $("#strLongitude").val(strLongitude);
     }
    
    /*--------------------------------------------------
     * 引数を地図に表示
     *-------------------------------------------------*/
    function showPosition(position) {
        try{
            var lat;
            var lng;
            var zoomSet = '{!JSINHTMLENCODE(mtu.f_mt__mtZoomSetting__c)}';
            if(zoomSet == ''){
              zoomSet = '{!JSENCODE(HTMLENCODE(googleSetting.f_mt__mtZoomSetting__c))}';
            }
            
            if(position != null){
                lat = position.coords.latitude;
                lng = position.coords.longitude;
            }else{
                lat = 35.6809591;
                lng = 139.7673068;
            }
            
            document.getElementById("page:form:gpsLocationSalesMenu").value = lat + ',' + lng;
            var mapCurrentPosition = new google.maps.LatLng(lat , lng );
            
            if(MapItem != null){
                MapItem.setCenter(new google.maps.LatLng(lat, lng));
                
                // 現在地のマーカー
                var marker1 = new google.maps.Marker({
                     position:mapCurrentPosition,
                     map: MapItem,
                     draggable:false,
                     animation: google.maps.Animation.DROP,
                     title:(position != null ? "現在地" : "GPS取得エラー")
                });
                
                var contentStr1 = '<p><div style="color:black;">' + (position != null ? "現在地" : "GPS取得エラー") + '</div></p>';
                var myInfoWindow1 = new google.maps.InfoWindow({
                    content: contentStr1
                });
                
                google.maps.event.addListenerOnce(marker1, "click", function(event) {
                    myInfoWindow1.open(MapItem, marker1);
                });
                google.maps.event.addListener(myInfoWindow1, "closeclick", function() {
                    google.maps.event.addListenerOnce(marker1, "click", function(event) {
                        myInfoWindow1.open(MapItem, marker1);
                    });
                });
                
                // 所属グループのマーカー
                if('{!JSINHTMLENCODE(mtu.f_mt__mtPrimaryGroup__r.f_mt__mtLatitude__c)}' != '' && '{!JSINHTMLENCODE(mtu.f_mt__mtPrimaryGroup__r.f_mt__mtLongitude__c)}' != ''){
                    var markerGroup = new google.maps.Marker({
                         position:new google.maps.LatLng(Number('{!JSINHTMLENCODE(mtu.f_mt__mtPrimaryGroup__r.f_mt__mtLatitude__c)}'), Number('{!JSINHTMLENCODE(mtu.f_mt__mtPrimaryGroup__r.f_mt__mtLongitude__c)}')),
                         map: MapItem,
                         draggable:false,
                         animation: google.maps.Animation.DROP,
                         title:"所属グループ座標"
                    });
                    
                    var contentStrGroup = '<p><div style="color:black;">所属グループ座標</div></p>';
                    var myInfoWindowGroup = new google.maps.InfoWindow({
                        content: contentStrGroup
                    });
                    
                    google.maps.event.addListenerOnce(markerGroup, "click", function(event) {
                        myInfoWindowGroup.open(MapItem, markerGroup);
                    });
                    google.maps.event.addListener(myInfoWindowGroup, "closeclick", function() {
                        google.maps.event.addListenerOnce(markerGroup, "click", function(event) {
                            myInfoWindowGroup.open(MapItem, markerGroup);
                        });
                    });
                }
                
                if(zoomSet == 'オートフォーカス'){
                    bounds.extend(mapCurrentPosition);
                }
                    
                if('{!JSENCODE(HTMLENCODE(mtu.f_mt__mtLatitude__c))}' != ''){
                    var mtulat = '{!JSENCODE(HTMLENCODE(mtu.f_mt__mtLatitude__c))}';
                    var mtulng = '{!JSENCODE(HTMLENCODE(mtu.f_mt__mtLongitude__c))}';
                    var mapCurrentPositionMtu = new google.maps.LatLng(mtulat , mtulng );
                    
                    // ユーザに登録した座標
                    var marker2 = new google.maps.Marker({
                         position:mapCurrentPositionMtu,
                         map: MapItem,
                         draggable:false,
                         animation: google.maps.Animation.DROP,
                         title:"ユーザ登録座標"
                    });
                    
                    if(zoomSet == 'オートフォーカス'){
                        bounds.extend(mapCurrentPositionMtu);
                    }
                    
                    var contentStr2 = '<p><div style="color:black;">ユーザ登録座標</div></p>';
                    
                    var myInfoWindow2 = new google.maps.InfoWindow({
                        content: contentStr2
                    });
                    
                    google.maps.event.addListenerOnce(marker2, "click", function(event) {
                        myInfoWindow2.open(MapItem, marker2);
                    });
                    google.maps.event.addListener(myInfoWindow2, "closeclick", function() {
                        google.maps.event.addListenerOnce(marker2, "click", function(event) {
                            myInfoWindow2.open(MapItem, marker2);
                        });
                    });
                }
                
                if(zoomSet == '前回の作業位置固定'){
                    var listener = google.maps.event.addListener(MapItem, "idle", function() {
                        var zoomLever = '{!JSENCODE(HTMLENCODE(mtu.f_mt__mtApointZoom__c))}';
                        if(zoomLever != ''){
                            MapItem.setZoom(Number('{!JSENCODE(HTMLENCODE(mtu.f_mt__mtApointZoom__c))}'));
                        }else{
                            MapItem.setZoom(15);
                        }
                        
                        google.maps.event.removeListener(listener);
                    });
                }
                
                MapItem.addListener("dragend", function ( evt ) {
                    document.getElementById("page:form:centerLocation").value = MapItem.getZoom() + ',' + MapItem.getCenter();
                    if(stopCenterMarkerUpdate == false){
                        updateCenterLocation();
                    }
                });
            }
        }catch (error) {
            alert('地図の読込中に失敗しました。開発元までお問い合わせください。ERR-26' + error);
        }
    }
    
    /*--------------------------------------------------
     * 営業メニューを隠す
     *-------------------------------------------------*/
    function hideArea(){
        $("#mapMenu").css("height", "30px");
        document.getElementById("hideLink").style.display = 'none';
        if( isMobile.any() ){
            document.getElementById("allSetDataAreaMobile").style.display = 'none';
        }else{
            document.getElementById("allSetDataArea").style.display = 'none';
        }
        document.getElementById("showLink").style.display = 'inline';
    }
    
    /*--------------------------------------------------
     * 営業メニューを表示する
     *-------------------------------------------------*/
    function showArea(){
        $("#mapMenu").css("height", "150px");
        document.getElementById("hideLink").style.display = 'inline';
        if( isMobile.any() ){
            document.getElementById("allSetDataAreaMobile").style.display = '';
        }else{
            document.getElementById("allSetDataArea").style.display = '';
        }
        document.getElementById("showLink").style.display = 'none';
    }
    
    /*--------------------------------------------------
     * [LightPicker]日付選択今日に設定する
     *-------------------------------------------------*/
    function setDatePickerToday(){
        var today = new Date();
        var date = today.getFullYear()+'/'+(today.getMonth()+1)+'/'+today.getDate();

        $(".SelectedDate").val(date);
        
        //removeClass
        $('#daySelectorToday').removeClass("daySelected");
        $('#daySelectorYerstoday').removeClass("daySelected");
        $('#daySelectorTomorrow').removeClass("daySelected");
        //addClass
        $('#daySelectorToday').addClass("daySelected");
        $('#daySelectorYerstoday').addClass("daySelector");
        $('#daySelectorTomorrow').addClass("daySelector");
    }
    /*--------------------------------------------------
     * [LightPicker]日付選択昨日に設定する
     *-------------------------------------------------*/
    function setDatePickerOneDayAgo(){
        var today = new Date();
        var startDate = new Date($(".SelectedDate").val());
        var OneDayAgoDate = addDays(startDate, -1);
        
        $(".SelectedDate").val(formatDate(OneDayAgoDate));
        
        //removeClass
        $('#daySelectorToday').removeClass("daySelected");
        $('#daySelectorYerstoday').removeClass("daySelected");
        $('#daySelectorTomorrow').removeClass("daySelected");
        //addClass
        $('#daySelectorToday').addClass("daySelector");
        $('#daySelectorYerstoday').addClass("daySelected");
        $('#daySelectorTomorrow').addClass("daySelector");
    }
    /*--------------------------------------------------
     * [LightPicker]日付選択明日に設定する
     *-------------------------------------------------*/
    function setDatePickerNextDay(){
        var today = new Date();
        var startDate = new Date($(".SelectedDate").val());
        var NextDayDate = addDays(startDate, 1);
        
        $(".SelectedDate").val(formatDate(NextDayDate));
        
        //removeClass
        $('#daySelectorToday').removeClass("daySelected");
        $('#daySelectorYerstoday').removeClass("daySelected");
        $('#daySelectorTomorrow').removeClass("daySelected");
        //addClass
        $('#daySelectorToday').addClass("daySelector");
        $('#daySelectorYerstoday').addClass("daySelector");
        $('#daySelectorTomorrow').addClass("daySelected");
    }

    /*--------------------------------------------------
     * 日付計算、＋1日
     *-------------------------------------------------*/
    function addDays(date, days) {
        var result = new Date(date);
        result.setDate(result.getDate() + days);
        return result;
    }
    
    /*--------------------------------------------------
     * 日付フォーマット
     *-------------------------------------------------*/
    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();
    
        if (month.length < 2) 
            month = '0' + month;
        if (day.length < 2) 
            day = '0' + day;
    
        return [year, month, day].join('/');
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去1日（作成日）
     *-------------------------------------------------*/
    function setDatePickerOneDay(){
        var today = new Date();
        var date = today.getFullYear()+'/'+(today.getMonth()+1)+'/'+today.getDate();

        $(".startDate").val(date);
        $(".endDate").val(date);
        
        //removeClass
        $('#daySelectorOneDay').removeClass("daySelected");
        $('#daySelectorOneWeek').removeClass("daySelected");
        $('#daySelectorOneMonth').removeClass("daySelected");
        $('#daySelectorThreeMonth').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDay').addClass("daySelected");
        $('#daySelectorOneWeek').addClass("daySelector");
        $('#daySelectorOneMonth').addClass("daySelector");
        $('#daySelectorThreeMonth').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去1週間（作成日）
     *-------------------------------------------------*/
    function setDatePickerOneWeek(){
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth(), date.getDate()-7);
        var lastDay = date;
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDate").val(strfirstday);
        $(".endDate").val(strlastday);
        //removeClass
        $('#daySelectorOneDay').removeClass("daySelected");
        $('#daySelectorOneWeek').removeClass("daySelected");
        $('#daySelectorOneMonth').removeClass("daySelected");
        $('#daySelectorThreeMonth').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDay').addClass("daySelector");
        $('#daySelectorOneWeek').addClass("daySelected");
        $('#daySelectorOneMonth').addClass("daySelector");
        $('#daySelectorThreeMonth').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去1カ月間（作成日）
     *-------------------------------------------------*/
    function setDatePickerOneMonth(){
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth()-1, date.getDate());
        var lastDay = date;
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDate").val(strfirstday);
        $(".endDate").val(strlastday);
        //removeClass
        $('#daySelectorOneDay').removeClass("daySelected");
        $('#daySelectorOneWeek').removeClass("daySelected");
        $('#daySelectorOneMonth').removeClass("daySelected");
        $('#daySelectorThreeMonth').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDay').addClass("daySelector");
        $('#daySelectorOneWeek').addClass("daySelector");
        $('#daySelectorOneMonth').addClass("daySelected");
        $('#daySelectorThreeMonth').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去3カ月間（作成日）
     *-------------------------------------------------*/
    function setDatePickerThreeMonth(){
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth()-3, date.getDate());
        var lastDay = date;
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDate").val(strfirstday);
        $(".endDate").val(strlastday);
        //removeClass
        $('#daySelectorOneDay').removeClass("daySelected");
        $('#daySelectorOneWeek').removeClass("daySelected");
        $('#daySelectorOneMonth').removeClass("daySelected");
        $('#daySelectorThreeMonth').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDay').addClass("daySelector");
        $('#daySelectorOneWeek').addClass("daySelector");
        $('#daySelectorOneMonth').addClass("daySelector");
        $('#daySelectorThreeMonth').addClass("daySelected");
    }
    
    /*--------------------------------------------------
     * [LightPicker]今日1日（訪問予約日）
     *-------------------------------------------------*/
    function setDatePickerOneDayScDate(){
        var today = new Date();
        var date = today.getFullYear()+'/'+(today.getMonth()+1)+'/'+today.getDate();

        $(".startDateScDate").val(date);
        $(".endDateScDate").val(date);
        
        //removeClass
        $('#daySelectorOneDayScDate').removeClass("daySelected");
        $('#daySelectorOneWeekScDate').removeClass("daySelected");
        $('#daySelectorOneMonthScDate').removeClass("daySelected");
        $('#daySelectorThreeMonthScDate').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDayScDate').addClass("daySelected");
        $('#daySelectorOneWeekScDate').addClass("daySelector");
        $('#daySelectorOneMonthScDate').addClass("daySelector");
        $('#daySelectorThreeMonthScDate').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]未来1週間（訪問予約日）
     *-------------------------------------------------*/
    function setDatePickerOneWeekScDate(){
        var date = new Date();
        var firstDay = date;
        var lastDay = new Date(date.getFullYear(), date.getMonth(), date.getDate()+7);
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDateScDate").val(strfirstday);
        $(".endDateScDate").val(strlastday);
        //removeClass
        $('#daySelectorOneDayScDate').removeClass("daySelected");
        $('#daySelectorOneWeekScDate').removeClass("daySelected");
        $('#daySelectorOneMonthScDate').removeClass("daySelected");
        $('#daySelectorThreeMonthScDate').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDayScDate').addClass("daySelector");
        $('#daySelectorOneWeekScDate').addClass("daySelected");
        $('#daySelectorOneMonthScDate').addClass("daySelector");
        $('#daySelectorThreeMonthScDate').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去1カ月間（訪問予約日）
     *-------------------------------------------------*/
    function setDatePickerOneMonthScDate(){
        var date = new Date();
        var firstDay = date;
        var lastDay = new Date(date.getFullYear(), date.getMonth()+1, date.getDate());
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDateScDate").val(strfirstday);
        $(".endDateScDate").val(strlastday);
        //removeClass
        $('#daySelectorOneDayScDate').removeClass("daySelected");
        $('#daySelectorOneWeekScDate').removeClass("daySelected");
        $('#daySelectorOneMonthScDate').removeClass("daySelected");
        $('#daySelectorThreeMonthScDate').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDayScDate').addClass("daySelector");
        $('#daySelectorOneWeekScDate').addClass("daySelector");
        $('#daySelectorOneMonthScDate').addClass("daySelected");
        $('#daySelectorThreeMonthScDate').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去3カ月間（訪問予約日）
     *-------------------------------------------------*/
    function setDatePickerThreeMonthScDate(){
        var date = new Date();
        var firstDay = date;
        var lastDay = new Date(date.getFullYear(), date.getMonth()+3, date.getDate());
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDateScDate").val(strfirstday);
        $(".endDateScDate").val(strlastday);
        //removeClass
        $('#daySelectorOneDayScDate').removeClass("daySelected");
        $('#daySelectorOneWeekScDate').removeClass("daySelected");
        $('#daySelectorOneMonthScDate').removeClass("daySelected");
        $('#daySelectorThreeMonthScDate').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDayScDate').addClass("daySelector");
        $('#daySelectorOneWeekScDate').addClass("daySelector");
        $('#daySelectorOneMonthScDate').addClass("daySelector");
        $('#daySelectorThreeMonthScDate').addClass("daySelected");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去1日（訪問日時）
     *-------------------------------------------------*/
    function setDatePickerOneDayvi(){
        var today = new Date();
        var date = today.getFullYear()+'/'+(today.getMonth()+1)+'/'+today.getDate();

        $(".startDatevi").val(date);
        $(".endDatevi").val(date);
        
        //removeClass
        $('#daySelectorOneDayvi').removeClass("daySelected");
        $('#daySelectorOneWeekvi').removeClass("daySelected");
        $('#daySelectorOneMonthvi').removeClass("daySelected");
        $('#daySelectorThreeMonthvi').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDayvi').addClass("daySelected");
        $('#daySelectorOneWeekvi').addClass("daySelector");
        $('#daySelectorOneMonthvi').addClass("daySelector");
        $('#daySelectorThreeMonthvi').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去1週間（訪問日時）
     *-------------------------------------------------*/
    function setDatePickerOneWeekvi(){
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth(), date.getDate()-7);
        var lastDay = date;
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDatevi").val(strfirstday);
        $(".endDatevi").val(strlastday);
        //removeClass
        $('#daySelectorOneDayvi').removeClass("daySelected");
        $('#daySelectorOneWeekvi').removeClass("daySelected");
        $('#daySelectorOneMonthvi').removeClass("daySelected");
        $('#daySelectorThreeMonthvi').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDayvi').addClass("daySelector");
        $('#daySelectorOneWeekvi').addClass("daySelected");
        $('#daySelectorOneMonthvi').addClass("daySelector");
        $('#daySelectorThreeMonthvi').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去1カ月間（訪問日時）
     *-------------------------------------------------*/
    function setDatePickerOneMonthvi(){
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth()-1, date.getDate());
        var lastDay = date;
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDatevi").val(strfirstday);
        $(".endDatevi").val(strlastday);
        //removeClass
        $('#daySelectorOneDayvi').removeClass("daySelected");
        $('#daySelectorOneWeekvi').removeClass("daySelected");
        $('#daySelectorOneMonthvi').removeClass("daySelected");
        $('#daySelectorThreeMonthvi').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDayvi').addClass("daySelector");
        $('#daySelectorOneWeekvi').addClass("daySelector");
        $('#daySelectorOneMonthvi').addClass("daySelected");
        $('#daySelectorThreeMonthvi').addClass("daySelector");
    }
    
    /*--------------------------------------------------
     * [LightPicker]過去3カ月間（訪問日時）
     *-------------------------------------------------*/
    function setDatePickerThreeMonthvi(){
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth()-3, date.getDate());
        var lastDay = date;
        
        var strfirstday = firstDay.getFullYear()+'/'+(firstDay.getMonth()+1)+'/'+firstDay.getDate();
        var strlastday = lastDay.getFullYear()+'/'+(lastDay.getMonth()+1)+'/'+lastDay.getDate();
        
        $(".startDatevi").val(strfirstday);
        $(".endDatevi").val(strlastday);
        //removeClass
        $('#daySelectorOneDayvi').removeClass("daySelected");
        $('#daySelectorOneWeekvi').removeClass("daySelected");
        $('#daySelectorOneMonthvi').removeClass("daySelected");
        $('#daySelectorThreeMonthvi').removeClass("daySelected");
        //addClass
        $('#daySelectorOneDayvi').addClass("daySelector");
        $('#daySelectorOneWeekvi').addClass("daySelector");
        $('#daySelectorOneMonthvi').addClass("daySelector");
        $('#daySelectorThreeMonthvi').addClass("daySelected");
    }
    
    /*--------------------------------------------------
     * リードの色設定
     *-------------------------------------------------*/
    function changeColor(thisElm,idx){
        document.getElementById('page:form:leadData:' + idx + ':colorSet').value = thisElm.value.replace('#','');
    }
    /*--------------------------------------------------
     * リードの色設定
     *-------------------------------------------------*/
    function changeColorRoute(thisElm,idx){
        document.getElementById('page:form:leadDataRoute:' + idx + ':colorSet').value = thisElm.value.replace('#','');
    }
    /*--------------------------------------------------
     * 取引先の色設定
     *-------------------------------------------------*/
    function changeColorAcc(thisElm,idx){
        document.getElementById('page:form:accData:' + idx + ':colorSet').value = thisElm.value.replace('#','');
    }
    /*--------------------------------------------------
     * 取引先の色設定
     *-------------------------------------------------*/
    function changeColorRouteAcc(thisElm,idx){
        document.getElementById('page:form:accDataRoute:' + idx + ':colorSet').value = thisElm.value.replace('#','');
    }
    /*--------------------------------------------------
     * ファイル添付画面を開く
     *-------------------------------------------------*/
    function openTempfileWindow(leadId) {
        window.open('/apex/f_mt__MapTLeadFileTemp?Id=' + leadId);
    }
    /*--------------------------------------------------
     * [Modal]訪問予定モーダル表示
     *-------------------------------------------------*/
    function loadingAddViData(leadId){
        document.getElementById('page:form:actionId').value = leadId;
        $('#modalAreaAddViData').fadeIn();
    }
    /*--------------------------------------------------
     * [Modal]商談モーダル表示
     *-------------------------------------------------*/
    function loadingAddOppData(leadId,accId){
        document.getElementById('page:form:actionId').value = leadId;
        //$('#modalAreaAddOppData').fadeIn();
        createNewOpp(accId);
    }
    function oppReload(){
      getOpps();
    }
    function createNewOpp(accId) {
      // 新規商談作成ページのURLを生成
      var newOppUrl = '{!URLFOR($Action.Opportunity.New)}';

      // 取引先IDをパラメータとして追加
      newOppUrl += '&accid=' + accId;

      // 新しいウィンドウで商談作成ページを開く
      //window.open(newOppUrl);
      var width = 700;
      var height = 500;

      // 画面の中心に表示するための位置計算
      var left = (window.innerWidth / 2) - (width / 2);
      var top = (window.innerHeight / 2) - (height / 2);

      var popup = window.open(newOppUrl, 'NewOpportunity', 'width=' + width + ',height=' + height + ',left=' + left + ',top=' + top);

      // ポップアップウィンドウを監視し、閉じたときにイベントを実行
      var timer = setInterval(function() {
          if (popup.closed) {
              clearInterval(timer);
              // ポップアップウィンドウが閉じた後に実行する処理をここに追加
              oppReload();
              
          }
      }, 1000); // 定期的にチェック
    }
    /*--------------------------------------------------
     * [Modal]訪問予定モーダル非表示
     *-------------------------------------------------*/
    function closeAddViData(){$('#modalAreaAddViData').fadeOut();}
    /*--------------------------------------------------
    /*--------------------------------------------------
     * [Modal]商談モーダル非表示
     *-------------------------------------------------*/
    function closeAddOppData(){$('#modalAreaAddOppData').fadeOut();}
    /*--------------------------------------------------
     * [Modal]退出警告モーダル表示
     *-------------------------------------------------*/
    function loadingWarningCheckOut(){$('#modalAreaWarningCheckOut').fadeIn();}
    /*--------------------------------------------------
     * [Modal]退出警告モーダル非表示
     *-------------------------------------------------*/
    function closeWarningCheckOut(){$('#modalAreaWarningCheckOut').fadeOut();}
    /*--------------------------------------------------
     * [Modal]エラーモーダル表示
     *-------------------------------------------------*/
    function loadingErrorView(){$('#modalAreaErrorView').fadeIn();}
    /*--------------------------------------------------
     * [Modal]エラーモーダル非表示
     *-------------------------------------------------*/
    function closeErrorView(){$('#modalAreaErrorView').fadeOut();}
    
    /*--------------------------------------------------
     * [Modal]DatePickerをセット
     *-------------------------------------------------*/
    function setDatepicker(){
        document.getElementById("page:form:startDate").value = document.getElementById("viStartDate").value;
        document.getElementById("page:form:endDate").value = document.getElementById("viEndDate").value;
        document.getElementById("viStartDate").value = '';
        document.getElementById("viEndDate").value = '';
        closeAddViData();
    }
    
    /*--------------------------------------------------
     * [Modal]OppDatePickerをセット
     *-------------------------------------------------*/
    function setOppDatepicker(){
        closeAddOppData();
    }
    
    /*--------------------------------------------------
     * 複数選択対応--選択した値を取得する
     *-------------------------------------------------*/
    function getSelectedValues(id){
        let result = [];
    
        let collection = document.querySelectorAll("#"+ id + " option");
        collection.forEach(function(x){
            if(x.selected){
                result.push(x.value);
    
            }
        });
        
        return result;
    }
    
    /*--------------------------------------------------
     * 訪問履歴をHidden項目に設定する
     *-------------------------------------------------*/
    function setAllSelectedValueForVisitStatus(strSelectedValues){
        document.getElementById("page:form:allSelectedValueForVisitStatus").value = strSelectedValues;
    }
    /*--------------------------------------------------
     * 動的項目をHidden項目に設定する
     *-------------------------------------------------*/
    function setAllSelectedValue1(strClassName,strSelectedValues){
        $('.'+strClassName+'').val(strSelectedValues);
    }
    /*--------------------------------------------------
     * リード情報領域以外クリックすると、リード情報を閉じる
     *-------------------------------------------------*/
    document.addEventListener('click', (e) => {
        var rpContent=$(e.target).closest('.cd-panel__content');
        var rp=e.target.closest('#rightPanel');
        
        // リード情報のコンテンツ領域以外にクリックする場合、リード情報パネルを閉じる
        if(rp && rpContent && rpContent.attr('class')!='cd-panel__content'){
            $('#rightPanel').removeClass("cd-panel--is-visible");
            changeViewMode();
        }
    })
    /*--------------------------------------------------
     * 商談情報領域以外クリックすると、商談情報を閉じる
     *-------------------------------------------------*/
    document.addEventListener('click', (e) => {
        var rpContent=$(e.target).closest('.cd-panel__content');
        var rp=e.target.closest('#rightOppPanel');
        
        // リード情報のコンテンツ領域以外にクリックする場合、リード情報パネルを閉じる
        if(rp && rpContent && rpContent.attr('class')!='cd-panel__content'){
            $('#rightOppPanel').removeClass("cd-panel--is-visible");
            changeViewMode();
        }
    })

    /*--------------------------------------------------
     * textarea項目に対してエスケープ処理
     *-------------------------------------------------*/
    function encodeTextarea() {
        var textarea = document.getElementsByClassName('escpTextArea');
        for (let i = 0; i < textarea.length; i++) {

          if(textarea[i].value != undefined){
            const unicodeString = textarea[i].value
            unicodeString = unicodeString.replace("\n","<br/>");
            const decodedString = JSON.parse(`"${unicodeString}"`);
            textarea[i].value = decodedString;
          }
        }
    }
    function changeLeadSc(thisElm){
        if(document.getElementById("page:form:isLeadSc").value=="検索する"){
            thisElm.classList.remove("mapTButtonBlue");
            thisElm.className = thisElm.className + ' mapTButton';
            document.getElementById("page:form:isLeadSc").value="検索しない";
        }else{
            thisElm.classList.remove("mapTButton");
            thisElm.className = thisElm.className + ' mapTButtonBlue';
            document.getElementById("page:form:isLeadSc").value="検索する";
        }
    }
    function changeAccSc(thisElm){
        if(document.getElementById("page:form:isAccSc").value=="検索する"){
            thisElm.classList.remove("mapTButtonBlue");
            thisElm.className = thisElm.className + ' mapTButton';
            document.getElementById("page:form:isAccSc").value="検索しない";
        }else{
            thisElm.classList.remove("mapTButton");
            thisElm.className = thisElm.className + ' mapTButtonBlue';
            document.getElementById("page:form:isAccSc").value="検索する";
        }
    }
    //------------------------------------
    // モバイルで最後に選択したタブ
    //------------------------------------
    function selectTab(selectTabName){
        document.getElementById("page:form:lastSelectTab").value = selectTabName;
    }
    //------------------------------------
    // 記録した条件で検索する
    //------------------------------------
    function readUserConditionSearch(){
        if(scToolSaveFlag == false){
            clearData();
            var isAccSc = document.getElementById("page:form:isAccSc").value;
            var isLeadSc = document.getElementById("page:form:isLeadSc").value;
            const conditions = "{!JSINHTMLENCODE(mtu.f_mt__mtSaveCondition__c)}".split('／');
            for(var i = 0; i < conditions.length; i++){
                var condVal = conditions[i].split('：');
                if(condVal != null && condVal[0] != null && condVal[0] != '' && condVal[1] != null && condVal[1] != ''){
                    if(condVal[0] == 'isAccSc' && condVal[1] == 'true' && isAccSc == '検索しない'){
                        document.getElementById("isAccSc").click();

                    }else if(condVal[0] == 'isLeadSc' && condVal[1] == 'true' && isLeadSc == '検索しない'){
                        document.getElementById("isLeadSc").click();

                    }else if(condVal[0] == 'scScDateNull'){
                        document.getElementById("page:form:" + condVal[0]).checked = true;
                    
                    }else if(condVal[0] == 'customSearch'){
                        document.getElementById("page:form:" + condVal[0]).value = condVal[1];

                    }else if(condVal[0] == 'customSearchAcc'){
                        document.getElementById("page:form:" + condVal[0]).value = condVal[1];
                
                    }else if(condVal[0] == 'scVisitStatus'){
                        setAllSelectedValueForVisitStatus(condVal[1]);
                    
                    }else if(condVal[0].indexOf('picker') == -1){
                        if(document.getElementById("page:form:" + condVal[0]) != undefined){
                            document.getElementById("page:form:" + condVal[0]).value = condVal[1];
                        }else if(document.getElementById(condVal[0]) != undefined){
                            setAllSelectedValueForVisitStatus(condVal[1]);
                        }
                    }else{
                        setAllSelectedValue1("page:form:" + condVal[0],condVal[1]);
                    }
                }
            }
        }
        document.getElementById("page:form:conditionSearchBtn").click();
    }
    //------------------------------------
    // 座標から地図の位置を移動
    //------------------------------------
    function moveClickLocation(thisElm,lat,lng){
        const elements = document.getElementsByClassName("custDivSelect");
        for(let i = 0; i < elements.length; i++){
            elements[i].classList.remove('custDivSelect');
        }
        thisElm.classList.add('custDivSelect');
          
        MapItem.panTo(new google.maps.LatLng(Number(lat),Number(lng)));
        MapItem.setZoom(16);
        changeMenu();
    }
    //------------------------------------
    // 座標から地図の位置を移動
    //------------------------------------
    function moveClickLocationNavi(lat,lng){
        MapItem.panTo(new google.maps.LatLng(Number(lat),Number(lng)));
        MapItem.setZoom(16);
        changeMenuNavi();
    }
    var menuCL = false;
    var menuNV = false;
    //------------------------------------
    // 右メニューの広がりを変更する
    //------------------------------------
    function changeMenu(){
        if( isMobile.any() ){
            if(menuCL == false){
                $('#customerListPanelHeader').animate({'width': '10%'},250);
                $('#customerListPanelContainer').animate({'width': '10%'},250);
                document.getElementById("customerListPanel").style.display = 'none';
                document.getElementById("customerListPanelTitle").style.display = 'none';
                document.getElementById("viewCustomerListPanel").style.display = 'table-cell';
                menuCL = true;
            }else{
                $('#customerListPanelHeader').animate({'width': '100%'},250);
                $('#customerListPanelContainer').animate({'width': '100%'},250);
                document.getElementById("customerListPanel").style.display = '';
                document.getElementById("customerListPanelTitle").style.display = '';
                document.getElementById("viewCustomerListPanel").style.display = 'none';
                menuCL = false;
            }
        }
    }
    //------------------------------------
    // 右メニューの広がりを変更する
    //------------------------------------
    function changeMenuNavi(){
        if( isMobile.any() ){
            if(menuNV == false){
                $('#navigationPanelHeader').animate({'width': '10%'},250);
                $('#navigationPanelContainer').animate({'width': '10%'},250);
                document.getElementById("navigationPanel").style.display = 'none';
                document.getElementById("navigationPanelTitle").style.display = 'none';
                document.getElementById("viewNavigationPanel").style.display = 'table-cell';
                menuNV = true;
            }else{
                $('#navigationPanelHeader').animate({'width': '100%'},250);
                $('#navigationPanelContainer').animate({'width': '100%'},250);
                document.getElementById("navigationPanel").style.display = '';
                document.getElementById("navigationPanelTitle").style.display = '';
                document.getElementById("viewNavigationPanel").style.display = 'none';
                menuNV = false;
            }
        }
    }
    //------------------------------------
    // 座標から詳細ポップアップを開く
    //------------------------------------
    function openPopupWindow(indexNum,strLatitude,strLongitude){
        var isOppSetChk = false;
        HideMenuWhenMarkerWasClick();
        // 前開いたInfoWindow画面を閉じます
        closeLastOpenedInfoWindow();
        //Markerを押下する時に、Menuを閉じます
        HideMenuWhenMarkerWasClick();
        // 経度緯度をパラメータとして、Apexに渡す、検索処理を実施する
        searchLeadInfo(strLatitude,strLongitude);
        $("#divItem"+indexNum).css("display", "");

        const contentString = '<div class="tooltipDetailButton" onclick="tooltipDetailButtonClick()" style="display:none;">詳細</div>' + 
                              '<span id="page:form:LeadItemOutputPanel" style="padding: 0px 0px 0px 0px;"></span>';
        const infowindowItemLead = new google.maps.InfoWindow({
            content: contentString,
        });
        
        lastOpenedInfoWindow = infowindowItemLead;
        isOppSetChk = true;
        const intervalId = setInterval(()=>{
          if(isOppSetChk){
            return;
          }
        }, 500);

        infowindowItemLead.open({
            anchor: markers[Number(indexNum)],
            MapItem,
            shouldFocus: false,
        });
    }
    //------------------------------------
    // 選択した座標の色を一覧で変更する
    //------------------------------------
    function changeCustomerListColor(strlat,strlng){
        const elements = document.getElementsByClassName("custDivSelect");
        for(let i = 0; i < elements.length; i++){
            elements[i].classList.remove('custDivSelect');
        }
        var setElm = document.getElementById("clp" + strlat + strlng);
        if(setElm != undefined){
            setElm.classList.add('custDivSelect');
            setElm.scrollIntoView({  
                behavior: 'smooth',
                block: 'center'
            });
        }
    }
  </script>
  <style>
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #map-container {
        width: 100%;
        font-family: "Roboto", sans-serif;
        box-sizing: border-box;
    }

    #map-container button {
        background: none;
        color: inherit;
        border: none;
        padding: 0;
        font: inherit;
        font-size: inherit;
        cursor: pointer;
    }

    #map {
        position: absolute;
        left: 22em;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0em;
        
        z-index: 1;
    }
    
    #mapMenu {
        position: absolute;
        left: 22em;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0em;
        background:White;
        height: 150px;
        z-index: 3;
        border: 1px solid #dcdcdc;
        user-select: none;
    }

    #locations-panel {
        position: absolute;
        left: 0;
        width: 26em;
        top: 0;
        bottom: 0;
        overflow-y: auto;
        background: white;
        padding: 0.5em;
        box-sizing: border-box;
        background-color: transparent;
        height: 70px;
        position: fixed;
        left: 0px;
        top: 150px;
        z-index: 2;
        margin-top: 25px;
    }

    @media only screen and (max-width: 876px) {
        #map {
            left: 0;
        }

        #locations-panel {
            width: 85%;
            right: 0;
            position: fixed;
            position: absolute;
            z-index: auto !important;
            padding-left: 20px !important;
            top: 0px !important;
            left: 0px;
        }
        #location-search-input{height: 3em !important;}
        #locations-panel-list h1.search-title > img{
            z-index: auto !important;
        }
        #location-search-button{margin-top:6px; !important;}
    }

    #locations-panel-list h1.search-title {
        font-size: 1em;
        font-weight: 500;
        margin: 0;
    }

    #locations-panel-list h1.search-title > img {
        vertical-align: bottom;
        margin-top: -1em;
        margin-left:-1em;
        
        position: relative;
        z-index: 5;
        top: 29px;
        left: -10px;
    }

    #locations-panel-list .search-input {
        margin-top: -0.4em;
        width: 100%;
        position: relative;
        padding-left:1em;
    }

    #locations-panel-list .search-input input {
        width: 100%;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 0.3em;
        height: 2.2em;
        box-sizing: border-box;
        padding: 0 2.5em 0 1em;
        font-size: 1em;
    }

    #locations-panel-list .search-input-overlay {
        position: absolute;
    }

    #locations-panel-list .search-input-overlay.search {
        right: 2px;
        top: 2px;
        bottom: 2px;
        width: 2.4em;
    }

    #locations-panel-list .search-input-overlay.search button {
        width: 100%;
        height: 100%;
        border-radius: 0.2em;
        color: black;
        background: transparent;
    }

    #locations-panel-list .search-input-overlay.search .icon {
        margin-top: 1em;
        vertical-align: top;
        cursor: pointer;
    }

    #locations-panel-list .section-name {
        font-weight: 500;
        font-size: 0.9em;
        margin: 1.8em 0 1em 1.5em;
    }

    #locations-panel-list .location-result {
        position: relative;
        padding: 0.8em 3.5em 0.8em 1.4em;
        border-bottom: 1px solid rgba(0, 0, 0, 0.12);
        cursor: pointer;
    }

    #locations-panel-list .location-result:first-of-type {
        -top: 1px solid rgba(0, 0, 0, 0.12);
    }

    #locations-panel-list .location-result:last-of-type {
        border-bottom: none;
    }

    #locations-panel-list .location-result.selected {
        outline: 2px solid #4285f4;
    }

    #locations-panel-list button.select-location {
        margin-bottom: 0.6em;
    }

    #locations-panel-list .location-result h2.name {
        font-size: 1em;
        font-weight: 500;
        margin: 0;
    }

    #locations-panel-list .location-result .address {
        font-size: 0.9em;
        margin-bottom: 0.5em;
    }

    #locations-panel-list .location-result .details-button {
        font-size: 0.9em;
        color: #7e7efd;
    }

    #locations-panel-list .location-result .distance {
        position: absolute;
        top: 0.9em;
        right: 0;
        text-align: center;
        font-size: 0.9em;
        width: 5em;
    }

    #locations-panel-list .show-directions {
        position: absolute;
        right: 1.2em;
        top: 2.3em;
    }

    #location-results-list {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    #locations-panel-details {
        padding: 1.4em;
        box-sizing: border-box;
        display: none;
    }

    #locations-panel-details .back-button {
        font-size: 1em;
        font-weight: 500;
        color: #7e7efd;
        display: block;
        text-decoration: none;
        background: none;
        border: none;
        cursor: pointer;
        padding: 0;
        font-family: inherit;
    }

    #locations-panel-details .back-button .icon {
        width: 20px;
        height: 20px;
        vertical-align: bottom;
        filter: invert(65%) sepia(87%) saturate(4695%) hue-rotate(217deg) brightness(105%) contrast(98%);
    }

    #locations-panel-details > header {
        text-align: center;
    }

    #locations-panel-details .banner {
        margin-top: 1em;
    }

    #locations-panel-details h2 {
        font-size: 1.1em;
        font-weight: 500;
        margin-bottom: 0.3em;
    }

    #locations-panel-details .distance {
        font-size: 0.9em;
        text-align: center;
    }

    #locations-panel-details .address {
        text-align: center;
        font-size: 0.9em;
        margin-top: 1.3em;
    }

    #locations-panel-details .atmosphere {
        text-align: center;
        font-size: 0.9em;
        margin: 0.8em 0;
    }

    #locations-panel-details .star-rating-numeric {
        color: #555;
    }

    #locations-panel-details .star-icon {
        width: 1.2em;
        height: 1.2em;
        margin-right: -0.3em;
        margin-top: -0.08em;
        vertical-align: top;
        filter: invert(88%) sepia(60%) saturate(2073%) hue-rotate(318deg) brightness(93%) contrast(104%);
    }

    #locations-panel-details .star-icon:last-of-type {
        margin-right: 0.2em;
    }

    #locations-panel-details .price-dollars {
        color: #555;
    }

    #locations-panel-details hr {
        height: 1px;
        color: rgba(0, 0, 0, 0.12);
        background-color: rgba(0, 0, 0, 0.12);
        border: none;
        margin-bottom: 1em;
    }

    #locations-panel-details .contact {
        font-size: 0.9em;
        margin: 0.8em 0;
        display: flex;
        align-items: center;
    }

    #locations-panel-details .contact .icon {
        flex: 0 0 auto;
        width: 1.5em;
        height: 1.5em;
    }

    #locations-panel-details .contact .right {
        padding: 0.1em 0 0 1em;
    }

    #locations-panel-details a {
        text-decoration: none;
        color: #7e7efd;
    }

    #locations-panel-details .hours .weekday {
        display: inline-block;
        width: 5em;
    }

    #locations-panel-details .website a {
        white-space: nowrap;
        display: inline-block;
        overflow: hidden;
        max-width: 16em;
        text-overflow: ellipsis;
    }

    #locations-panel-details p.attribution {
        color: #777;
        margin: 0;
        font-size: 0.8em;
        font-style: italic;
    }
    
    .TopMenuLinkElement{
        float:left;
        top:0px;
        margin-top:5px;
        margin-bottom:2px;
    }
    .TopMenuLinkElementMobile{
        float:left;
        top:0px;
        margin-top:5px;
    }
    .TopMenuLinkDiv{
        width:15%;
        height:135px;
        float:left;
        padding-top:20px;
    }
    #hideLink{cursor: pointer;}
    #showLink{cursor: pointer;}
    
    .tooltip {
        background: white;
        border-radius: 10px;
        box-sizing: border-box;
        margin-left: -100px;
        opacity: 8;
        padding: 10px;
        position: absolute;
        bottom: 50px; left: 50%;
        transition: all 0.15s linear;
        width: 330px;
        min-height:175px;
        height:auto;
        max-height:300px;
        z-index: 6;
        overflow: visible;
        color:black;
        box-shadow: 0 2px 7px 1px rgb(0 0 0 / 30%);
        font-size: 0.8em;
        line-height:1.2em;
        
        padding-right: 12px;
    }
    .tooltip::after {
        border-left: 16px solid transparent;
        border-right: 16px solid transparent;
        border-top: 16px solid white;
        content: "";
        height: 0; 
        margin-left: -16px;
        position: absolute;
        bottom: -16px; left: 50%;
        width: 0; 
    }
    
    .gm-style-iw-c{
        padding-right: 12px !important;
        padding-bottom: 12px !important;
        min-width: 360px !important;
        max-width: 360px !important;
    }
    
    /*詳細ボタン*/
    .tooltipDetailButton{
        margin-right:10px;
        margin-bottom: 5px;
        
        float:left;
        width: 70px;
        height:30px;
        line-height:30px;
        background-color: bisque;
        text-align: center;
        z-index: 8;
        border: 1px solid #dcdcdc;
        border-radius: 5px;
        cursor: pointer;
        
        color: black;
    }
    
    /*Lead追加ボタン*/
    .addLeadButton{
        margin-right:10px;
        margin-bottom: 5px;
        float:left;
        width: 70px;
        height:30px;
        line-height:30px;
        background-color: bisque;
        text-align: center;
        z-index: 8;
        border: 1px solid #dcdcdc;
        border-radius: 5px;
        cursor: pointer;
        
        color: black;
    }
    
    /*詳細の入室ボタン*/
    .tooltipDetailButton2{
        width: 60px;
        height:25px;
        line-height:25px;
        background-color: bisque;
        text-align: center;
        z-index: 8;
        border: 1px solid #dcdcdc;
        border-radius: 5px;
        cursor: pointer;
        padding-left: 10px;
        padding-right: 10px;        
        color: black;
    }
    
    .placeDiv {
        background: white;
        border-radius: 10px;
        box-sizing: border-box;
        margin-left: 20px;
        padding: 10px;
        transition: all 0.15s linear;
        width: 350px;
        
        z-index: 6;
        overflow: visible;
        color:black;
        box-shadow: 0 2px 7px 1px rgb(0 0 0 / 30%);
        font-size: 0.8em;
        line-height:1.2em;
        margin:0 auto;
    }
    .placeDiv:hover{
        background:#cad4e2;
    }
    .placeDivAfter {
        border-left: 16px solid transparent;
        border-right: 16px solid transparent;
        border-top: 16px solid white;
        content: "";
        margin-left: -16px;
        
        width: 25px;
        height:25px;
        margin-bottom:20px;
        margin:0 auto;
        
    }
    .means_of_transportation {
        background: white;
        border-radius: 10px;
        box-sizing: border-box;
        margin-left: 20px;
        padding: 10px 10px 10px 10px;
        transition: all 0.15s linear;
        z-index: 6;
        overflow: visible;
        color:black;
        box-shadow: 0 2px 7px 1px rgb(0 0 0 / 30%);
        font-size: 0.8em;
        margin:0 auto;
    }
    .means_of_transportation_title {
        box-sizing: border-box;
        transition: all 0.15s linear;
        width: 350px;
        z-index: 6;
        overflow: visible;
        color: black;
        line-height: 1.2em;
        margin: 0 auto;
        margin-bottom: 20px;
    }
    
    .placeDivWithoutBackground {
        border-radius: 10px;
        box-sizing: border-box;
        margin-left: 20px;
        padding: 10px;
        transition: all 0.15s linear;
        width: 350px;
        height:45px;
        z-index: 6;
        overflow: visible;
        color:black;
        font-size: 0.8em;
        line-height:1.2em;
        margin:0 auto;
        margin-bottom:15px;
    }

    /*検索機能対応-----Start*/
    .SearchTool {
        border-radius: 10px;
        box-sizing: border-box;
        margin-left: -150px;
        background: white;
        padding: 5px;
        position: absolute;
        top:15vh;
        left: 30%;
        transition: all 0.15s linear;
        width: 1080px;
        z-index: 6;
        overflow: visible;
        color:black;
        height: auto;
        
        font-size: 0.8em;
        line-height:1.2em;
        display:none;
    }

    #SearchComponent .OneLine{width:50%;min-height:25px;line-height:25px;margin-bottom: 5px;float: left;}
    #SearchComponent .OneLineTwoButtons{width:100%;min-height:25px;line-height:25px;margin-bottom: 5px;float: left;padding-left:10%;padding-right:10%;}
    #SearchComponent .OneLineTwoButtons a{float: left;}
    #SearchComponent .OneLineThreeButtons{width:100%;min-height:25px;line-height:25px;margin-bottom: 5px;float: left;padding-left:2%;padding-right:2%;}
    #SearchComponent .OneLineThreeButtons a{float: left;box-shadow: 0px 2.5px 6px #cad4e2, -3px -3px 6px #fff;border-radius:10px;}
    
    #SearchComponent .TwoLine{width:100%;min-height:25px;line-height:25px;margin-bottom: 5px;float: left;}

    #SearchComponent .tdTitle{width:200px;float:left;height:25px;line-height:25px;}
    #SearchComponent .tdConent{float:left;height:25px;line-height:25px;}
    #SearchComponent .tdConent .spanArea{float:left;height: 25px;min-width:60px;padding: 0px 0px 0px 0px;text-align:center;}
    #SearchComponent input{float:left;height: 25px;border: 1px solid #dee2e6;color: #6c757d;padding: .45rem .9rem;width:auto;}
    #SearchComponent .OneLine .linkButton{float:left;height: 25px;}
    #SearchComponent .daySelector{
        width:90px;float:left;
        height:25px;
        line-height:25px;
        box-sizing: border-box;
        margin: 0px;
        display: flex;
        -webkit-box-align: center;
        align-items: center;
        -webkit-box-pack: center;
        justify-content: center;
        color: rgb(132, 142, 156);
        cursor: pointer;
        font-size: 16px;
        line-height: 25px;
        padding: 4px;
        border-radius: 2px;
        min-width: 48px;
        white-space: nowrap;
    }
    #SearchComponent .daySelector:hover{
        background-color: rgb(71, 77, 87);
    }
    #SearchComponent .daySelected{
        width:90px;float:left;
        height:25px;
        line-height:25px;
        box-sizing: border-box;
        margin: 0px;
        display: flex;
        -webkit-box-align: center;
        align-items: center;
        -webkit-box-pack: center;
        justify-content: center;
        color: rgb(234, 236, 239);
        cursor: pointer;
        font-size: 16px;
        line-height: 25px;
        padding: 4px;
        border-radius: 2px;
        font-weight: 500;
        min-width: 48px;
        white-space: nowrap;
        background-color: rgb(71, 77, 87);
        text-align:center;
    }
    
    .UserSettingWindow {
        border-radius: 10px;
        box-sizing: border-box;
        margin-left: -50px;
        padding: 5px;
        position: absolute;
        top:27vh;
        left: 40%;
        transition: all 0.15s linear;
        width: 450px;
        z-index: 6;
        overflow: visible;
        color:black;
        font-size: 0.8em;
        line-height:1.2em;
        display:none;
    }
    
    .SelectedDateWindow {
        border-radius: 10px;
        box-sizing: border-box;
        margin-left: -200px;
        padding: 5px;
        position: absolute;
        top:260px;
        left: 40%;
        transition: all 0.15s linear;
        width: 500px;
        z-index: 6;
        overflow: visible;
        color:black;
        font-size: 0.8em;
        line-height:1.2em;
        display:none;
        height:200px;
    }
    
    .ModifyScheduleWindow {
        border-radius: 10px;
        box-sizing: border-box;
        margin-left: -200px;
        padding: 5px;
        position: absolute;
        top:260px;
        left: 40%;
        transition: all 0.15s linear;
        width: 500px;
        z-index: 10;
        overflow: visible;
        color:black;
        font-size: 0.8em;
        line-height:1.2em;
        display:none;
        height:200px;
    }
    
    .SearchToolDiv{
        min-height:420px;
        padding-left: 10px;
        padding-right: 10px;
        background-color: white;
        padding-bottom: 20px;
    }
    
    .DateSelectTable{Width:500px;}

    @media screen and (device-aspect-ratio: 375/667) {
        .tooltip {
            margin-left: 0px;
            left: 0px;
            width: 330px;
            height:175px;
            top: 0px;
        }
        
        .SearchTool{
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width:375px;
        }
        
        .UserSettingWindow {
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width: 375px;
        }
        
        #SearchComponent .OneLine{width:100%;/*margin: auto;*/}
        .SearchToolDiv{height:100vh;padding-left: 5px;padding-right: 5px;}
        
        #SearchComponent .OneLineTwoButtons{padding-left:5%;padding-right:5%;}
        .mapTButtonSize200{width:90px;}
        .mapTButtonSize200 span{width:90px;}
        
        .mapTButtonSize150_2{width:80px;font-size: 12px;}
        .mapTButton span{font-size: 10px;min-width: 100px;}
        .mapTButtonBlue span{font-size: 10px;min-width: 100px;}
        .NeedMobileAdjust{font-size: 12px;}
        
        #locations-panel {left: 0px;}
        
        #SearchComponent .tdTitle{padding-right:10px;width:auto;font-size: 10px;}
        #SearchComponent .OneLineThreeButtons{padding-left:0px;padding-right:0px;}
        #SearchComponent .OneLineThreeButtons a{width:80px;margin-left:10px;border-radius:10px;box-shadow: 0px 2.5px 6px #cad4e2, -3px -3px 6px #fff;}
        #SearchComponent .OneLineThreeButtons a span{width:80px;}
        #SearchComponent .daySelector{width: 70px;}
        
        .SelectedDateWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .ModifyScheduleWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .DateSelectTable{Width:360px;}
    }

    @media screen and (device-aspect-ratio: 9/16) {
        .tooltip {
            margin-left: 0px;
            left: 0px;
            width: 330px;
            height:175px;
            top: 0px;
        }
        
        .SearchTool{
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width:100%;
        }
        
        .UserSettingWindow {
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width: 100%;
        }
        
        #SearchComponent .OneLine{width:100%;}
        .SearchToolDiv{height:100vh;padding-left: 5px;padding-right: 5px;}
        
        #SearchComponent .OneLineTwoButtons{padding-left:5%;padding-right:5%;}
        .mapTButtonSize200{width:90px;}
        .mapTButtonSize200 span{width:90px;}
        
        .mapTButtonSize150_2{width:80px;font-size: 12px;}
        .mapTButton span{font-size: 10px;min-width: 100px;}
        .mapTButtonBlue span{font-size: 10px;min-width: 100px;}
        .NeedMobileAdjust{font-size: 12px;}
        
        #locations-panel {left: 0px;}
        #SearchComponent .tdTitle{padding-right:10px;width:auto;font-size: 10px;}
        #SearchComponent .OneLineThreeButtons{padding-left:0px;padding-right:0px;}
        #SearchComponent .OneLineThreeButtons a{width:80px;margin-left:10px;border-radius:10px;box-shadow: 0px 2.5px 6px #cad4e2, -3px -3px 6px #fff;}
        #SearchComponent .OneLineThreeButtons a span{width:80px;}
        #SearchComponent .daySelector{width: 70px;}
        
        .SelectedDateWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .ModifyScheduleWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .DateSelectTable{Width:360px;}
    }

    /*iPhone Xの場合*/
    @media only screen 
        and (device-width : 375px) 
        and (device-height : 812px) 
        and (-webkit-device-pixel-ratio : 3) {
        
        .tooltip {
            margin-left: 0px;
            left: 0px;
            width: 330px;
            height:175px;
            top: 0px;
        }
        
        .SearchTool{
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width: 375px;
        }
        
        .UserSettingWindow {
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width: 375px;
        }
        
        #SearchComponent .OneLine{width:100%;/*margin: auto;*/}
        .SearchToolDiv{height:100vh;padding-left: 5px;padding-right: 5px;}
        
        #SearchComponent .OneLineTwoButtons{padding-left:5%;padding-right:5%;}
        .mapTButtonSize200{width:90px;}
        .mapTButtonSize200 span{width:90px;}
        
        .mapTButtonSize150_2{width:80px;font-size: 12px;}
        .mapTButton span{font-size: 10px;min-width: 100px;}
        .mapTButtonBlue span{font-size: 10px;min-width: 100px;}
        .NeedMobileAdjust{font-size: 12px;}
        
        #locations-panel {left: 0px;}
        
        #SearchComponent .tdTitle{padding-right:10px;width:auto;font-size: 10px;}
        #SearchComponent .OneLineThreeButtons{padding-left:0px;padding-right:0px;}
        #SearchComponent .OneLineThreeButtons a{width:80px;margin-left:10px;border-radius:10px;box-shadow: 0px 2.5px 6px #cad4e2, -3px -3px 6px #fff;}
        #SearchComponent .OneLineThreeButtons a span{width:80px;}
        #SearchComponent .daySelector{width: 70px;}
        
        .SelectedDateWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .ModifyScheduleWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .DateSelectTable{Width:360px;}
    }

    /*iPhone 5の場合*/
    @media screen and (device-aspect-ratio: 40/71) {
        .tooltip {
            margin-left: 0px;
            left: 0px;
            width: 330px;
            height:175px;
            top: 0px;
        }
        
        .SearchTool{
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width:320px;
        }
        
        .UserSettingWindow {
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width:320px;
        }
        
        #SearchComponent .OneLine{width:100%;}
        .SearchToolDiv{height:100vh;padding-left: 5px;padding-right: 5px;}
        
        #SearchComponent .OneLineTwoButtons{padding-left:5%;padding-right:5%;}
        .mapTButtonSize200{width:90px;}
        .mapTButtonSize200 span{width:90px;}
        
        .mapTButtonSize150_2{width:80px;font-size: 12px;}
        .mapTButton span{font-size: 10px;min-width: 100px;}
        .mapTButtonBlue span{font-size: 10px;min-width: 100px;}
        .NeedMobileAdjust{font-size: 12px;}
        
        #locations-panel {left: 0px;}
        
        #SearchComponent .tdTitle{padding-right:10px;width:auto;font-size: 10px;}
        #SearchComponent .OneLineThreeButtons{padding-left:0px;padding-right:0px;}
        #SearchComponent .OneLineThreeButtons a{width:80px;margin-left:10px;border-radius:10px;box-shadow: 0px 2.5px 6px #cad4e2, -3px -3px 6px #fff;}
        #SearchComponent .OneLineThreeButtons a span{width:80px;}
        #SearchComponent .daySelector{width: 70px;}
        
        .SelectedDateWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .ModifyScheduleWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .DateSelectTable{Width:360px;}
    }


    @media only screen and (max-width: 768px) {
      .tooltip {
            margin-left: 0px;
            left: 0px;
            width: 350px;
            height:175px;
            top: 0px;
        }
        
        .SearchTool{
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width:100%;
        }
        
        .UserSettingWindow {
            top: 0px;
            left: 0px;
            margin-left: 0px;
            padding: 0px;
            width: 100%;
        }
        
        #SearchComponent .OneLine{width:100%;/*margin: auto;*/}
        .SearchToolDiv{height:100vh;padding-left: 5px;padding-right: 5px;}
        
        #SearchComponent .OneLineTwoButtons{padding-left:5%;padding-right:5%;}
        .mapTButtonSize200{width:90px;}
        .mapTButtonSize200 span{width:90px;}
        
        .mapTButtonSize150_2{width:80px;font-size: 12px;}
        .mapTButton span{font-size: 10px;min-width: 100px;}
        .mapTButtonBlue span{font-size: 10px;min-width: 100px;}
        .NeedMobileAdjust{font-size: 12px;}
        
        #locations-panel {left: 0px;}
        
        #SearchComponent .tdTitle{padding-right:10px;width:auto;font-size: 10px;}
        #SearchComponent .OneLineThreeButtons{padding-left:0px;padding-right:0px;}
        #SearchComponent .OneLineThreeButtons a{width:100px;margin-left:10px;border-radius:10px;box-shadow: 0px 2.5px 6px #cad4e2, -3px -3px 6px #fff;}
        #SearchComponent .OneLineThreeButtons a span{width:80px;}
        #SearchComponent .daySelector{width: 70px;}
        .SelectedDateWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .ModifyScheduleWindow{top:0px;left:0px;margin-left:0px;padding:0px;height: 200px;Width:100%;}
        .DateSelectTable{Width:360px;}
    }
    
    .tabs{
        position:relative;
        width: 100%;
        height: 170px;
        overflow: hidden;
        
        display: flex;
    }
    .tab-pane{
        display:inline-block;
        flex-grow: 1;
    }
    .tabs input[type='radio']{
        position:absolute;
        clip:rect(0,0,0,0)
    }
    .tab-item{
        display:block;
        height:34px;
        line-height:34px;
        cursor:pointer;
        padding:0 10px
    }

    .tabs input[type='radio']:checked+.tab-item{
        background:#dcdcdc;
        color:black;
    }

    .tab-content{
        position:absolute;
        border:1px solid #eee;
        padding:5px;
        left:0;
        top:36px;
        bottom:0;
        right:0;
        background:#fff;
    }

    .tab-content .addressItem{
        width:100%;
        float:left;
        height:25px;
        line-height:25px;
        padding: 0px 0px 0px 0px;
        overflow: hidden;
        float:left !important;
    }

    .tabs input[type='radio']:checked+.tab-item+.tab-content{
        z-index:1
    }

    .mapTButton span {
        letter-spacing: 0em;
    }
    .mapTButtonSizeMobile{
        width:32%;
        height:30px;
        line-height:30px;
    }
    .leadViewAreaSpan{
        padding:0px 10px 0px 10px;
    }
    /* モーダルCSS */
    .modalArea {
      display: none;
      position: fixed;
      z-index: 100; /*サイトによってここの数値は調整 */
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    .modalBg {
      width: 100%;
      height: 100%;
      background-color: rgba(30,30,30,0.9);
    }

    .modalWrapper {
      position: absolute;
      top: 50%;
      left: 50%;
      transform:translate(-50%,-50%);
      max-width: 500px;
      padding: 10px 30px;
      background-color: #fff;
      border-radius:10px;
    }

    .closeModal {
      position: absolute;
      top: 0.5rem;
      right: 1rem;
      cursor: pointer;
      font-size: 26px;
      color: black;
    }
    
    .table_sty {width: 100%;border: 1px solid #CCC;}
    .table_sty th,
    .table_sty td{
        border: 1px solid #CCC;
        background-color: #fafafa;
    }
        
    .table_sty th {
        vertical-align: middle;
        padding-left: 5px;
        background-color: #e5e5e5;
        padding-top: 5px;
        border: 1px solid #CCC;
    }
    table {
        border-collapse: collapse;
        border-spacing: 0;
    }
    .box_sty_dib {
        vertical-align: middle;
    }
    .VerticalAlignMiddle {vertical-align: middle;}
    .MarginRight10 {margin-right: 10px !important;padding:3px;}
    th {
        display: table-cell;
        vertical-align: inherit;
        font-weight: bold;
        text-align: -internal-center;
    }
    .table_sty td {
        word-break: break-all;
        padding-left: 5px;
        padding-top: 5px;
        padding-bottom: 5px;
    }
    td {
        display: table-cell;
        vertical-align: middle;
    }
    .pad-sei {
        width: 35px;
        display: inline-block;
        text-align: center;
    }
    /* テキストフォーム設定 */
    input[type="password"],
    input[type="email"],
    input[type="tel"]{
        background-color: #FFF;
        border: 1px solid #9AB8D3;
        box-sizing: border-box;
        font-size: 1rem;
        border-radius: 5px;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2) inset;
        -webkit-appearance: none;
    }
    input[type="text"]{
        background-color: #FFF;
        border: 1px solid #9AB8D3;
        box-sizing: border-box;
        font-size: 1rem;
        border-radius: 5px;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2) inset;
        -webkit-appearance: none;
        height:25px;
        width:65%;
    }
    textarea{
        background-color: #FFF;
        border: 1px solid #9AB8D3;
        box-sizing: border-box;
        font-size: 1rem;
        border-radius: 5px;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2) inset;
        -webkit-appearance: none;
        height:75px;
        width:98%;
    }
    
    .insertSuccessfulMessage{color:red;display: none;}
    .SaveSuccessfulMessage{color:red;display: none;}
    
    .ms-options-wrap{width:auto !important;
        padding-left: 0.45rem !important;
        
        min-width:150px; max-width: 190px;
        
        border-radius: 5px;
        box-shadow: 0 1px 1px rgb(0 0 0 / 20%) inset;
        -webkit-appearance: none;
        border: 1px solid #e9dfe5;
        height:25px;
        
        float:left;
    }
    .ms-search input{
        width: 100% !important;
        padding: 4px 5px !important;
        border: none !important;
        border-bottom: 1px groove !important;
        outline: none !important;
        float: none !important
    }
    .ms-selectall a{
        float: none !important;
        height: 25px !important;
    }
    
    .ms-options-wrap > .ms-options > ul label {
        font-size:11px !important;
        padding-left: 25px;
    }
    
    /* 日付、日付時間項目の現在日時リンクを無効化 */
    span.dateFormat{
        display:none;
    }
    .custDiv{
        background:white;
        padding:10px;
        border-radius:5px;
        font-size:12px;
        transition: all 0.15s linear;
        cursor:pointer;
        max-height: 185px;
        overflow: auto;
    }
    .custDiv:hover{
        background:#cad4e2;
    }
    .custDivSelect{
        background:#cad4e2;
        padding:10px;
        border-radius:5px;
        font-size:12px;
        transition: all 0.15s linear;
        cursor:pointer;
        max-height: 185px;
        overflow: auto;
    }
    .btnMini{
        background: white;
        border: none;
        color: #393939;
        box-shadow: 1px 1px 1px 1px #CAD4E2;
        border-radius: 5px;
        padding: 3px 20px 3px 20px;
        cursor: pointer;
        transition: all 0.15s linear;
    }
    .btnMini:hover{
        background:#a7bddb;
    }
  </style>
</apex:page>